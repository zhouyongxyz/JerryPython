<?xml version='1.0' encoding='UTF-8' standalone='no' ?><?xml-stylesheet type="text/xsl" href="compatibility_result.xsl"?>
<Result start="1515026461895" end="1515060565682" start_display="Thu Jan 04 08:41:01 CST 2018" end_display="Thu Jan 04 18:09:25 CST 2018" suite_name="CTS" suite_version="8.0_r4" suite_plan="cts" suite_build_number="4452367" report_version="5.0" command_line_args="cts --shards 5" devices="GFEDCBA2222222222,GFEDCBA3333333333,GFEDCBA5555555555,GFEDCBA1111111111,GFEDCBA4444444444" host_name="ts" os_name="Linux" os_version="4.10.0-42-generic" os_arch="amd64" java_vendor="Oracle Corporation" java_version="1.8.0_144">
  <Build build_abis_64="arm64-v8a" build_manufacturer="unknown" build_abis_32="armeabi-v7a,armeabi" build_product="car_mt2712" build_brand="mediatek" build_board="mt2712" build_serial="GFEDCBA1111111111" build_version_security_patch="2017-11-05" build_reference_fingerprint="" build_fingerprint="mediatek/car_mt2712/mt2712:8.0.0/OPR1.170623.032/71:user/test-keys" build_version_sdk="26" build_abis="arm64-v8a,armeabi-v7a,armeabi" build_device="mt2712" build_abi="arm64-v8a" build_id="OPR1.170623.032" build_model="Car on mt2712" build_abi2="" build_version_incremental="71" build_version_release="8.0.0" build_version_base_os="" build_type="user" build_tags="test-keys" />
  <Summary pass="774342" failed="474" modules_done="425" modules_total="432" />
<Module name="CtsAccessibilityServiceTestCases" abi="arm64-v8a" runtime="512909" done="true" pass="117">
    <TestCase name="android.accessibilityservice.cts.AccessibilityMagnificationTest">
      <Test result="fail" name="testSetScaleAndCenter">
        <Failure message="junit.framework.AssertionFailedError: Failed to apply center Y expected:&lt;256.0&gt; but was:&lt;270.0&gt;&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Failed to apply center Y expected:&lt;256.0&gt; but was:&lt;270.0&gt;
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:120)
at android.accessibilityservice.cts.AccessibilityMagnificationTest.testSetScaleAndCenter(AccessibilityMagnificationTest.java:107)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    </Module>
  <Module name="CtsAppSecurityHostTestCases" abi="arm64-v8a" runtime="8241194" done="true" pass="195">
    <TestCase name="android.appsecurity.cts.AdoptableHostTest">
      <Test result="fail" name="testApps">
        <Failure message="java.lang.AssertionError: Expected private volume; found [private:179,130 unmountable null, private mounted null]">
          <StackTrace>java.lang.AssertionError: Expected private volume; found [private:179,130 unmountable null, private mounted null]
	at android.appsecurity.cts.AdoptableHostTest.getAdoptionVolume(AdoptableHostTest.java:330)
	at android.appsecurity.cts.AdoptableHostTest.testApps(AdoptableHostTest.java:89)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testEjected">
        <Failure message="java.lang.AssertionError: Expected private volume; found [private:179,130 unmountable null, private mounted null]">
          <StackTrace>java.lang.AssertionError: Expected private volume; found [private:179,130 unmountable null, private mounted null]
	at android.appsecurity.cts.AdoptableHostTest.getAdoptionVolume(AdoptableHostTest.java:330)
	at android.appsecurity.cts.AdoptableHostTest.testEjected(AdoptableHostTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testPackageInstaller">
        <Failure message="java.lang.AssertionError: Expected private volume; found [private:179,130 unmountable null, private mounted null]">
          <StackTrace>java.lang.AssertionError: Expected private volume; found [private:179,130 unmountable null, private mounted null]
	at android.appsecurity.cts.AdoptableHostTest.getAdoptionVolume(AdoptableHostTest.java:330)
	at android.appsecurity.cts.AdoptableHostTest.testPackageInstaller(AdoptableHostTest.java:226)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testPrimaryStorage">
        <Failure message="java.lang.AssertionError: Expected private volume; found [private:179,130 unmountable null, private mounted null]">
          <StackTrace>java.lang.AssertionError: Expected private volume; found [private:179,130 unmountable null, private mounted null]
	at android.appsecurity.cts.AdoptableHostTest.getAdoptionVolume(AdoptableHostTest.java:330)
	at android.appsecurity.cts.AdoptableHostTest.verifyPrimaryInternal(AdoptableHostTest.java:149)
	at android.appsecurity.cts.AdoptableHostTest.testPrimaryStorage(AdoptableHostTest.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.appsecurity.cts.DirectBootHostTest">
      <Test result="fail" name="testAutomotiveNativeFbe">
        <Failure message="junit.framework.AssertionFailedError: Automotive devices must support native FBE">
          <StackTrace>junit.framework.AssertionFailedError: Automotive devices must support native FBE
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.appsecurity.cts.DirectBootHostTest.testAutomotiveNativeFbe(DirectBootHostTest.java:103)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testDirectBootEmulated">
        <Failure message="java.lang.AssertionError: on-device tests failed:">
          <StackTrace>java.lang.AssertionError: on-device tests failed:
com.android.cts.encryptionapp.EncryptionAppTest#testVerifyLockedAndDismiss:
junit.framework.AssertionFailedError: USER_UNLOCKED
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at com.android.cts.encryptionapp.EncryptionAppTest.testVerifyLockedAndDismiss(EncryptionAppTest.java:149)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)

	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:124)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:75)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:68)
	at android.appsecurity.cts.DirectBootHostTest.runDeviceTests(DirectBootHostTest.java:216)
	at android.appsecurity.cts.DirectBootHostTest.doDirectBootTest(DirectBootHostTest.java:188)
	at android.appsecurity.cts.DirectBootHostTest.testDirectBootEmulated(DirectBootHostTest.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.appsecurity.cts.DocumentsTest">
      <Test result="fail" name="testCreateExisting">
        <Failure message="java.lang.AssertionError: on-device tests failed:">
          <StackTrace>java.lang.AssertionError: on-device tests failed:
com.android.cts.documentclient.DocumentsClientTest#testCreateExisting:
java.lang.IllegalStateException: Activity didn't receive a Result in 30 seconds
at com.android.cts.documentclient.MyActivity.getResult(MyActivity.java:68)
at com.android.cts.documentclient.DocumentsClientTest.testCreateExisting(DocumentsClientTest.java:255)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)

	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:124)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:75)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:57)
	at android.appsecurity.cts.DocumentsTestCase.runDeviceTests(DocumentsTestCase.java:67)
	at android.appsecurity.cts.DocumentsTest.runDeviceTests(DocumentsTest.java:25)
	at android.appsecurity.cts.DocumentsTest.testCreateExisting(DocumentsTest.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testCreateNew">
        <Failure message="java.lang.AssertionError: on-device tests failed:">
          <StackTrace>java.lang.AssertionError: on-device tests failed:
com.android.cts.documentclient.DocumentsClientTest#testCreateNew:
java.lang.RuntimeException: Could not launch intent Intent { act=android.intent.action.MAIN flg=0x14000000 cmp=com.android.cts.documentclient/.MyActivity } within 45 seconds. Perhaps the main thread has not gone idle within a reasonable amount of time? There could be an animation or something constantly repainting the screen. Or the activity is doing network calls on creation? See the threaddump logs. For your reference the last time the event queue was idle before your activity launch request was 41916 and now the last time the queue went idle was: 60139. If these numbers are the same your activity might be hogging the event queue.
at android.support.test.runner.MonitoringInstrumentation.startActivitySync(MonitoringInstrumentation.java:407)
at android.test.InstrumentationTestCase.launchActivityWithIntent(InstrumentationTestCase.java:125)
at android.test.InstrumentationTestCase.launchActivity(InstrumentationTestCase.java:103)
at com.android.cts.documentclient.DocumentsClientTestCase.setUp(DocumentsClientTestCase.java:71)
at com.android.cts.documentclient.DocumentsClientTest.setUp(Unknown Source:0)
at junit.framework.TestCase.runBare(TestCase.java:132)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)

	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:124)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:75)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:57)
	at android.appsecurity.cts.DocumentsTestCase.runDeviceTests(DocumentsTestCase.java:67)
	at android.appsecurity.cts.DocumentsTest.runDeviceTests(DocumentsTest.java:25)
	at android.appsecurity.cts.DocumentsTest.testCreateNew(DocumentsTest.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testFindDocumentPathInScopedAccess">
        <Failure message="java.lang.AssertionError: on-device tests failed:">
          <StackTrace>java.lang.AssertionError: on-device tests failed:
com.android.cts.documentclient.DocumentsClientTest#testFindDocumentPathInScopedAccess:
junit.framework.AssertionFailedError: First list item
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at com.android.cts.documentclient.DocumentsClientTest.revealRoot(DocumentsClientTest.java:69)
at com.android.cts.documentclient.DocumentsClientTest.findRoot(DocumentsClientTest.java:78)
at com.android.cts.documentclient.DocumentsClientTest.testFindDocumentPathInScopedAccess(DocumentsClientTest.java:475)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)

	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:124)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:75)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:57)
	at android.appsecurity.cts.DocumentsTestCase.runDeviceTests(DocumentsTestCase.java:67)
	at android.appsecurity.cts.DocumentsTest.runDeviceTests(DocumentsTest.java:25)
	at android.appsecurity.cts.DocumentsTest.testFindDocumentPathInScopedAccess(DocumentsTest.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testTransferDocument">
        <Failure message="java.lang.AssertionError: on-device tests failed:">
          <StackTrace>java.lang.AssertionError: on-device tests failed:
com.android.cts.documentclient.DocumentsClientTest#testTransferDocument:
java.lang.IllegalStateException: Activity didn't receive a Result in 30 seconds
at com.android.cts.documentclient.MyActivity.getResult(MyActivity.java:68)
at com.android.cts.documentclient.DocumentsClientTest.testTransferDocument(DocumentsClientTest.java:375)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)

	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:124)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:75)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:57)
	at android.appsecurity.cts.DocumentsTestCase.runDeviceTests(DocumentsTestCase.java:67)
	at android.appsecurity.cts.DocumentsTest.runDeviceTests(DocumentsTest.java:25)
	at android.appsecurity.cts.DocumentsTest.testTransferDocument(DocumentsTest.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testTree">
        <Failure message="java.lang.AssertionError: on-device tests failed:">
          <StackTrace>java.lang.AssertionError: on-device tests failed:
com.android.cts.documentclient.DocumentsClientTest#testTree:
junit.framework.AssertionFailedError: First list item
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at com.android.cts.documentclient.DocumentsClientTest.revealRoot(DocumentsClientTest.java:69)
at com.android.cts.documentclient.DocumentsClientTest.findRoot(DocumentsClientTest.java:78)
at com.android.cts.documentclient.DocumentsClientTest.testTree(DocumentsClientTest.java:268)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)

	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:124)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:75)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:57)
	at android.appsecurity.cts.DocumentsTestCase.runDeviceTests(DocumentsTestCase.java:67)
	at android.appsecurity.cts.DocumentsTest.runDeviceTests(DocumentsTest.java:25)
	at android.appsecurity.cts.DocumentsTest.testTree(DocumentsTest.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.appsecurity.cts.ExternalStorageHostTest">
      <Test result="fail" name="testMultiViewMoveConsistency">
        <Failure message="java.lang.AssertionError: on-device tests failed:">
          <StackTrace>java.lang.AssertionError: on-device tests failed:
com.android.cts.readexternalstorageapp.ReadMultiViewTest#testROAccess:
junit.framework.AssertionFailedError: able to write!
at junit.framework.Assert.fail(Assert.java:50)
at com.android.cts.externalstorageapp.CommonExternalStorageTest.assertFileReadOnlyAccess(CommonExternalStorageTest.java:329)
at com.android.cts.readexternalstorageapp.ReadMultiViewTest.testROAccess(ReadMultiViewTest.java:69)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)

	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:124)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:75)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:68)
	at android.appsecurity.cts.ExternalStorageHostTest.runDeviceTests(ExternalStorageHostTest.java:332)
	at android.appsecurity.cts.ExternalStorageHostTest.testMultiViewMoveConsistency(ExternalStorageHostTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.appsecurity.cts.StorageHostTest">
      <Test result="fail" name="testCache">
        <Failure message="java.lang.AssertionError: on-device tests failed:">
          <StackTrace>java.lang.AssertionError: on-device tests failed:
com.android.cts.storagestatsapp.StorageStatsTest#testCacheClearing:
junit.framework.AssertionFailedError: Expected roughly 33554432 but was 16797696 [UserHandle{0}]
at com.android.cts.storageapp.Utils.assertMostlyEquals(Utils.java:94)
at com.android.cts.storageapp.Utils.assertMostlyEquals(Utils.java:89)
at com.android.cts.storagestatsapp.StorageStatsTest.testCacheClearing(StorageStatsTest.java:301)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)

	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:124)
	at android.appsecurity.cts.StorageHostTest.runDeviceTests(StorageHostTest.java:239)
	at android.appsecurity.cts.StorageHostTest.testCache(StorageHostTest.java:167)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:52)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.android.tradefed.testtype.HostTest.runJUnit4Tests(HostTest.java:505)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:422)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testFullDisk">
        <Failure message="junit.framework.AssertionFailedError: Unexpected crashes while disk full: ">
          <StackTrace>junit.framework.AssertionFailedError: Unexpected crashes while disk full: 

01-04 09:46:39.517  2199  2217 E PackageManager: Failed to write settings, restoring backup
01-04 09:46:39.517  2199  2217 E PackageManager: java.io.IOException: write failed: ENOSPC (No space left on device)
01-04 09:46:39.517  2199  2217 E PackageManager: 	at libcore.io.IoBridge.write(IoBridge.java:558)
01-04 09:46:39.517  2199  2217 E PackageManager: 	at java.io.FileOutputStream.write(FileOutputStream.java:326)
01-04 09:46:39.517  2199  2217 E PackageManager: 	at sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:221)
01-04 09:46:39.517  2199  2217 E PackageManager: 	at sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:291)
01-04 09:46:39.517  2199  2217 E PackageManager: 	at sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:295)
01-04 09:46:39.517  2199  2217 E PackageManager: 	at sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:141)
01-04 09:46:39.517  2199  2217 E PackageManager: 	at java.io.OutputStreamWriter.flush(OutputStreamWriter.java:229)
01-04 09:46:39.517  2199  2217 E PackageManager: 	at org.kxml2.io.KXmlSerializer.flushBuffer(KXmlSerializer.java:81)
01-04 09:46:39.517  2199  2217 E PackageManager: 	at org.kxml2.io.KXmlSerializer.append(KXmlSerializer.java:53)
01-04 09:46:39.517  2199  2217 E PackageManager: 	at org.kxml2.io.KXmlSerializer.writeEscaped(KXmlSerializer.java:165)
01-04 09:46:39.517  2199  2217 E PackageManager: 	at org.kxml2.io.KXmlSerializer.attribute(KXmlSerializer.java:495)
01-04 09:46:39.517  2199  2217 E PackageManager: 	at com.android.server.pm.Settings$RuntimePermissionPersistence.writePermissionsSync(Settings.java:5369)
01-04 09:46:39.517  2199  2217 E PackageManager: 	at com.android.server.pm.Settings$RuntimePermissionPersistence.-wrap1(Unknown Source:0)
01-04 09:46:39.517  2199  2217 E PackageManager: 	at com.android.server.pm.Settings$RuntimePermissionPersistence$MyHandler.handleMessage(Settings.java:5668)
01-04 09:46:39.517  2199  2217 E PackageManager: 	at android.os.Handler.dispatchMessage(Handler.java:105)
01-04 09:46:39.517  2199  2217 E PackageManager: 	at android.os.Looper.loop(Looper.java:164)
01-04 09:46:39.517  2199  2217 E PackageManager: 	at android.os.HandlerThread.run(HandlerThread.java:65)
01-04 09:46:39.517  2199  2217 E PackageManager: Caused by: android.system.ErrnoException: write failed: ENOSPC (No space left on device)
01-04 09:46:39.517  2199  2217 E PackageManager: 	at libcore.io.Linux.writeBytes(Native Method)
01-04 09:46:39.517  2199  2217 E PackageManager: 	at libcore.io.Linux.write(Linux.java:286)
01-04 09:46:39.517  2199  2217 E PackageManager: 	at libcore.io.BlockGuardOs.write(BlockGuardOs.java:345)
01-04 09:46:39.517  2199  2217 E PackageManager: 	at libcore.io.IoBridge.write(IoBridge.java:553)
01-04 09:46:39.517  2199  2217 E PackageManager: 	... 16 more
01-04 09:46:39.594  2199  2217 E PackageManager: Failed to write settings, restoring backup
01-04 09:46:39.594  2199  2217 E PackageManager: java.io.IOException: write failed: ENOSPC (No space left on device)
01-04 09:46:39.594  2199  2217 E PackageManager: 	at libcore.io.IoBridge.write(IoBridge.java:558)
01-04 09:46:39.594  2199  2217 E PackageManager: 	at java.io.FileOutputStream.write(FileOutputStream.java:326)
01-04 09:46:39.594  2199  2217 E PackageManager: 	at sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:221)
01-04 09:46:39.594  2199  2217 E PackageManager: 	at sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:291)
01-04 09:46:39.594  2199  2217 E PackageManager: 	at sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:295)
01-04 09:46:39.594  2199  2217 E PackageManager: 	at sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:141)
01-04 09:46:39.594  2199  2217 E PackageManager: 	at java.io.OutputStreamWriter.flush(OutputStreamWriter.java:229)
01-04 09:46:39.594  2199  2217 E PackageManager: 	at org.kxml2.io.KXmlSerializer.flushBuffer(KXmlSerializer.java:81)
01-04 09:46:39.594  2199  2217 E PackageManager: 	at org.kxml2.io.KXmlSerializer.append(KXmlSerializer.java:53)
01-04 09:46:39.594  2199  2217 E PackageManager: 	at org.kxml2.io.KXmlSerializer.writeEscaped(KXmlSerializer.java:165)
01-04 09:46:39.594  2199  2217 E PackageManager: 	at org.kxml2.io.KXmlSerializer.attribute(KXmlSerializer.java:495)
01-04 09:46:39.594  2199  2217 E PackageManager: 	at com.android.server.pm.Settings$RuntimePermissionPersistence.writePermissionsSync(Settings.java:5369)
01-04 09:46:39.594  2199  2217 E PackageManager: 	at com.android.server.pm.Settings$RuntimePermissionPersistence.-wrap1(Unknown Source:0)
01-04 09:46:39.594  2199  2217 E PackageManager: 	at com.android.server.pm.Settings$RuntimePermissionPersistence$MyHandler.handleMessage(Settings.java:5668)
01-04 09:46:39.594  2199  2217 E PackageManager: 	at android.os.Handler.dispatchMessage(Handler.java:105)
01-04 09:46:39.594  2199  2217 E PackageManager: 	at android.os.Looper.loop(Looper.java:164)
01-04 09:46:39.594  2199  2217 E PackageManager: 	at android.os.HandlerThread.run(HandlerThread.java:65)
01-04 09:46:39.594  2199  2217 E PackageManager: Caused by: android.system.ErrnoException: write failed: ENOSPC (No space left on device)
01-04 09:46:39.594  2199  2217 E PackageManager: 	at libcore.io.Linux.writeBytes(Native Method)
01-04 09:46:39.594  2199  2217 E PackageManager: 	at libcore.io.Linux.write(Linux.java:286)
01-04 09:46:39.594  2199  2217 E PackageManager: 	at libcore.io.BlockGuardOs.write(BlockGuardOs.java:345)
01-04 09:46:39.594  2199  2217 E PackageManager: 	at libcore.io.IoBridge.write(IoBridge.java:553)
01-04 09:46:39.594  2199  2217 E PackageManager: 	... 16 more
01-04 09:46:39.610  2199  2217 E PackageManager: Failed to write settings, restoring backup
01-04 09:46:39.610  2199  2217 E PackageManager: java.io.IOException: write failed: ENOSPC (No space left on device)
01-04 09:46:39.610  2199  2217 E PackageManager: 	at libcore.io.IoBridge.write(IoBridge.java:558)
01-04 09:46:39.610  2199  2217 E PackageManager: 	at java.io.FileOutputStream.write(FileOutputStream.java:326)
01-04 09:46:39.610  2199  2217 E PackageManager: 	at sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:221)
01-04 09:46:39.610  2199  2217 E PackageManager: 	at sun.nio.cs.StreamEncoder.implFlushBuffer(StreamEncoder.java:291)
01-04 09:46:39.610  2199  2217 E PackageManager: 	at sun.nio.cs.StreamEncoder.implFlush(StreamEncoder.java:295)
01-04 09:46:39.610  2199  2217 E PackageManager: 	at sun.nio.cs.StreamEncoder.flush(StreamEncoder.java:141)
01-04 09:46:39.610  2199  2217 E PackageManager: 	at java.io.OutputStreamWriter.flush(OutputStreamWriter.java:229)
01-04 09:46:39.610  2199  2217 E PackageManager: 	at org.kxml2.io.KXmlSerializer.flushBuffer(KXmlSerializer.java:81)
01-04 09:46:39.610  2199  2217 E PackageManager: 	at org.kxml2.io.KXmlSerializer.append(KXmlSerializer.java:53)
01-04 09:46:39.610  2199  2217 E PackageManager: 	at org.kxml2.io.KXmlSerializer.writeEscaped(KXmlSerializer.java:165)
01-04 09:46:39.610  2199  2217 E PackageManager: 	at org.kxml2.io.KXmlSerializer.attribute(KXmlSerializer.java:495)
01-04 09:46:39.610  2199  2217 E PackageManager: 	at com.android.server.pm.Settings$RuntimePermissionPersistence.writePermissionsSync(Settings.java:5369)
01-04 09:46:39.610  2199  2217 E PackageManager: 	at com.android.server.pm.Settings$RuntimePermissionPersistence.-wrap1(Unknown Source:0)
01-04 09:46:39.610  2199  2217 E PackageManager: 	at com.android.server.pm.Settings$RuntimePermissionPersistence$MyHandler.handleMessage(Settings.java:5668)
01-04 09:46:39.610  2199  2217 E PackageManager: 	at android.os.Handler.dispatchMessage(Handler.java:105)
01-04 09:46:39.610  2199  2217 E PackageManager: 	at android.os.Looper.loop(Looper.java:164)
01-04 09:46:39.610  2199  2217 E PackageManager: 	at android.os.HandlerThread.run(HandlerThread.java:65)
01-04 09:46:39.610  2199  2217 E PackageManager: Caused by: android.system.ErrnoException: write failed: ENOSPC (No space left on device)
01-04 09:46:39.610  2199  2217 E PackageManager: 	at libcore.io.Linux.writeBytes(Native Method)
01-04 09:46:39.610  2199  2217 E PackageManager: 	at libcore.io.Linux.write(Linux.java:286)
01-04 09:46:39.610  2199  2217 E PackageManager: 	at libcore.io.BlockGuardOs.write(BlockGuardOs.java:345)
01-04 09:46:39.610  2199  2217 E PackageManager: 	at libcore.io.IoBridge.write(IoBridge.java:553)
01-04 09:46:39.610  2199  2217 E PackageManager: 	... 16 more
01-04 09:46:43.616  2199  6370 W AppOps  : Failed to write state, restoring backup.
01-04 09:46:43.616  2199  6370 W AppOps  : java.io.IOException: write failed: ENOSPC (No space left on device)
01-04 09:46:43.616  2199  6370 W AppOps  : 	at libcore.io.IoBridge.write(IoBridge.java:558)
01-04 09:46:43.616  2199  6370 W AppOps  : 	at java.io.FileOutputStream.write(FileOutputStream.java:326)
01-04 09:46:43.616  2199  6370 W AppOps  : 	at com.android.internal.util.FastXmlSerializer.flushBytes(FastXmlSerializer.java:233)
01-04 09:46:43.616  2199  6370 W AppOps  : 	at com.android.internal.util.FastXmlSerializer.flush(FastXmlSerializer.java:254)
01-04 09:46:43.616  2199  6370 W AppOps  : 	at com.android.internal.util.FastXmlSerializer.append(FastXmlSerializer.java:93)
01-04 09:46:43.616  2199  6370 W AppOps  : 	at com.android.internal.util.FastXmlSerializer.escapeAndAppendString(FastXmlSerializer.java:146)
01-04 09:46:43.616  2199  6370 W AppOps  : 	at com.android.internal.util.FastXmlSerializer.attribute(FastXmlSerializer.java:177)
01-04 09:46:43.616  2199  6370 W AppOps  : 	at com.android.server.AppOpsService.writeState(AppOpsService.java:1668)
01-04 09:46:43.616  2199  6370 W AppOps  : 	at com.android.server.AppOpsService$1$1.doInBackground(AppOpsService.java:103)
01-04 09:46:43.616  2199  6370 W AppOps  : 	at com.android.server.AppOpsService$1$1.doInBackground(AppOpsService.java:102)
01-04 09:46:43.616  2199  6370 W AppOps  : 	at android.os.AsyncTask$2.call(AsyncTask.java:333)
01-04 09:46:43.616  2199  6370 W AppOps  : 	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
01-04 09:46:43.616  2199  6370 W AppOps  : 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
01-04 09:46:43.616  2199  6370 W AppOps  : 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
01-04 09:46:43.616  2199  6370 W AppOps  : 	at java.lang.Thread.run(Thread.java:764)
01-04 09:46:43.616  2199  6370 W AppOps  : Caused by: android.system.ErrnoException: write failed: ENOSPC (No space left on device)
01-04 09:46:43.616  2199  6370 W AppOps  : 	at libcore.io.Linux.writeBytes(Native Method)
01-04 09:46:43.616  2199  6370 W AppOps  : 	at libcore.io.Linux.write(Linux.java:286)
01-04 09:46:43.616  2199  6370 W AppOps  : 	at libcore.io.BlockGuardOs.write(BlockGuardOs.java:345)
01-04 09:46:43.616  2199  6370 W AppOps  : 	at libcore.io.IoBridge.write(IoBridge.java:553)
01-04 09:46:43.616  2199  6370 W AppOps  : 	... 14 more
01-04 09:46:51.115  2199  2308 W System.err: java.io.IOException: write failed: ENOSPC (No space left on device)
01-04 09:46:51.116  2199  2308 W System.err: Caused by: android.system.ErrnoException: write failed: ENOSPC (No space left on device)
01-04 09:46:51.198  2199  2316 E TaskPersister: Unable to open android.util.AtomicFile@31df6d7 for persisting. java.io.IOException: write failed: ENOSPC (No space left on device)
01-04 09:46:53.744  2199  2231 E PackageManager: Unable to write package manager user packages state,  current changes will be lost at reboot
01-04 09:46:53.744  2199  2231 E PackageManager: java.io.IOException: write failed: ENOSPC (No space left on device)
01-04 09:46:53.744  2199  2231 E PackageManager: 	at libcore.io.IoBridge.write(IoBridge.java:558)
01-04 09:46:53.744  2199  2231 E PackageManager: 	at java.io.FileOutputStream.write(FileOutputStream.java:326)
01-04 09:46:53.744  2199  2231 E PackageManager: 	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82)
01-04 09:46:53.744  2199  2231 E PackageManager: 	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140)
01-04 09:46:53.744  2199  2231 E PackageManager: 	at com.android.internal.util.FastXmlSerializer.flush(FastXmlSerializer.java:255)
01-04 09:46:53.744  2199  2231 E PackageManager: 	at com.android.internal.util.FastXmlSerializer.endDocument(FastXmlSerializer.java:199)
01-04 09:46:53.744  2199  2231 E PackageManager: 	at com.android.server.pm.Settings.writePackageRestrictionsLPr(Settings.java:2171)
01-04 09:46:53.744  2199  2231 E PackageManager: 	at com.android.server.pm.PackageManagerService$PackageHandler.doHandleMessage(PackageManagerService.java:1733)
01-04 09:46:53.744  2199  2231 E PackageManager: 	at com.android.server.pm.PackageManagerService$PackageHandler.handleMessage(PackageManagerService.java:1424)
01-04 09:46:53.744  2199  2231 E PackageManager: 	at android.os.Handler.dispatchMessage(Handler.java:105)
01-04 09:46:53.744  2199  2231 E PackageManager: 	at android.os.Looper.loop(Looper.java:164)
01-04 09:46:53.744  2199  2231 E PackageManager: 	at android.os.HandlerThread.run(HandlerThread.java:65)
01-04 09:46:53.744  2199  2231 E PackageManager: 	at com.android.server.ServiceThread.run(ServiceThread.java:46)
01-04 09:46:53.744  2199  2231 E PackageManager: Caused by: android.system.ErrnoException: write failed: ENOSPC (No space left on device)
01-04 09:46:53.744  2199  2231 E PackageManager: 	at libcore.io.Linux.writeBytes(Native Method)
01-04 09:46:53.744  2199  2231 E PackageManager: 	at libcore.io.Linux.write(Linux.java:286)
01-04 09:46:53.744  2199  2231 E PackageManager: 	at libcore.io.BlockGuardOs.write(BlockGuardOs.java:345)
01-04 09:46:53.744  2199  2231 E PackageManager: 	at libcore.io.IoBridge.write(IoBridge.java:553)
01-04 09:46:53.744  2199  2231 E PackageManager: 	... 12 more
01-04 09:46:53.758  2199  2218 E DropBoxManagerService: Can't write: system_server_wtf
01-04 09:46:53.758  2199  2218 E DropBoxManagerService: java.io.IOException: write failed: ENOSPC (No space left on device)
01-04 09:46:53.758  2199  2218 E DropBoxManagerService: 	at libcore.io.IoBridge.write(IoBridge.java:558)
01-04 09:46:53.758  2199  2218 E DropBoxManagerService: 	at java.io.FileOutputStream.write(FileOutputStream.java:326)
01-04 09:46:53.758  2199  2218 E DropBoxManagerService: 	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82)
01-04 09:46:53.758  2199  2218 E DropBoxManagerService: 	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140)
01-04 09:46:53.758  2199  2218 E DropBoxManagerService: 	at java.io.FilterOutputStream.close(FilterOutputStream.java:158)
01-04 09:46:53.758  2199  2218 E DropBoxManagerService: 	at com.android.server.DropBoxManagerService.add(DropBoxManagerService.java:271)
01-04 09:46:53.758  2199  2218 E DropBoxManagerService: 	at com.android.server.DropBoxManagerService$2.add(DropBoxManagerService.java:130)
01-04 09:46:53.758  2199  2218 E DropBoxManagerService: 	at android.os.DropBoxManager.addText(DropBoxManager.java:283)
01-04 09:46:53.758  2199  2218 E DropBoxManagerService: 	at com.android.server.am.ActivityManagerService$22.run(ActivityManagerService.java:14705)
01-04 09:46:53.758  2199  2218 E DropBoxManagerService: 	at com.android.server.am.ActivityManagerService.addErrorToDropBox(ActivityManagerService.java:14712)
01-04 09:46:53.758  2199  2218 E DropBoxManagerService: 	at com.android.server.am.ActivityManagerService.handleApplicationWtfInner(ActivityManagerService.java:14500)
01-04 09:46:53.758  2199  2218 E DropBoxManagerService: 	at com.android.server.am.ActivityManagerService$21.run(ActivityManagerService.java:14470)
01-04 09:46:53.758  2199  2218 E DropBoxManagerService: 	at android.os.Handler.handleCallback(Handler.java:789)
01-04 09:46:53.758  2199  2218 E DropBoxManagerService: 	at android.os.Handler.dispatchMessage(Handler.java:98)
01-04 09:46:53.758  2199  2218 E DropBoxManagerService: 	at android.os.Looper.loop(Looper.java:164)
01-04 09:46:53.758  2199  2218 E DropBoxManagerService: 	at android.os.HandlerThread.run(HandlerThread.java:65)
01-04 09:46:53.758  2199  2218 E DropBoxManagerService: 	at com.android.server.ServiceThread.run(ServiceThread.java:46)
01-04 09:46:53.758  2199  2218 E DropBoxManagerService: Caused by: android.system.ErrnoException: write failed: ENOSPC (No space left on device)
01-04 09:46:53.758  2199  2218 E DropBoxManagerService: 	at libcore.io.Linux.writeBytes(Native Method)
01-04 09:46:53.758  2199  2218 E DropBoxManagerService: 	at libcore.io.Linux.write(Linux.java:286)
01-04 09:46:53.758  2199  2218 E DropBoxManagerService: 	at libcore.io.BlockGuardOs.write(BlockGuardOs.java:345)
01-04 09:46:53.758  2199  2218 E DropBoxManagerService: 	at libcore.io.IoBridge.write(IoBridge.java:553)
01-04 09:46:53.758  2199  2218 E DropBoxManagerService: 	... 16 more
01-04 09:46:53.791  2199  2199 W NotificationService: Failed to save policy file, restoring backup
01-04 09:46:53.791  2199  2199 W NotificationService: java.io.IOException: write failed: ENOSPC (No space left on device)
01-04 09:46:53.791  2199  2199 W NotificationService: 	at libcore.io.IoBridge.write(IoBridge.java:558)
01-04 09:46:53.791  2199  2199 W NotificationService: 	at java.io.FileOutputStream.write(FileOutputStream.java:326)
01-04 09:46:53.791  2199  2199 W NotificationService: 	at com.android.internal.util.FastXmlSerializer.flushBytes(FastXmlSerializer.java:233)
01-04 09:46:53.791  2199  2199 W NotificationService: 	at com.android.internal.util.FastXmlSerializer.flush(FastXmlSerializer.java:254)
01-04 09:46:53.791  2199  2199 W NotificationService: 	at com.android.internal.util.FastXmlSerializer.append(FastXmlSerializer.java:93)
01-04 09:46:53.791  2199  2199 W NotificationService: 	at com.android.internal.util.FastXmlSerializer.append(FastXmlSerializer.java:120)
01-04 09:46:53.791  2199  2199 W NotificationService: 	at com.android.internal.util.FastXmlSerializer.attribute(FastXmlSerializer.java:175)
01-04 09:46:53.791  2199  2199 W NotificationService: 	at android.app.NotificationChannel.writeXml(NotificationChannel.java:601)
01-04 09:46:53.791  2199  2199 W NotificationService: 	at com.android.server.notification.RankingHelper.writeXml(RankingHelper.java:386)
01-04 09:46:53.791  2199  2199 W NotificationService: 	at com.android.server.notification.NotificationManagerService.writePolicyXml(NotificationManagerService.java:474)
01-04 09:46:53.791  2199  2199 W NotificationService: 	at com.android.server.notification.NotificationManagerService.handleSavePolicyFile(NotificationManagerService.java:457)
01-04 09:46:53.791  2199  2199 W NotificationService: 	at com.android.server.notification.NotificationManagerService.-wrap32(Unknown Source:0)
01-04 09:46:53.791  2199  2199 W NotificationService: 	at com.android.server.notification.NotificationManagerService$WorkerHandler.handleMessage(NotificationManagerService.java:4160)
01-04 09:46:53.791  2199  2199 W NotificationService: 	at android.os.Handler.dispatchMessage(Handler.java:105)
01-04 09:46:53.791  2199  2199 W NotificationService: 	at android.os.Looper.loop(Looper.java:164)
01-04 09:46:53.791  2199  2199 W NotificationService: 	at com.android.server.SystemServer.run(SystemServer.java:421)
01-04 09:46:53.791  2199  2199 W NotificationService: 	at com.android.server.SystemServer.main(SystemServer.java:260)
01-04 09:46:53.791  2199  2199 W NotificationService: 	at java.lang.reflect.Method.invoke(Native Method)
01-04 09:46:53.791  2199  2199 W NotificationService: 	at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:240)
01-04 09:46:53.791  2199  2199 W NotificationService: 	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:767)
01-04 09:46:53.791  2199  2199 W NotificationService: Caused by: android.system.ErrnoException: write failed: ENOSPC (No space left on device)
01-04 09:46:53.791  2199  2199 W NotificationService: 	at libcore.io.Linux.writeBytes(Native Method)
01-04 09:46:53.791  2199  2199 W NotificationService: 	at libcore.io.Linux.write(Linux.java:286)
01-04 09:46:53.791  2199  2199 W NotificationService: 	at libcore.io.BlockGuardOs.write(BlockGuardOs.java:345)
01-04 09:46:53.791  2199  2199 W NotificationService: 	at libcore.io.IoBridge.write(IoBridge.java:553)
01-04 09:46:53.791  2199  2199 W NotificationService: 	... 19 more
	at android.appsecurity.cts.StorageHostTest.testFullDisk(StorageHostTest.java:225)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:52)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.android.tradefed.testtype.HostTest.runJUnit4Tests(HostTest.java:505)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:422)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testVerifyQuota">
        <Failure message="java.lang.AssertionError: on-device tests failed:">
          <StackTrace>java.lang.AssertionError: on-device tests failed:
com.android.cts.storagestatsapp.StorageStatsTest#testVerifyQuota:
junit.framework.AssertionFailedError: You're running kernel 3.18 or newer (4.9.44+) which means that CONFIG_QUOTA, CONFIG_QFMT_V2, CONFIG_QUOTACTL and the 'quota' fstab option on /data are required
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at com.android.cts.storagestatsapp.StorageStatsTest.testVerifyQuota(StorageStatsTest.java:89)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)

	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:124)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:75)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:57)
	at android.appsecurity.cts.StorageHostTest.testVerifyQuota(StorageHostTest.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:52)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.android.tradefed.testtype.HostTest.runJUnit4Tests(HostTest.java:505)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:422)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    </Module>
  <Module name="CtsAppTestCases" abi="arm64-v8a" runtime="1149093" done="true" pass="397">
    <TestCase name="android.app.cts.ActivityManagerTest">
      <Test result="fail" name="testTimeTrackingAPI_ChainedActivityExit">
        <Failure message="junit.framework.AssertionFailedError: expected:&lt;1&gt; but was:&lt;3&gt;&#13;">
          <StackTrace>junit.framework.AssertionFailedError: expected:&lt;1&gt; but was:&lt;3&gt;
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:67)
at junit.framework.Assert.assertEquals(Assert.java:199)
at junit.framework.Assert.assertEquals(Assert.java:205)
at android.app.cts.ActivityManagerTest.testTimeTrackingAPI_ChainedActivityExit(ActivityManagerTest.java:567)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testTimeTrackingAPI_SimpleStartExit">
        <Failure message="junit.framework.AssertionFailedError: expected:&lt;3&gt; but was:&lt;1&gt;&#13;">
          <StackTrace>junit.framework.AssertionFailedError: expected:&lt;3&gt; but was:&lt;1&gt;
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:67)
at junit.framework.Assert.assertEquals(Assert.java:199)
at junit.framework.Assert.assertEquals(Assert.java:205)
at android.app.cts.ActivityManagerTest.testTimeTrackingAPI_SimpleStartExit(ActivityManagerTest.java:470)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.app.cts.DisplayTest">
      <Test result="fail" name="testRotation">
        <Failure message="junit.framework.AssertionFailedError: width from original display instance should have changed&#13;">
          <StackTrace>junit.framework.AssertionFailedError: width from original display instance should have changed
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertFalse(Assert.java:34)
at android.app.cts.DisplayTest.testRotation(DisplayTest.java:67)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.app.cts.SystemFeaturesTest">
      <Test result="fail" name="testLocationFeatures">
        <Failure message="junit.framework.AssertionFailedError: PackageManager#hasSystemFeature should NOT return true for android.hardware.location.network&#13;">
          <StackTrace>junit.framework.AssertionFailedError: PackageManager#hasSystemFeature should NOT return true for android.hardware.location.network
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertFalse(Assert.java:34)
at android.app.cts.SystemFeaturesTest.assertNotAvailable(SystemFeaturesTest.java:508)
at android.app.cts.SystemFeaturesTest.testLocationFeatures(SystemFeaturesTest.java:257)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    </Module>
  <Module name="CtsAppUsageHostTestCases" abi="arm64-v8a" runtime="3" done="false" pass="0">
    <TestCase name="android.app.usage.cts.AppIdleHostTest">
      <Test result="fail" name="testAppIsNotIdleAfterBeingLaunched">
        <Failure message="com.android.tradefed.device.DeviceUnresponsiveException: Attempted shell am start -W -a android.intent.action.MAIN -c android.intent.category.HOME multiple times on device GFEDCBA1111111111 without communication success. Aborting.">
          <StackTrace>com.android.tradefed.device.DeviceUnresponsiveException: Attempted shell am start -W -a android.intent.action.MAIN -c android.intent.category.HOME multiple times on device GFEDCBA1111111111 without communication success. Aborting.
	at com.android.tradefed.device.NativeDevice.performDeviceAction(NativeDevice.java:1670)
	at com.android.tradefed.device.NativeDevice.executeShellCommand(NativeDevice.java:560)
	at com.android.tradefed.device.NativeDevice.executeShellCommand(NativeDevice.java:588)
	at android.app.usage.cts.AppIdleHostTest.startAndStopTestApp(AppIdleHostTest.java:88)
	at android.app.usage.cts.AppIdleHostTest.testAppIsNotIdleAfterBeingLaunched(AppIdleHostTest.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
  </Module>
  <Module name="CtsBionicTestCases" abi="arm64-v8a" runtime="139257" done="true" pass="1809">
    <TestCase name="sys_msg">
      <Test result="fail" name="smoke">
        <Failure message="bionic/tests/sys_msg_test.cpp:(46) Failure in test sys_msg.smoke&#13;">
          <StackTrace>bionic/tests/sys_msg_test.cpp:(46) Failure in test sys_msg.smoke
Expected: (id) != (-1), actual: -1 vs -1
sys_msg.smoke exited with exitcode 1.</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="sys_sem">
      <Test result="fail" name="smoke">
        <Failure message="bionic/tests/sys_sem_test.cpp:(46) Failure in test sys_sem.smoke&#13;">
          <StackTrace>bionic/tests/sys_sem_test.cpp:(46) Failure in test sys_sem.smoke
Expected: (id) != (-1), actual: -1 vs -1
sys_sem.smoke exited with exitcode 1.</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="sys_shm">
      <Test result="fail" name="smoke">
        <Failure message="bionic/tests/sys_shm_test.cpp:(46) Failure in test sys_shm.smoke&#13;">
          <StackTrace>bionic/tests/sys_shm_test.cpp:(46) Failure in test sys_shm.smoke
Expected: (id) != (-1), actual: -1 vs -1
sys_shm.smoke exited with exitcode 1.</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    </Module>
  <Module name="CtsCarrierApiTestCases" abi="arm64-v8a" runtime="813" done="true" pass="1">
    <TestCase name="android.carrierapi.cts.CarrierApiTest">
      <Test result="fail" name="testGetIccAuthentication">
        <Failure message="junit.framework.AssertionFailedError: This test requires a SIM card with carrier privilege rule on it.&#13;">
          <StackTrace>junit.framework.AssertionFailedError: This test requires a SIM card with carrier privilege rule on it.
Cert hash: 61ed377e85d386a8dfee6b864bd85b0bfaa5af81
Visit https://source.android.com/devices/tech/config/uicc.html
at junit.framework.Assert.fail(Assert.java:50)
at android.carrierapi.cts.CarrierApiTest.failMessage(CarrierApiTest.java:100)
at android.carrierapi.cts.CarrierApiTest.testGetIccAuthentication(CarrierApiTest.java:138)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testHasCarrierPrivileges">
        <Failure message="junit.framework.AssertionFailedError: This test requires a SIM card with carrier privilege rule on it.&#13;">
          <StackTrace>junit.framework.AssertionFailedError: This test requires a SIM card with carrier privilege rule on it.
Cert hash: 61ed377e85d386a8dfee6b864bd85b0bfaa5af81
Visit https://source.android.com/devices/tech/config/uicc.html
at junit.framework.Assert.fail(Assert.java:50)
at android.carrierapi.cts.CarrierApiTest.failMessage(CarrierApiTest.java:100)
at android.carrierapi.cts.CarrierApiTest.testHasCarrierPrivileges(CarrierApiTest.java:114)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testSendDialerSpecialCode">
        <Failure message="junit.framework.AssertionFailedError: This test requires a SIM card with carrier privilege rule on it.&#13;">
          <StackTrace>junit.framework.AssertionFailedError: This test requires a SIM card with carrier privilege rule on it.
Cert hash: 61ed377e85d386a8dfee6b864bd85b0bfaa5af81
Visit https://source.android.com/devices/tech/config/uicc.html
at junit.framework.Assert.fail(Assert.java:50)
at android.carrierapi.cts.CarrierApiTest.failMessage(CarrierApiTest.java:100)
at android.carrierapi.cts.CarrierApiTest.testSendDialerSpecialCode(CarrierApiTest.java:155)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
  </Module>
  <Module name="CtsDevicePolicyManagerTestCases" abi="arm64-v8a" runtime="11212687" done="true" pass="250">
    <TestCase name="com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest">
      <Test result="fail" name="testWipeData_managedProfile">
        <Failure message="java.lang.AssertionError: Failed to successfully run device tests for com.android.cts.comp: Instrumentation run failed due to 'Process crashed.'">
          <StackTrace>java.lang.AssertionError: Failed to successfully run device tests for com.android.cts.comp: Instrumentation run failed due to 'Process crashed.'
	at com.android.cts.devicepolicy.BaseDevicePolicyTest.runDeviceTestsAsUser(BaseDevicePolicyTest.java:327)
	at com.android.cts.devicepolicy.BaseDevicePolicyTest.runDeviceTestsAsUser(BaseDevicePolicyTest.java:289)
	at com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest.testWipeData_managedProfile(DeviceOwnerPlusProfileOwnerTest.java:309)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="com.android.cts.devicepolicy.MixedDeviceOwnerTest">
      <Test result="fail" name="testPackageInstallUserRestrictions">
        <Failure message="java.lang.AssertionError: On-device tests failed:">
          <StackTrace>java.lang.AssertionError: On-device tests failed:
com.android.cts.packageinstaller.ManualPackageInstallTest#testManualInstallSucceeded:
junit.framework.AssertionFailedError
at junit.framework.Assert.fail(Assert.java:48)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertTrue(Assert.java:27)
at com.android.cts.packageinstaller.BasePackageInstallTest.assertInstallPackage(BasePackageInstallTest.java:130)
at com.android.cts.packageinstaller.ManualPackageInstallTest.testManualInstallSucceeded(ManualPackageInstallTest.java:46)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)

	at com.android.cts.devicepolicy.BaseDevicePolicyTest.runDeviceTestsAsUser(BaseDevicePolicyTest.java:344)
	at com.android.cts.devicepolicy.BaseDevicePolicyTest.runDeviceTestsAsUser(BaseDevicePolicyTest.java:289)
	at com.android.cts.devicepolicy.DeviceAndProfileOwnerTest.testPackageInstallUserRestrictions(DeviceAndProfileOwnerTest.java:593)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="com.android.cts.devicepolicy.MixedManagedProfileOwnerTest">
      <Test result="fail" name="testPackageInstallUserRestrictions">
        <Failure message="java.lang.AssertionError: On-device tests failed:">
          <StackTrace>java.lang.AssertionError: On-device tests failed:
com.android.cts.packageinstaller.ManualPackageInstallTest#testManualInstallSucceeded:
junit.framework.AssertionFailedError: Install button not found
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertNotNull(Assert.java:218)
at com.android.cts.packageinstaller.ManualPackageInstallTest.automateInstallClick(ManualPackageInstallTest.java:103)
at com.android.cts.packageinstaller.ManualPackageInstallTest.installPackage(ManualPackageInstallTest.java:97)
at com.android.cts.packageinstaller.BasePackageInstallTest.assertInstallPackage(BasePackageInstallTest.java:124)
at com.android.cts.packageinstaller.ManualPackageInstallTest.testManualInstallSucceeded(ManualPackageInstallTest.java:46)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)

	at com.android.cts.devicepolicy.BaseDevicePolicyTest.runDeviceTestsAsUser(BaseDevicePolicyTest.java:344)
	at com.android.cts.devicepolicy.BaseDevicePolicyTest.runDeviceTestsAsUser(BaseDevicePolicyTest.java:289)
	at com.android.cts.devicepolicy.DeviceAndProfileOwnerTest.testPackageInstallUserRestrictions(DeviceAndProfileOwnerTest.java:593)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testScreenCaptureDisabled_allowedPrimaryUser">
        <Failure message="java.lang.AssertionError: On-device tests failed:">
          <StackTrace>java.lang.AssertionError: On-device tests failed:
com.android.cts.deviceandprofileowner.ScreenCaptureDisabledTest#testScreenCapturePossible:
junit.framework.AssertionFailedError
at junit.framework.Assert.fail(Assert.java:48)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertNotNull(Assert.java:218)
at junit.framework.Assert.assertNotNull(Assert.java:211)
at com.android.cts.deviceandprofileowner.ScreenCaptureDisabledTest.testScreenCapturePossible(ScreenCaptureDisabledTest.java:68)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)

	at com.android.cts.devicepolicy.BaseDevicePolicyTest.runDeviceTestsAsUser(BaseDevicePolicyTest.java:344)
	at com.android.cts.devicepolicy.BaseDevicePolicyTest.runDeviceTestsAsUser(BaseDevicePolicyTest.java:289)
	at com.android.cts.devicepolicy.DeviceAndProfileOwnerTest.executeDeviceTestMethod(DeviceAndProfileOwnerTest.java:723)
	at com.android.cts.devicepolicy.MixedManagedProfileOwnerTest.testScreenCaptureDisabled_allowedPrimaryUser(MixedManagedProfileOwnerTest.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="com.android.cts.devicepolicy.MixedProfileOwnerTest">
      <Test result="fail" name="testPackageInstallUserRestrictions">
        <Failure message="java.lang.AssertionError: On-device tests failed:">
          <StackTrace>java.lang.AssertionError: On-device tests failed:
com.android.cts.packageinstaller.ManualPackageInstallTest#testManualInstallBlocked:
junit.framework.AssertionFailedError: Policy transparency dialog icon not found
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertNotNull(Assert.java:218)
at com.android.cts.packageinstaller.ManualPackageInstallTest.automateDismissInstallBlockedDialog(ManualPackageInstallTest.java:110)
at com.android.cts.packageinstaller.ManualPackageInstallTest.testManualInstallBlocked(ManualPackageInstallTest.java:68)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)

	at com.android.cts.devicepolicy.BaseDevicePolicyTest.runDeviceTestsAsUser(BaseDevicePolicyTest.java:344)
	at com.android.cts.devicepolicy.BaseDevicePolicyTest.runDeviceTestsAsUser(BaseDevicePolicyTest.java:289)
	at com.android.cts.devicepolicy.DeviceAndProfileOwnerTest.testPackageInstallUserRestrictions(DeviceAndProfileOwnerTest.java:577)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    </Module>
  <Module name="CtsHostsideWebViewTests" abi="arm64-v8a" runtime="20176" done="true" pass="3">
    <TestCase name="com.android.cts.webkit.WebViewHostSideStartupTest">
      <Test result="fail" name="testStrictMode">
        <Failure message="junit.framework.AssertionFailedError">
          <StackTrace>junit.framework.AssertionFailedError
	at junit.framework.Assert.fail(Assert.java:55)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertTrue(Assert.java:31)
	at junit.framework.TestCase.assertTrue(TestCase.java:201)
	at com.android.cts.webkit.WebViewHostSideStartupTest.testStrictMode(WebViewHostSideStartupTest.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
  </Module>
  <Module name="CtsIncidentHostTestCases" abi="arm64-v8a" runtime="473024" done="true" pass="25">
    <TestCase name="com.android.server.cts.BatteryIncidentTest">
      <Test result="fail" name="testBatteryServiceDump">
        <Failure message="junit.framework.AssertionFailedError">
          <StackTrace>junit.framework.AssertionFailedError
	at junit.framework.Assert.fail(Assert.java:55)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertTrue(Assert.java:31)
	at junit.framework.TestCase.assertTrue(TestCase.java:201)
	at com.android.server.cts.BatteryIncidentTest.testBatteryServiceDump(BatteryIncidentTest.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="com.android.server.cts.BatteryStatsValidationTest">
      <Test result="fail" name="testWifiDownload">
        <Failure message="junit.framework.AssertionFailedError: Value 0 is less than min 49056">
          <StackTrace>junit.framework.AssertionFailedError: Value 0 is less than min 49056
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at com.android.server.cts.BatteryStatsValidationTest.assertValueRange(BatteryStatsValidationTest.java:487)
	at com.android.server.cts.BatteryStatsValidationTest.testWifiDownload(BatteryStatsValidationTest.java:423)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testWifiUpload">
        <Failure message="junit.framework.AssertionFailedError: Value 0 is less than min 2074">
          <StackTrace>junit.framework.AssertionFailedError: Value 0 is less than min 2074
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at com.android.server.cts.BatteryStatsValidationTest.assertValueRange(BatteryStatsValidationTest.java:487)
	at com.android.server.cts.BatteryStatsValidationTest.testWifiUpload(BatteryStatsValidationTest.java:459)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="com.android.server.cts.GraphicsStatsValidationTest">
      <Test result="fail" name="testBasicDrawFrame">
        <Failure message="junit.framework.AssertionFailedError">
          <StackTrace>junit.framework.AssertionFailedError
	at junit.framework.Assert.fail(Assert.java:55)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertTrue(Assert.java:31)
	at junit.framework.TestCase.assertTrue(TestCase.java:201)
	at com.android.server.cts.GraphicsStatsValidationTest.testBasicDrawFrame(GraphicsStatsValidationTest.java:63)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testDaveyDrawFrame">
        <Failure message="junit.framework.AssertionFailedError">
          <StackTrace>junit.framework.AssertionFailedError
	at junit.framework.Assert.fail(Assert.java:55)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertTrue(Assert.java:31)
	at junit.framework.TestCase.assertTrue(TestCase.java:201)
	at com.android.server.cts.GraphicsStatsValidationTest.testDaveyDrawFrame(GraphicsStatsValidationTest.java:113)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testJankyDrawFrame">
        <Failure message="junit.framework.AssertionFailedError">
          <StackTrace>junit.framework.AssertionFailedError
	at junit.framework.Assert.fail(Assert.java:55)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertTrue(Assert.java:31)
	at junit.framework.TestCase.assertTrue(TestCase.java:201)
	at com.android.server.cts.GraphicsStatsValidationTest.testJankyDrawFrame(GraphicsStatsValidationTest.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    </Module>
  <Module name="CtsJvmtiRunTest986HostTestCases" abi="arm64-v8a" runtime="15253" done="true" pass="0">
    <TestCase name="android.jvmti.cts.JvmtiHostTest">
      <Test result="fail" name="testJvmti">
        <Failure message="junit.framework.AssertionFailedError: [android.jvmti.cts.JvmtiRunTestBasedTest#testRunTest Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details, Instrumentation run failed due to 'Process crashed.']">
          <StackTrace>junit.framework.AssertionFailedError: [android.jvmti.cts.JvmtiRunTestBasedTest#testRunTest Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details, Instrumentation run failed due to 'Process crashed.']
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertFalse(Assert.java:39)
	at junit.framework.TestCase.assertFalse(TestCase.java:210)
	at android.jvmti.cts.JvmtiHostTest.testJvmti(JvmtiHostTest.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
  </Module>
  <Module name="CtsKernelConfigTestCases" abi="arm64-v8a" runtime="11" done="true" pass="3">
    <TestCase name="kernel_config">
      <Test result="fail" name="NOT_CONFIG_SYSVIPC">
        <Failure message="system/extras/tests/kernel.config/sysvipc_test.cpp:39: Failure&#13;">
          <StackTrace>system/extras/tests/kernel.config/sysvipc_test.cpp:39: Failure
Value of: access("/proc/sysvipc", 0)
Actual: 0
Expected: -1
system/extras/tests/kernel.config/sysvipc_test.cpp:40: Failure
Value of: access("/proc/sysvipc/msg", 0)
Actual: 0
Expected: -1
system/extras/tests/kernel.config/sysvipc_test.cpp:41: Failure
Value of: access("/proc/sysvipc/sem", 0)
Actual: 0
Expected: -1
system/extras/tests/kernel.config/sysvipc_test.cpp:42: Failure
Value of: access("/proc/sysvipc/shm", 0)
Actual: 0
Expected: -1</StackTrace>
        </Failure>
      </Test>
    </TestCase>
  </Module>
  <Module name="CtsKeystoreTestCases" abi="arm64-v8a" runtime="952509" done="true" pass="881">
    <TestCase name="android.keystore.cts.KeyAttestationTest">
      <Test result="fail" name="testEcAttestation">
        <Failure message="java.lang.Exception: Failed on curve 0 and challege 0&#13;">
          <StackTrace>java.lang.Exception: Failed on curve 0 and challege 0
at android.keystore.cts.KeyAttestationTest.testEcAttestation(KeyAttestationTest.java:165)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
Caused by: java.lang.AssertionError: Software KM is version 3
Expected: is &lt;3&gt;
but: was &lt;2&gt;
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.junit.Assert.assertThat(Assert.java:956)
at android.keystore.cts.KeyAttestationTest.checkAttestationSecurityLevelDependentParams(KeyAttestationTest.java:744)
at android.keystore.cts.KeyAttestationTest.checkKeyIndependentAttestationInfo(KeyAttestationTest.java:515)
at android.keystore.cts.KeyAttestationTest.testEcAttestation(KeyAttestationTest.java:486)
at android.keystore.cts.KeyAttestationTest.testEcAttestation(KeyAttestationTest.java:158)
... 15 more
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testRsaAttestation">
        <Failure message="java.lang.Exception: Failed on key size 512 challenge [], purposes [2, 3] and paddings [PKCS1]&#13;">
          <StackTrace>java.lang.Exception: Failed on key size 512 challenge [], purposes [2, 3] and paddings [PKCS1]
at android.keystore.cts.KeyAttestationTest.testRsaAttestations(KeyAttestationTest.java:375)
at android.keystore.cts.KeyAttestationTest.testRsaAttestation(KeyAttestationTest.java:285)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
Caused by: java.lang.AssertionError: Software KM is version 3
Expected: is &lt;3&gt;
but: was &lt;2&gt;
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.junit.Assert.assertThat(Assert.java:956)
at android.keystore.cts.KeyAttestationTest.checkAttestationSecurityLevelDependentParams(KeyAttestationTest.java:744)
at android.keystore.cts.KeyAttestationTest.checkKeyIndependentAttestationInfo(KeyAttestationTest.java:515)
at android.keystore.cts.KeyAttestationTest.testRsaAttestation(KeyAttestationTest.java:432)
at android.keystore.cts.KeyAttestationTest.testRsaAttestations(KeyAttestationTest.java:370)
... 16 more
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.keystore.cts.KeyChainTest">
      <Test result="fail" name="testIsBoundKeyAlgorithm_RequiredAlgorithmsSupported">
        <Failure message="junit.framework.AssertionFailedError: RSA must be hardware-backed by a hardware-specific Keymaster HAL&#13;">
          <StackTrace>junit.framework.AssertionFailedError: RSA must be hardware-backed by a hardware-specific Keymaster HAL
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.keystore.cts.KeyChainTest.testIsBoundKeyAlgorithm_RequiredAlgorithmsSupported(KeyChainTest.java:76)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    </Module>
  <Module name="CtsLibcoreTestCases" abi="arm64-v8a" runtime="1651634" done="true" pass="23007">
    <TestCase name="libcore.io.OsTest">
      <Test result="fail" name="test_xattr_Errno">
        <Failure message="junit.framework.AssertionFailedError: expected:&lt;95&gt; but was:&lt;13&gt;&#13;">
          <StackTrace>junit.framework.AssertionFailedError: expected:&lt;95&gt; but was:&lt;13&gt;
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:67)
at junit.framework.Assert.assertEquals(Assert.java:199)
at junit.framework.Assert.assertEquals(Assert.java:205)
at libcore.io.OsTest.test_xattr_Errno(OsTest.java:657)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="libcore.java.net.InetAddressTest">
      <Test result="fail" name="test_getByName_invalid[1]">
        <Failure message="java.lang.AssertionError: Invalid IP address incorrectly recognized as valid: 1.2.3.4.&#13;">
          <StackTrace>java.lang.AssertionError: Invalid IP address incorrectly recognized as valid: 1.2.3.4.
at org.junit.Assert.fail(Assert.java:88)
at libcore.java.net.InetAddressTest.test_getByName_invalid(InetAddressTest.java:301)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at junitparams.internal.InvokeParameterisedMethod.evaluate(InvokeParameterisedMethod.java:220)
at junitparams.internal.InvokableFrameworkMethod.runMethodInvoker(InvokableFrameworkMethod.java:48)
at junitparams.internal.InstanceFrameworkMethod.run(InstanceFrameworkMethod.java:55)
at junitparams.JUnitParamsRunner.runChild(JUnitParamsRunner.java:420)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
at org.junit.runners.ParentRunner.-wrap0(Unknown Source:0)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
at org.junit.runners.Suite.runChild(Suite.java:128)
at org.junit.runners.Suite.runChild(Suite.java:126)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
at org.junit.runners.ParentRunner.-wrap0(Unknown Source:0)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
at android.support.test.internal.runner.TestExecutor.execute(TestExecutor.java:58)
at android.support.test.runner.AndroidJUnitRunner.onStart(AndroidJUnitRunner.java:369)
at android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:2074)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="libcore.java.net.SocketTest">
      <Test result="fail" name="testSocketTestAllAddresses">
        <Failure message="junit.framework.AssertionFailedError: Loopback DNS record is unreachable or is invalid.&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Loopback DNS record is unreachable or is invalid.
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at libcore.java.net.SocketTest.testSocketTestAllAddresses(SocketTest.java:593)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at libcore.junit.junit3.TestCaseWithRules.superRunBare(TestCaseWithRules.java:110)
at libcore.junit.junit3.TestCaseWithRules.-wrap0(Unknown Source:0)
at libcore.junit.junit3.TestCaseWithRules$1.evaluate(TestCaseWithRules.java:66)
at dalvik.system.CloseGuardSupport$FailTestWhenResourcesNotClosedRule$1.evaluate(CloseGuardSupport.java:111)
at libcore.junit.junit3.TestCaseWithRules.runBare(TestCaseWithRules.java:106)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    </Module>
  <Module name="CtsLocationTestCases" abi="arm64-v8a" runtime="1490836" done="true" pass="134">
    <TestCase name="android.location.cts.GnssPseudorangeVerificationTest">
      <Test result="fail" name="testPseudoPosition">
        <Failure message="junit.framework.AssertionFailedError: Time elapsed without getting enough location fixes. Possibly, the test has been run deep indoors. Consider retrying test outdoors.&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Time elapsed without getting enough location fixes. Possibly, the test has been run deep indoors. Consider retrying test outdoors.
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.location.cts.GnssPseudorangeVerificationTest.testPseudoPosition(GnssPseudorangeVerificationTest.java:251)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    </Module>
  <Module name="CtsMediaTestCases" abi="arm64-v8a" runtime="1052832" done="false" pass="1482">
    <TestCase name="android.media.cts.DecodeAccuracyTest">
      <Test result="fail" name="testGLViewDecodeAccuracy[H264 520X360]">
        <Failure message="junit.framework.AssertionFailedError: Failed to decode the expected number of frames.&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Failed to decode the expected number of frames.
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.media.cts.DecodeAccuracyTest.decodeVideo(DecodeAccuracyTest.java:239)
at android.media.cts.DecodeAccuracyTest.runTest(DecodeAccuracyTest.java:231)
at android.media.cts.DecodeAccuracyTest.testGLViewDecodeAccuracy(DecodeAccuracyTest.java:174)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGLViewDecodeAccuracy[VP9 640X272]">
        <Failure message="java.lang.RuntimeException: Could not launch intent Intent { act=android.intent.action.MAIN flg=0x10000000 cmp=android.media.cts/.DecodeAccuracyTestActivity } within 45 seconds. Perhaps the main thread has not gone idle within a reasonable amount of time? There could be an animation or something constantly repainting the screen. Or the activity is doing network calls on creation? See the threaddump logs. For your reference the last time the event queue was idle before your activity launch request was 1515053845139 and now the last time the queue went idle was: 1515053867215. If these numbers are the same your activity might be hogging the event queue.&#13;">
          <StackTrace>java.lang.RuntimeException: Could not launch intent Intent { act=android.intent.action.MAIN flg=0x10000000 cmp=android.media.cts/.DecodeAccuracyTestActivity } within 45 seconds. Perhaps the main thread has not gone idle within a reasonable amount of time? There could be an animation or something constantly repainting the screen. Or the activity is doing network calls on creation? See the threaddump logs. For your reference the last time the event queue was idle before your activity launch request was 1515053845139 and now the last time the queue went idle was: 1515053867215. If these numbers are the same your activity might be hogging the event queue.
at android.support.test.runner.MonitoringInstrumentation.startActivitySync(MonitoringInstrumentation.java:407)
at android.support.test.rule.ActivityTestRule.launchActivity(ActivityTestRule.java:332)
at android.support.test.rule.ActivityTestRule$ActivityStatement.evaluate(ActivityTestRule.java:431)
at org.junit.rules.RunRules.evaluate(RunRules.java:20)
at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
at org.junit.runners.ParentRunner.-wrap0(Unknown Source:0)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
at org.junit.runners.Suite.runChild(Suite.java:128)
at org.junit.runners.Suite.runChild(Suite.java:126)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
at org.junit.runners.ParentRunner.-wrap0(Unknown Source:0)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
at org.junit.runners.Suite.runChild(Suite.java:128)
at org.junit.runners.Suite.runChild(Suite.java:126)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
at org.junit.runners.ParentRunner.-wrap0(Unknown Source:0)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
at android.support.test.internal.runner.TestExecutor.execute(TestExecutor.java:58)
at android.support.test.runner.AndroidJUnitRunner.onStart(AndroidJUnitRunner.java:369)
at android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:2074)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGLViewLargerHeightDecodeAccuracy[H264 608X1080]">
        <Failure message="org.junit.runners.model.TestTimedOutException: test timed out after 60000 milliseconds&#13;">
          <StackTrace>org.junit.runners.model.TestTimedOutException: test timed out after 60000 milliseconds
at android.media.MediaCodec.native_stop(Native Method)
at android.media.MediaCodec.stop(MediaCodec.java:2059)
at android.media.cts.DecodeAccuracyTestBase$SimplePlayer.decoderRelease(DecodeAccuracyTestBase.java:448)
at android.media.cts.DecodeAccuracyTestBase$SimplePlayer.release(DecodeAccuracyTestBase.java:358)
at android.media.cts.DecodeAccuracyTestBase$SimplePlayer.decodeVideoFrames(DecodeAccuracyTestBase.java:194)
at android.media.cts.DecodeAccuracyTestBase$SimplePlayer.decodeVideoFrames(DecodeAccuracyTestBase.java:200)
at android.media.cts.DecodeAccuracyTest.decodeVideo(DecodeAccuracyTest.java:237)
at android.media.cts.DecodeAccuracyTest.runTest(DecodeAccuracyTest.java:231)
at android.media.cts.DecodeAccuracyTest.testGLViewLargerHeightDecodeAccuracy(DecodeAccuracyTest.java:179)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGLViewLargerHeightDecodeAccuracy[H264 640X480]">
        <Failure message="junit.framework.AssertionFailedError: Failed to decode the expected number of frames.&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Failed to decode the expected number of frames.
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.media.cts.DecodeAccuracyTest.decodeVideo(DecodeAccuracyTest.java:239)
at android.media.cts.DecodeAccuracyTest.runTest(DecodeAccuracyTest.java:231)
at android.media.cts.DecodeAccuracyTest.testGLViewLargerHeightDecodeAccuracy(DecodeAccuracyTest.java:179)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGLViewLargerWidthDecodeAccuracy[H264 1280X544]">
        <Failure message="org.junit.runners.model.TestTimedOutException: test timed out after 60000 milliseconds&#13;">
          <StackTrace>org.junit.runners.model.TestTimedOutException: test timed out after 60000 milliseconds
at android.media.MediaCodec.native_stop(Native Method)
at android.media.MediaCodec.stop(MediaCodec.java:2059)
at android.media.cts.DecodeAccuracyTestBase$SimplePlayer.decoderRelease(DecodeAccuracyTestBase.java:448)
at android.media.cts.DecodeAccuracyTestBase$SimplePlayer.release(DecodeAccuracyTestBase.java:358)
at android.media.cts.DecodeAccuracyTestBase$SimplePlayer.decodeVideoFrames(DecodeAccuracyTestBase.java:194)
at android.media.cts.DecodeAccuracyTestBase$SimplePlayer.decodeVideoFrames(DecodeAccuracyTestBase.java:200)
at android.media.cts.DecodeAccuracyTest.decodeVideo(DecodeAccuracyTest.java:237)
at android.media.cts.DecodeAccuracyTest.runTest(DecodeAccuracyTest.java:231)
at android.media.cts.DecodeAccuracyTest.testGLViewLargerWidthDecodeAccuracy(DecodeAccuracyTest.java:184)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGLViewLargerWidthDecodeAccuracy[VP9 406X720]">
        <Failure message="org.junit.runners.model.TestTimedOutException: test timed out after 60000 milliseconds&#13;">
          <StackTrace>org.junit.runners.model.TestTimedOutException: test timed out after 60000 milliseconds
at android.media.MediaCodec.native_stop(Native Method)
at android.media.MediaCodec.stop(MediaCodec.java:2059)
at android.media.cts.DecodeAccuracyTestBase$SimplePlayer.decoderRelease(DecodeAccuracyTestBase.java:448)
at android.media.cts.DecodeAccuracyTestBase$SimplePlayer.release(DecodeAccuracyTestBase.java:358)
at android.media.cts.DecodeAccuracyTestBase$SimplePlayer.decodeVideoFrames(DecodeAccuracyTestBase.java:194)
at android.media.cts.DecodeAccuracyTestBase$SimplePlayer.decodeVideoFrames(DecodeAccuracyTestBase.java:200)
at android.media.cts.DecodeAccuracyTest.decodeVideo(DecodeAccuracyTest.java:237)
at android.media.cts.DecodeAccuracyTest.runTest(DecodeAccuracyTest.java:231)
at android.media.cts.DecodeAccuracyTest.testGLViewLargerWidthDecodeAccuracy(DecodeAccuracyTest.java:184)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testSurfaceViewLargerHeightDecodeAccuracy[VP9 320X240]">
        <Failure message="java.lang.RuntimeException: Could not launch intent Intent { act=android.intent.action.MAIN flg=0x10000000 cmp=android.media.cts/.DecodeAccuracyTestActivity } within 45 seconds. Perhaps the main thread has not gone idle within a reasonable amount of time? There could be an animation or something constantly repainting the screen. Or the activity is doing network calls on creation? See the threaddump logs. For your reference the last time the event queue was idle before your activity launch request was 1515053502728 and now the last time the queue went idle was: 1515053506498. If these numbers are the same your activity might be hogging the event queue.&#13;">
          <StackTrace>java.lang.RuntimeException: Could not launch intent Intent { act=android.intent.action.MAIN flg=0x10000000 cmp=android.media.cts/.DecodeAccuracyTestActivity } within 45 seconds. Perhaps the main thread has not gone idle within a reasonable amount of time? There could be an animation or something constantly repainting the screen. Or the activity is doing network calls on creation? See the threaddump logs. For your reference the last time the event queue was idle before your activity launch request was 1515053502728 and now the last time the queue went idle was: 1515053506498. If these numbers are the same your activity might be hogging the event queue.
at android.support.test.runner.MonitoringInstrumentation.startActivitySync(MonitoringInstrumentation.java:407)
at android.support.test.rule.ActivityTestRule.launchActivity(ActivityTestRule.java:332)
at android.support.test.rule.ActivityTestRule$ActivityStatement.evaluate(ActivityTestRule.java:431)
at org.junit.rules.RunRules.evaluate(RunRules.java:20)
at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
at org.junit.runners.ParentRunner.-wrap0(Unknown Source:0)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
at org.junit.runners.Suite.runChild(Suite.java:128)
at org.junit.runners.Suite.runChild(Suite.java:126)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
at org.junit.runners.ParentRunner.-wrap0(Unknown Source:0)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
at org.junit.runners.Suite.runChild(Suite.java:128)
at org.junit.runners.Suite.runChild(Suite.java:126)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
at org.junit.runners.ParentRunner.-wrap0(Unknown Source:0)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
at android.support.test.internal.runner.TestExecutor.execute(TestExecutor.java:58)
at android.support.test.runner.AndroidJUnitRunner.onStart(AndroidJUnitRunner.java:369)
at android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:2074)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testSurfaceViewLargerWidthDecodeAccuracy[H264 640X480]">
        <Failure message="Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testSurfaceViewLargerWidthDecodeAccuracy[VP9 3840X1634]">
        <Failure message="java.lang.RuntimeException: Could not launch intent Intent { act=android.intent.action.MAIN flg=0x10000000 cmp=android.media.cts/.DecodeAccuracyTestActivity } within 45 seconds. Perhaps the main thread has not gone idle within a reasonable amount of time? There could be an animation or something constantly repainting the screen. Or the activity is doing network calls on creation? See the threaddump logs. For your reference the last time the event queue was idle before your activity launch request was 1514968484382 and now the last time the queue went idle was: 1514968500157. If these numbers are the same your activity might be hogging the event queue.&#13;">
          <StackTrace>java.lang.RuntimeException: Could not launch intent Intent { act=android.intent.action.MAIN flg=0x10000000 cmp=android.media.cts/.DecodeAccuracyTestActivity } within 45 seconds. Perhaps the main thread has not gone idle within a reasonable amount of time? There could be an animation or something constantly repainting the screen. Or the activity is doing network calls on creation? See the threaddump logs. For your reference the last time the event queue was idle before your activity launch request was 1514968484382 and now the last time the queue went idle was: 1514968500157. If these numbers are the same your activity might be hogging the event queue.
at android.support.test.runner.MonitoringInstrumentation.startActivitySync(MonitoringInstrumentation.java:407)
at android.support.test.rule.ActivityTestRule.launchActivity(ActivityTestRule.java:332)
at android.support.test.rule.ActivityTestRule$ActivityStatement.evaluate(ActivityTestRule.java:431)
at org.junit.rules.RunRules.evaluate(RunRules.java:20)
at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
at org.junit.runners.ParentRunner.-wrap0(Unknown Source:0)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
at org.junit.runners.Suite.runChild(Suite.java:128)
at org.junit.runners.Suite.runChild(Suite.java:126)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
at org.junit.runners.ParentRunner.-wrap0(Unknown Source:0)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
at org.junit.runners.Suite.runChild(Suite.java:128)
at org.junit.runners.Suite.runChild(Suite.java:126)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
at org.junit.runners.ParentRunner.-wrap0(Unknown Source:0)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
at android.support.test.internal.runner.TestExecutor.execute(TestExecutor.java:58)
at android.support.test.runner.AndroidJUnitRunner.onStart(AndroidJUnitRunner.java:369)
at android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:2074)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testSurfaceViewLargerWidthDecodeAccuracy[VP9 82X144]">
        <Failure message="java.lang.RuntimeException: Could not launch intent Intent { act=android.intent.action.MAIN flg=0x10000000 cmp=android.media.cts/.DecodeAccuracyTestActivity } within 45 seconds. Perhaps the main thread has not gone idle within a reasonable amount of time? There could be an animation or something constantly repainting the screen. Or the activity is doing network calls on creation? See the threaddump logs. For your reference the last time the event queue was idle before your activity launch request was 1515053173680 and now the last time the queue went idle was: 1515053178029. If these numbers are the same your activity might be hogging the event queue.&#13;">
          <StackTrace>java.lang.RuntimeException: Could not launch intent Intent { act=android.intent.action.MAIN flg=0x10000000 cmp=android.media.cts/.DecodeAccuracyTestActivity } within 45 seconds. Perhaps the main thread has not gone idle within a reasonable amount of time? There could be an animation or something constantly repainting the screen. Or the activity is doing network calls on creation? See the threaddump logs. For your reference the last time the event queue was idle before your activity launch request was 1515053173680 and now the last time the queue went idle was: 1515053178029. If these numbers are the same your activity might be hogging the event queue.
at android.support.test.runner.MonitoringInstrumentation.startActivitySync(MonitoringInstrumentation.java:407)
at android.support.test.rule.ActivityTestRule.launchActivity(ActivityTestRule.java:332)
at android.support.test.rule.ActivityTestRule$ActivityStatement.evaluate(ActivityTestRule.java:431)
at org.junit.rules.RunRules.evaluate(RunRules.java:20)
at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
at org.junit.runners.ParentRunner.-wrap0(Unknown Source:0)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
at org.junit.runners.Suite.runChild(Suite.java:128)
at org.junit.runners.Suite.runChild(Suite.java:126)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
at org.junit.runners.ParentRunner.-wrap0(Unknown Source:0)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
at org.junit.runners.Suite.runChild(Suite.java:128)
at org.junit.runners.Suite.runChild(Suite.java:126)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
at org.junit.runners.ParentRunner.-wrap0(Unknown Source:0)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
at android.support.test.internal.runner.TestExecutor.execute(TestExecutor.java:58)
at android.support.test.runner.AndroidJUnitRunner.onStart(AndroidJUnitRunner.java:369)
at android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:2074)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testSurfaceViewVideoDecodeAccuracy[H264 82X144]">
        <Failure message="junit.framework.AssertionFailedError: Failed to decode the expected number of frames.&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Failed to decode the expected number of frames.
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.media.cts.DecodeAccuracyTest.decodeVideo(DecodeAccuracyTest.java:239)
at android.media.cts.DecodeAccuracyTest.runTest(DecodeAccuracyTest.java:231)
at android.media.cts.DecodeAccuracyTest.testSurfaceViewVideoDecodeAccuracy(DecodeAccuracyTest.java:189)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.media.cts.DecodeEditEncodeTest">
      <Test result="fail" name="testVideoEdit720p">
        <Failure message="java.lang.IllegalStateException&#13;">
          <StackTrace>java.lang.IllegalStateException
at android.media.MediaCodec.native_stop(Native Method)
at android.media.MediaCodec.stop(MediaCodec.java:2059)
at android.media.cts.DecodeEditEncodeTest.generateVideoFile(DecodeEditEncodeTest.java:228)
at android.media.cts.DecodeEditEncodeTest.videoEditTest(DecodeEditEncodeTest.java:157)
at android.media.cts.DecodeEditEncodeTest.-wrap0(Unknown Source:0)
at android.media.cts.DecodeEditEncodeTest$VideoEditWrapper.run(DecodeEditEncodeTest.java:120)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testVideoEditQCIF">
        <Failure message="junit.framework.AssertionFailedError: Frame count expected:&lt;31&gt; but was:&lt;32&gt;&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Frame count expected:&lt;31&gt; but was:&lt;32&gt;
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:67)
at junit.framework.Assert.assertEquals(Assert.java:199)
at android.media.cts.DecodeEditEncodeTest.generateVideoData(DecodeEditEncodeTest.java:342)
at android.media.cts.DecodeEditEncodeTest.generateVideoFile(DecodeEditEncodeTest.java:224)
at android.media.cts.DecodeEditEncodeTest.videoEditTest(DecodeEditEncodeTest.java:157)
at android.media.cts.DecodeEditEncodeTest.-wrap0(Unknown Source:0)
at android.media.cts.DecodeEditEncodeTest$VideoEditWrapper.run(DecodeEditEncodeTest.java:120)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testVideoEditQVGA">
        <Failure message="junit.framework.AssertionFailedError: Frame count expected:&lt;31&gt; but was:&lt;32&gt;&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Frame count expected:&lt;31&gt; but was:&lt;32&gt;
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:67)
at junit.framework.Assert.assertEquals(Assert.java:199)
at android.media.cts.DecodeEditEncodeTest.generateVideoData(DecodeEditEncodeTest.java:342)
at android.media.cts.DecodeEditEncodeTest.generateVideoFile(DecodeEditEncodeTest.java:224)
at android.media.cts.DecodeEditEncodeTest.videoEditTest(DecodeEditEncodeTest.java:157)
at android.media.cts.DecodeEditEncodeTest.-wrap0(Unknown Source:0)
at android.media.cts.DecodeEditEncodeTest$VideoEditWrapper.run(DecodeEditEncodeTest.java:120)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.media.cts.DecoderTest">
      <Test result="fail" name="testCodecResetsH264WithSurface">
        <Failure message="Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testCodecResetsMpeg4WithoutSurface">
        <Failure message="junit.framework.AssertionFailedError: output timestamp 160000 without corresponding input timestamp&#13;">
          <StackTrace>junit.framework.AssertionFailedError: output timestamp 160000 without corresponding input timestamp
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.media.cts.DecoderTest.decodeWithChecks(DecoderTest.java:2364)
at android.media.cts.DecoderTest.countFrames(DecoderTest.java:2081)
at android.media.cts.DecoderTest.testCodecResets(DecoderTest.java:2017)
at android.media.cts.DecoderTest.testCodecResetsMpeg4WithoutSurface(DecoderTest.java:1957)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testCodecResetsVP9WithSurface">
        <Failure message="junit.framework.AssertionFailedError: output timestamp 80000 without corresponding input timestamp&#13;">
          <StackTrace>junit.framework.AssertionFailedError: output timestamp 80000 without corresponding input timestamp
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.media.cts.DecoderTest.decodeWithChecks(DecoderTest.java:2364)
at android.media.cts.DecoderTest.countFrames(DecoderTest.java:2081)
at android.media.cts.DecoderTest.testCodecResets(DecoderTest.java:2017)
at android.media.cts.DecoderTest.testCodecResetsVP9WithSurface(DecoderTest.java:1985)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testEOSBehaviorH263">
        <Failure message="java.lang.IllegalStateException&#13;">
          <StackTrace>java.lang.IllegalStateException
at android.media.MediaCodec.native_dequeueOutputBuffer(Native Method)
at android.media.MediaCodec.dequeueOutputBuffer(MediaCodec.java:2622)
at android.media.cts.DecoderTest.decodeWithChecks(DecoderTest.java:2290)
at android.media.cts.DecoderTest.testEOSBehavior(DecoderTest.java:2138)
at android.media.cts.DecoderTest.testEOSBehaviorH263(DecoderTest.java:2434)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testEOSBehaviorH264">
        <Failure message="junit.framework.AssertionFailedError: frame data mismatch at frame 5 expected:&lt;1974383031&gt; but was:&lt;1418764182&gt;&#13;">
          <StackTrace>junit.framework.AssertionFailedError: frame data mismatch at frame 5 expected:&lt;1974383031&gt; but was:&lt;1418764182&gt;
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:67)
at junit.framework.Assert.assertEquals(Assert.java:134)
at android.media.cts.DecoderTest.decodeWithChecks(DecoderTest.java:2357)
at android.media.cts.DecoderTest.testEOSBehavior(DecoderTest.java:2156)
at android.media.cts.DecoderTest.testEOSBehaviorH264(DecoderTest.java:2422)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testEOSBehaviorMpeg4">
        <Failure message="junit.framework.AssertionFailedError: frame data mismatch at frame 9 expected:&lt;3836332003&gt; but was:&lt;4037915577&gt;&#13;">
          <StackTrace>junit.framework.AssertionFailedError: frame data mismatch at frame 9 expected:&lt;3836332003&gt; but was:&lt;4037915577&gt;
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:67)
at junit.framework.Assert.assertEquals(Assert.java:134)
at android.media.cts.DecoderTest.decodeWithChecks(DecoderTest.java:2357)
at android.media.cts.DecoderTest.testEOSBehavior(DecoderTest.java:2156)
at android.media.cts.DecoderTest.testEOSBehaviorMpeg4(DecoderTest.java:2441)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testEOSBehaviorVP8">
        <Failure message="junit.framework.AssertionFailedError: frame data mismatch at frame 0 expected:&lt;2346194358&gt; but was:&lt;1501974794&gt;&#13;">
          <StackTrace>junit.framework.AssertionFailedError: frame data mismatch at frame 0 expected:&lt;2346194358&gt; but was:&lt;1501974794&gt;
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:67)
at junit.framework.Assert.assertEquals(Assert.java:134)
at android.media.cts.DecoderTest.decodeWithChecks(DecoderTest.java:2357)
at android.media.cts.DecoderTest.testEOSBehavior(DecoderTest.java:2156)
at android.media.cts.DecoderTest.testEOSBehaviorVP8(DecoderTest.java:2448)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testEOSBehaviorVP9">
        <Failure message="junit.framework.AssertionFailedError: frame data mismatch at frame 0 expected:&lt;2409317568&gt; but was:&lt;2673743967&gt;&#13;">
          <StackTrace>junit.framework.AssertionFailedError: frame data mismatch at frame 0 expected:&lt;2409317568&gt; but was:&lt;2673743967&gt;
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:67)
at junit.framework.Assert.assertEquals(Assert.java:134)
at android.media.cts.DecoderTest.decodeWithChecks(DecoderTest.java:2357)
at android.media.cts.DecoderTest.testEOSBehavior(DecoderTest.java:2156)
at android.media.cts.DecoderTest.testEOSBehaviorVP9(DecoderTest.java:2455)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testVP8Decode320x180">
        <Failure message="java.lang.IllegalStateException&#13;">
          <StackTrace>java.lang.IllegalStateException
at android.media.MediaCodec.native_dequeueOutputBuffer(Native Method)
at android.media.MediaCodec.dequeueOutputBuffer(MediaCodec.java:2622)
at android.media.cts.DecoderTest.decodeWithChecks(DecoderTest.java:2290)
at android.media.cts.DecoderTest.countFrames(DecoderTest.java:2081)
at android.media.cts.DecoderTest.testDecode(DecoderTest.java:1612)
at android.media.cts.DecoderTest.testVP8Decode320x180(DecoderTest.java:1748)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.media.cts.EncodeDecodeTest">
      <Test result="fail" name="testEncodeDecodeVideoFromBufferToBuffer720p">
        <Failure message="junit.framework.AssertionFailedError: Wrong time stamp expected:&lt;1866798&gt; but was:&lt;0&gt;&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Wrong time stamp expected:&lt;1866798&gt; but was:&lt;0&gt;
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:67)
at junit.framework.Assert.assertEquals(Assert.java:134)
at android.media.cts.EncodeDecodeTest.doEncodeDecodeVideoFromBuffer(EncodeDecodeTest.java:833)
at android.media.cts.EncodeDecodeTest.encodeDecodeVideoFromBuffer(EncodeDecodeTest.java:448)
at android.media.cts.EncodeDecodeTest.testEncodeDecodeVideoFromBufferToBuffer720p(EncodeDecodeTest.java:115)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testEncodeDecodeVideoFromBufferToBufferQCIF">
        <Failure message="junit.framework.AssertionFailedError: Wrong time stamp expected:&lt;1866798&gt; but was:&lt;0&gt;&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Wrong time stamp expected:&lt;1866798&gt; but was:&lt;0&gt;
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:67)
at junit.framework.Assert.assertEquals(Assert.java:134)
at android.media.cts.EncodeDecodeTest.doEncodeDecodeVideoFromBuffer(EncodeDecodeTest.java:833)
at android.media.cts.EncodeDecodeTest.encodeDecodeVideoFromBuffer(EncodeDecodeTest.java:448)
at android.media.cts.EncodeDecodeTest.testEncodeDecodeVideoFromBufferToBufferQCIF(EncodeDecodeTest.java:107)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testEncodeDecodeVideoFromBufferToBufferQVGA">
        <Failure message="junit.framework.AssertionFailedError: Wrong time stamp expected:&lt;1866798&gt; but was:&lt;0&gt;&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Wrong time stamp expected:&lt;1866798&gt; but was:&lt;0&gt;
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:67)
at junit.framework.Assert.assertEquals(Assert.java:134)
at android.media.cts.EncodeDecodeTest.doEncodeDecodeVideoFromBuffer(EncodeDecodeTest.java:833)
at android.media.cts.EncodeDecodeTest.encodeDecodeVideoFromBuffer(EncodeDecodeTest.java:448)
at android.media.cts.EncodeDecodeTest.testEncodeDecodeVideoFromBufferToBufferQVGA(EncodeDecodeTest.java:111)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testEncodeDecodeVideoFromBufferToSurface720p">
        <Failure message="junit.framework.AssertionFailedError: Wrong time stamp expected:&lt;1866798&gt; but was:&lt;0&gt;&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Wrong time stamp expected:&lt;1866798&gt; but was:&lt;0&gt;
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:67)
at junit.framework.Assert.assertEquals(Assert.java:134)
at android.media.cts.EncodeDecodeTest.doEncodeDecodeVideoFromBuffer(EncodeDecodeTest.java:866)
at android.media.cts.EncodeDecodeTest.encodeDecodeVideoFromBuffer(EncodeDecodeTest.java:448)
at android.media.cts.EncodeDecodeTest.-wrap1(Unknown Source:0)
at android.media.cts.EncodeDecodeTest$BufferToSurfaceWrapper.run(EncodeDecodeTest.java:191)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testEncodeDecodeVideoFromBufferToSurfaceQCIF">
        <Failure message="junit.framework.AssertionFailedError: Wrong time stamp expected:&lt;1866798&gt; but was:&lt;0&gt;&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Wrong time stamp expected:&lt;1866798&gt; but was:&lt;0&gt;
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:67)
at junit.framework.Assert.assertEquals(Assert.java:134)
at android.media.cts.EncodeDecodeTest.doEncodeDecodeVideoFromBuffer(EncodeDecodeTest.java:866)
at android.media.cts.EncodeDecodeTest.encodeDecodeVideoFromBuffer(EncodeDecodeTest.java:448)
at android.media.cts.EncodeDecodeTest.-wrap1(Unknown Source:0)
at android.media.cts.EncodeDecodeTest$BufferToSurfaceWrapper.run(EncodeDecodeTest.java:191)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testEncodeDecodeVideoFromBufferToSurfaceQVGA">
        <Failure message="junit.framework.AssertionFailedError: Wrong time stamp expected:&lt;1866798&gt; but was:&lt;0&gt;&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Wrong time stamp expected:&lt;1866798&gt; but was:&lt;0&gt;
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:67)
at junit.framework.Assert.assertEquals(Assert.java:134)
at android.media.cts.EncodeDecodeTest.doEncodeDecodeVideoFromBuffer(EncodeDecodeTest.java:866)
at android.media.cts.EncodeDecodeTest.encodeDecodeVideoFromBuffer(EncodeDecodeTest.java:448)
at android.media.cts.EncodeDecodeTest.-wrap1(Unknown Source:0)
at android.media.cts.EncodeDecodeTest$BufferToSurfaceWrapper.run(EncodeDecodeTest.java:191)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testEncodeDecodeVideoFromPersistentSurfaceToSurface720p">
        <Failure message="java.lang.IllegalStateException&#13;">
          <StackTrace>java.lang.IllegalStateException
at android.media.MediaCodec.native_stop(Native Method)
at android.media.MediaCodec.stop(MediaCodec.java:2059)
at android.media.cts.SdkMediaCodec.stop(SdkMediaCodec.java:73)
at android.media.cts.EncodeDecodeTest.encodeDecodeVideoFromSurfaceToSurface(EncodeDecodeTest.java:543)
at android.media.cts.EncodeDecodeTest.-wrap2(Unknown Source:0)
at android.media.cts.EncodeDecodeTest$SurfaceToSurfaceWrapper.run(EncodeDecodeTest.java:328)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testEncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk">
        <Failure message="junit.framework.AssertionFailedError: unexpected result from encoder.dequeueOutputBuffer: -10000&#13;">
          <StackTrace>junit.framework.AssertionFailedError: unexpected result from encoder.dequeueOutputBuffer: -10000
at junit.framework.Assert.fail(Assert.java:50)
at android.media.cts.EncodeDecodeTest.doEncodeDecodeVideoFromSurfaceToSurface(EncodeDecodeTest.java:1027)
at android.media.cts.EncodeDecodeTest.encodeDecodeVideoFromSurfaceToSurface(EncodeDecodeTest.java:533)
at android.media.cts.EncodeDecodeTest.-wrap2(Unknown Source:0)
at android.media.cts.EncodeDecodeTest$SurfaceToSurfaceWrapper.run(EncodeDecodeTest.java:328)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testEncodeDecodeVideoFromPersistentSurfaceToSurfaceQCIF">
        <Failure message="java.util.concurrent.TimeoutException: Test timed out after 1800000 milliseconds&#13;">
          <StackTrace>java.util.concurrent.TimeoutException: Test timed out after 1800000 milliseconds
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:86)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testEncodeDecodeVideoFromPersistentSurfaceToSurfaceQVGA">
        <Failure message="junit.framework.AssertionFailedError: Wrong time stamp expected:&lt;1866798&gt; but was:&lt;0&gt;&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Wrong time stamp expected:&lt;1866798&gt; but was:&lt;0&gt;
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:67)
at junit.framework.Assert.assertEquals(Assert.java:134)
at android.media.cts.EncodeDecodeTest.doEncodeDecodeVideoFromSurfaceToSurface(EncodeDecodeTest.java:995)
at android.media.cts.EncodeDecodeTest.encodeDecodeVideoFromSurfaceToSurface(EncodeDecodeTest.java:533)
at android.media.cts.EncodeDecodeTest.-wrap2(Unknown Source:0)
at android.media.cts.EncodeDecodeTest$SurfaceToSurfaceWrapper.run(EncodeDecodeTest.java:328)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testEncodeDecodeVideoFromSurfaceToSurface720p">
        <Failure message="java.lang.IllegalStateException&#13;">
          <StackTrace>java.lang.IllegalStateException
at android.media.MediaCodec.native_stop(Native Method)
at android.media.MediaCodec.stop(MediaCodec.java:2059)
at android.media.cts.SdkMediaCodec.stop(SdkMediaCodec.java:73)
at android.media.cts.EncodeDecodeTest.encodeDecodeVideoFromSurfaceToSurface(EncodeDecodeTest.java:543)
at android.media.cts.EncodeDecodeTest.-wrap2(Unknown Source:0)
at android.media.cts.EncodeDecodeTest$SurfaceToSurfaceWrapper.run(EncodeDecodeTest.java:317)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testEncodeDecodeVideoFromSurfaceToSurface720pNdk">
        <Failure message="junit.framework.AssertionFailedError: unexpected result from encoder.dequeueOutputBuffer: -10000&#13;">
          <StackTrace>junit.framework.AssertionFailedError: unexpected result from encoder.dequeueOutputBuffer: -10000
at junit.framework.Assert.fail(Assert.java:50)
at android.media.cts.EncodeDecodeTest.doEncodeDecodeVideoFromSurfaceToSurface(EncodeDecodeTest.java:1027)
at android.media.cts.EncodeDecodeTest.encodeDecodeVideoFromSurfaceToSurface(EncodeDecodeTest.java:533)
at android.media.cts.EncodeDecodeTest.-wrap2(Unknown Source:0)
at android.media.cts.EncodeDecodeTest$SurfaceToSurfaceWrapper.run(EncodeDecodeTest.java:317)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testVP8EncodeDecodeVideoFromBufferToBuffer720p">
        <Failure message="junit.framework.AssertionFailedError: Found 16 bad frames&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Found 16 bad frames
at junit.framework.Assert.fail(Assert.java:50)
at android.media.cts.EncodeDecodeTest.doEncodeDecodeVideoFromBuffer(EncodeDecodeTest.java:898)
at android.media.cts.EncodeDecodeTest.encodeDecodeVideoFromBuffer(EncodeDecodeTest.java:448)
at android.media.cts.EncodeDecodeTest.testVP8EncodeDecodeVideoFromBufferToBuffer720p(EncodeDecodeTest.java:133)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testVP8EncodeDecodeVideoFromBufferToBufferQCIF">
        <Failure message="junit.framework.AssertionFailedError: Found 10 bad frames&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Found 10 bad frames
at junit.framework.Assert.fail(Assert.java:50)
at android.media.cts.EncodeDecodeTest.doEncodeDecodeVideoFromBuffer(EncodeDecodeTest.java:898)
at android.media.cts.EncodeDecodeTest.encodeDecodeVideoFromBuffer(EncodeDecodeTest.java:448)
at android.media.cts.EncodeDecodeTest.testVP8EncodeDecodeVideoFromBufferToBufferQCIF(EncodeDecodeTest.java:125)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testVP8EncodeDecodeVideoFromBufferToBufferQVGA">
        <Failure message="junit.framework.AssertionFailedError: Found 6 bad frames&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Found 6 bad frames
at junit.framework.Assert.fail(Assert.java:50)
at android.media.cts.EncodeDecodeTest.doEncodeDecodeVideoFromBuffer(EncodeDecodeTest.java:898)
at android.media.cts.EncodeDecodeTest.encodeDecodeVideoFromBuffer(EncodeDecodeTest.java:448)
at android.media.cts.EncodeDecodeTest.testVP8EncodeDecodeVideoFromBufferToBufferQVGA(EncodeDecodeTest.java:129)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testVP8EncodeDecodeVideoFromBufferToSurface720p">
        <Failure message="java.lang.RuntimeException: Surface frame wait timed out&#13;">
          <StackTrace>java.lang.RuntimeException: Surface frame wait timed out
at android.media.cts.OutputSurface.awaitNewImage(OutputSurface.java:241)
at android.media.cts.EncodeDecodeTest.doEncodeDecodeVideoFromBuffer(EncodeDecodeTest.java:868)
at android.media.cts.EncodeDecodeTest.encodeDecodeVideoFromBuffer(EncodeDecodeTest.java:448)
at android.media.cts.EncodeDecodeTest.-wrap1(Unknown Source:0)
at android.media.cts.EncodeDecodeTest$BufferToSurfaceWrapper.run(EncodeDecodeTest.java:191)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testVP8EncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk">
        <Failure message="java.lang.RuntimeException: Surface frame wait timed out&#13;">
          <StackTrace>java.lang.RuntimeException: Surface frame wait timed out
at android.media.cts.OutputSurface.awaitNewImage(OutputSurface.java:241)
at android.media.cts.EncodeDecodeTest.doEncodeDecodeVideoFromSurfaceToSurface(EncodeDecodeTest.java:998)
at android.media.cts.EncodeDecodeTest.encodeDecodeVideoFromSurfaceToSurface(EncodeDecodeTest.java:533)
at android.media.cts.EncodeDecodeTest.-wrap2(Unknown Source:0)
at android.media.cts.EncodeDecodeTest$SurfaceToSurfaceWrapper.run(EncodeDecodeTest.java:328)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.media.cts.EncodeVirtualDisplayWithCompositionTest">
      <Test result="fail" name="testRendering800x480LocallyWith3Windows">
        <Failure message="Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testRendering800x480RemotelyWith3Windows">
        <Failure message="Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testRenderingMaxResolutionLocally">
        <Failure message="Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testRenderingMaxResolutionRemotely">
        <Failure message="Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.media.cts.ExifInterfaceTest">
      <Test result="fail" name="testReadExifDataFromCanonG7XCr2">
        <Failure message="java.io.FileNotFoundException: /storage/emulated/0/test/images/canon_g7x.cr2 (No such file or directory)&#13;">
          <StackTrace>java.io.FileNotFoundException: /storage/emulated/0/test/images/canon_g7x.cr2 (No such file or directory)
at java.io.FileInputStream.open0(Native Method)
at java.io.FileInputStream.open(FileInputStream.java:200)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:150)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:103)
at android.media.ExifInterface.&lt;init&gt;(ExifInterface.java:1329)
at android.media.cts.ExifInterfaceTest.testExifInterfaceCommon(ExifInterfaceTest.java:306)
at android.media.cts.ExifInterfaceTest.testExifInterfaceForRaw(ExifInterfaceTest.java:411)
at android.media.cts.ExifInterfaceTest.testReadExifDataFromCanonG7XCr2(ExifInterfaceTest.java:451)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testReadExifDataFromExifByteOrderIIJpeg">
        <Failure message="java.io.FileNotFoundException: /storage/emulated/0/test/images/image_exif_byte_order_ii.jpg (No such file or directory)&#13;">
          <StackTrace>java.io.FileNotFoundException: /storage/emulated/0/test/images/image_exif_byte_order_ii.jpg (No such file or directory)
at java.io.FileInputStream.open0(Native Method)
at java.io.FileInputStream.open(FileInputStream.java:200)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:150)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:103)
at android.media.ExifInterface.&lt;init&gt;(ExifInterface.java:1329)
at android.media.cts.ExifInterfaceTest.testExifInterfaceCommon(ExifInterfaceTest.java:306)
at android.media.cts.ExifInterfaceTest.testExifInterfaceForJpeg(ExifInterfaceTest.java:397)
at android.media.cts.ExifInterfaceTest.testReadExifDataFromExifByteOrderIIJpeg(ExifInterfaceTest.java:418)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testReadExifDataFromExifByteOrderMMJpeg">
        <Failure message="java.io.FileNotFoundException: /storage/emulated/0/test/images/image_exif_byte_order_mm.jpg (No such file or directory)&#13;">
          <StackTrace>java.io.FileNotFoundException: /storage/emulated/0/test/images/image_exif_byte_order_mm.jpg (No such file or directory)
at java.io.FileInputStream.open0(Native Method)
at java.io.FileInputStream.open(FileInputStream.java:200)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:150)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:103)
at android.media.ExifInterface.&lt;init&gt;(ExifInterface.java:1329)
at android.media.cts.ExifInterfaceTest.testExifInterfaceCommon(ExifInterfaceTest.java:306)
at android.media.cts.ExifInterfaceTest.testExifInterfaceForJpeg(ExifInterfaceTest.java:397)
at android.media.cts.ExifInterfaceTest.testReadExifDataFromExifByteOrderMMJpeg(ExifInterfaceTest.java:422)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testReadExifDataFromFujiX20Raf">
        <Failure message="java.io.FileNotFoundException: /storage/emulated/0/test/images/fuji_x20.raf (No such file or directory)&#13;">
          <StackTrace>java.io.FileNotFoundException: /storage/emulated/0/test/images/fuji_x20.raf (No such file or directory)
at java.io.FileInputStream.open0(Native Method)
at java.io.FileInputStream.open(FileInputStream.java:200)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:150)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:103)
at android.media.ExifInterface.&lt;init&gt;(ExifInterface.java:1329)
at android.media.cts.ExifInterfaceTest.testExifInterfaceCommon(ExifInterfaceTest.java:306)
at android.media.cts.ExifInterfaceTest.testExifInterfaceForRaw(ExifInterfaceTest.java:411)
at android.media.cts.ExifInterfaceTest.testReadExifDataFromFujiX20Raf(ExifInterfaceTest.java:455)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testReadExifDataFromLgG4Iso800Dng">
        <Failure message="java.io.FileNotFoundException: /storage/emulated/0/test/images/lg_g4_iso_800.dng (No such file or directory)&#13;">
          <StackTrace>java.io.FileNotFoundException: /storage/emulated/0/test/images/lg_g4_iso_800.dng (No such file or directory)
at java.io.FileInputStream.open0(Native Method)
at java.io.FileInputStream.open(FileInputStream.java:200)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:150)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:103)
at android.media.ExifInterface.&lt;init&gt;(ExifInterface.java:1329)
at android.media.cts.ExifInterfaceTest.testExifInterfaceCommon(ExifInterfaceTest.java:306)
at android.media.cts.ExifInterfaceTest.testExifInterfaceForRaw(ExifInterfaceTest.java:411)
at android.media.cts.ExifInterfaceTest.testReadExifDataFromLgG4Iso800Dng(ExifInterfaceTest.java:426)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testReadExifDataFromNikon1AW1Nef">
        <Failure message="java.io.FileNotFoundException: /storage/emulated/0/test/images/nikon_1aw1.nef (No such file or directory)&#13;">
          <StackTrace>java.io.FileNotFoundException: /storage/emulated/0/test/images/nikon_1aw1.nef (No such file or directory)
at java.io.FileInputStream.open0(Native Method)
at java.io.FileInputStream.open(FileInputStream.java:200)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:150)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:103)
at android.media.ExifInterface.&lt;init&gt;(ExifInterface.java:1329)
at android.media.cts.ExifInterfaceTest.testExifInterfaceCommon(ExifInterfaceTest.java:306)
at android.media.cts.ExifInterfaceTest.testExifInterfaceForRaw(ExifInterfaceTest.java:411)
at android.media.cts.ExifInterfaceTest.testReadExifDataFromNikon1AW1Nef(ExifInterfaceTest.java:459)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testReadExifDataFromNikonP330Nrw">
        <Failure message="java.io.FileNotFoundException: /storage/emulated/0/test/images/nikon_p330.nrw (No such file or directory)&#13;">
          <StackTrace>java.io.FileNotFoundException: /storage/emulated/0/test/images/nikon_p330.nrw (No such file or directory)
at java.io.FileInputStream.open0(Native Method)
at java.io.FileInputStream.open(FileInputStream.java:200)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:150)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:103)
at android.media.ExifInterface.&lt;init&gt;(ExifInterface.java:1329)
at android.media.cts.ExifInterfaceTest.testExifInterfaceCommon(ExifInterfaceTest.java:306)
at android.media.cts.ExifInterfaceTest.testExifInterfaceForRaw(ExifInterfaceTest.java:411)
at android.media.cts.ExifInterfaceTest.testReadExifDataFromNikonP330Nrw(ExifInterfaceTest.java:463)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testReadExifDataFromOlympusEPL3Orf">
        <Failure message="java.io.FileNotFoundException: /storage/emulated/0/test/images/olympus_e_pl3.orf (No such file or directory)&#13;">
          <StackTrace>java.io.FileNotFoundException: /storage/emulated/0/test/images/olympus_e_pl3.orf (No such file or directory)
at java.io.FileInputStream.open0(Native Method)
at java.io.FileInputStream.open(FileInputStream.java:200)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:150)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:103)
at android.media.ExifInterface.&lt;init&gt;(ExifInterface.java:1329)
at android.media.cts.ExifInterfaceTest.testExifInterfaceCommon(ExifInterfaceTest.java:306)
at android.media.cts.ExifInterfaceTest.testExifInterfaceForRaw(ExifInterfaceTest.java:411)
at android.media.cts.ExifInterfaceTest.testReadExifDataFromOlympusEPL3Orf(ExifInterfaceTest.java:467)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testReadExifDataFromPanasonicGM5Rw2">
        <Failure message="java.io.FileNotFoundException: /storage/emulated/0/test/images/panasonic_gm5.rw2 (No such file or directory)&#13;">
          <StackTrace>java.io.FileNotFoundException: /storage/emulated/0/test/images/panasonic_gm5.rw2 (No such file or directory)
at java.io.FileInputStream.open0(Native Method)
at java.io.FileInputStream.open(FileInputStream.java:200)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:150)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:103)
at android.media.ExifInterface.&lt;init&gt;(ExifInterface.java:1329)
at android.media.cts.ExifInterfaceTest.testExifInterfaceCommon(ExifInterfaceTest.java:306)
at android.media.cts.ExifInterfaceTest.testExifInterfaceForRaw(ExifInterfaceTest.java:411)
at android.media.cts.ExifInterfaceTest.testReadExifDataFromPanasonicGM5Rw2(ExifInterfaceTest.java:471)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testReadExifDataFromPentaxK5Pef">
        <Failure message="java.io.FileNotFoundException: /storage/emulated/0/test/images/pentax_k5.pef (No such file or directory)&#13;">
          <StackTrace>java.io.FileNotFoundException: /storage/emulated/0/test/images/pentax_k5.pef (No such file or directory)
at java.io.FileInputStream.open0(Native Method)
at java.io.FileInputStream.open(FileInputStream.java:200)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:150)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:103)
at android.media.ExifInterface.&lt;init&gt;(ExifInterface.java:1329)
at android.media.cts.ExifInterfaceTest.testExifInterfaceCommon(ExifInterfaceTest.java:306)
at android.media.cts.ExifInterfaceTest.testExifInterfaceForRaw(ExifInterfaceTest.java:411)
at android.media.cts.ExifInterfaceTest.testReadExifDataFromPentaxK5Pef(ExifInterfaceTest.java:475)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testReadExifDataFromSamsungNX3000Srw">
        <Failure message="java.io.FileNotFoundException: /storage/emulated/0/test/images/samsung_nx3000.srw (No such file or directory)&#13;">
          <StackTrace>java.io.FileNotFoundException: /storage/emulated/0/test/images/samsung_nx3000.srw (No such file or directory)
at java.io.FileInputStream.open0(Native Method)
at java.io.FileInputStream.open(FileInputStream.java:200)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:150)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:103)
at android.media.ExifInterface.&lt;init&gt;(ExifInterface.java:1329)
at android.media.cts.ExifInterfaceTest.testExifInterfaceCommon(ExifInterfaceTest.java:306)
at android.media.cts.ExifInterfaceTest.testExifInterfaceForRaw(ExifInterfaceTest.java:411)
at android.media.cts.ExifInterfaceTest.testReadExifDataFromSamsungNX3000Srw(ExifInterfaceTest.java:479)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testReadExifDataFromSonyRX100Arw">
        <Failure message="java.io.FileNotFoundException: /storage/emulated/0/test/images/sony_rx_100.arw (No such file or directory)&#13;">
          <StackTrace>java.io.FileNotFoundException: /storage/emulated/0/test/images/sony_rx_100.arw (No such file or directory)
at java.io.FileInputStream.open0(Native Method)
at java.io.FileInputStream.open(FileInputStream.java:200)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:150)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:103)
at android.media.ExifInterface.&lt;init&gt;(ExifInterface.java:1329)
at android.media.cts.ExifInterfaceTest.testExifInterfaceCommon(ExifInterfaceTest.java:306)
at android.media.cts.ExifInterfaceTest.testExifInterfaceForRaw(ExifInterfaceTest.java:411)
at android.media.cts.ExifInterfaceTest.testReadExifDataFromSonyRX100Arw(ExifInterfaceTest.java:447)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testReadExifDataFromVolantisJpg">
        <Failure message="java.io.FileNotFoundException: /storage/emulated/0/test/images/volantis.jpg (No such file or directory)&#13;">
          <StackTrace>java.io.FileNotFoundException: /storage/emulated/0/test/images/volantis.jpg (No such file or directory)
at java.io.FileInputStream.open0(Native Method)
at java.io.FileInputStream.open(FileInputStream.java:200)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:150)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:103)
at android.media.ExifInterface.&lt;init&gt;(ExifInterface.java:1329)
at android.media.cts.ExifInterfaceTest.testExifInterfaceCommon(ExifInterfaceTest.java:306)
at android.media.cts.ExifInterfaceTest.testExifInterfaceForJpeg(ExifInterfaceTest.java:397)
at android.media.cts.ExifInterfaceTest.testReadExifDataFromVolantisJpg(ExifInterfaceTest.java:443)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.media.cts.ExtractDecodeEditEncodeMuxTest">
      <Test result="fail" name="testExtractDecodeEditEncodeMux720p">
        <Failure message="java.lang.IllegalStateException&#13;">
          <StackTrace>java.lang.IllegalStateException
at android.media.MediaCodec.native_dequeueOutputBuffer(Native Method)
at android.media.MediaCodec.dequeueOutputBuffer(MediaCodec.java:2622)
at android.media.cts.ExtractDecodeEditEncodeMuxTest.doExtractDecodeEditEncodeMux(ExtractDecodeEditEncodeMuxTest.java:1055)
at android.media.cts.ExtractDecodeEditEncodeMuxTest.extractDecodeEditEncodeMux(ExtractDecodeEditEncodeMuxTest.java:388)
at android.media.cts.ExtractDecodeEditEncodeMuxTest.-wrap0(Unknown Source:0)
at android.media.cts.ExtractDecodeEditEncodeMuxTest$TestWrapper.run(ExtractDecodeEditEncodeMuxTest.java:188)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testExtractDecodeEditEncodeMuxQVGA">
        <Failure message="java.lang.IllegalStateException&#13;">
          <StackTrace>java.lang.IllegalStateException
at android.media.MediaCodec.native_dequeueOutputBuffer(Native Method)
at android.media.MediaCodec.dequeueOutputBuffer(MediaCodec.java:2622)
at android.media.cts.ExtractDecodeEditEncodeMuxTest.doExtractDecodeEditEncodeMux(ExtractDecodeEditEncodeMuxTest.java:1055)
at android.media.cts.ExtractDecodeEditEncodeMuxTest.extractDecodeEditEncodeMux(ExtractDecodeEditEncodeMuxTest.java:388)
at android.media.cts.ExtractDecodeEditEncodeMuxTest.-wrap0(Unknown Source:0)
at android.media.cts.ExtractDecodeEditEncodeMuxTest$TestWrapper.run(ExtractDecodeEditEncodeMuxTest.java:188)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.media.cts.ImageReaderDecoderTest">
      <Test result="fail" name="testOtherH263Image">
        <Failure message="java.lang.RuntimeException: while OMX.MTK.VIDEO.DECODER.H263 decoding swirl_176x144_h263: {color-format=2135033992, track-id=1, level=1, mime=video/3gpp, profile=1, language=und, display-width=176, durationUs=2583333, display-height=144, width=176, max-input-size=2879, frame-rate=12, height=144}&#13;">
          <StackTrace>java.lang.RuntimeException: while OMX.MTK.VIDEO.DECODER.H263 decoding swirl_176x144_h263: {color-format=2135033992, track-id=1, level=1, mime=video/3gpp, profile=1, language=und, display-width=176, durationUs=2583333, display-height=144, width=176, max-input-size=2879, frame-rate=12, height=144}
at android.media.cts.ImageReaderDecoderTest$Decoder.videoDecode(ImageReaderDecoderTest.java:301)
at android.media.cts.ImageReaderDecoderTest$Decoder.videoDecode(ImageReaderDecoderTest.java:239)
at android.media.cts.ImageReaderDecoderTest.decodeTest(ImageReaderDecoderTest.java:423)
at android.media.cts.ImageReaderDecoderTest.swirlTest(ImageReaderDecoderTest.java:416)
at android.media.cts.ImageReaderDecoderTest.testOtherH263Image(ImageReaderDecoderTest.java:370)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
Caused by: junit.framework.AssertionFailedError: color of layer-1 is not uniform: [174.88242, 27.762627, 173.88383, 14.521038, 0.4315504, 0.32066482, 0.0063720057, -0.07772127, -0.19730954]
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.media.cts.ImageReaderDecoderTest.validateSwirl(ImageReaderDecoderTest.java:684)
at android.media.cts.ImageReaderDecoderTest.decodeFramesToImage(ImageReaderDecoderTest.java:575)
at android.media.cts.ImageReaderDecoderTest.-wrap0(Unknown Source:0)
at android.media.cts.ImageReaderDecoderTest$Decoder.videoDecode(ImageReaderDecoderTest.java:292)
... 19 more
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOtherH263ImageReader">
        <Failure message="Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOtherH264Image">
        <Failure message="java.lang.RuntimeException: while OMX.MTK.VIDEO.DECODER.AVC decoding swirl_132x130_h264: {color-format=2135033992, track-id=1, level=256, mime=video/avc, profile=1, language=und, display-width=132, csd-1=java.nio.HeapByteBuffer[pos=0 lim=9 cap=9], durationUs=2583333, display-height=130, width=132, max-input-size=1597, frame-rate=12, height=130, csd-0=java.nio.HeapByteBuffer[pos=0 lim=28 cap=28]}&#13;">
          <StackTrace>java.lang.RuntimeException: while OMX.MTK.VIDEO.DECODER.AVC decoding swirl_132x130_h264: {color-format=2135033992, track-id=1, level=256, mime=video/avc, profile=1, language=und, display-width=132, csd-1=java.nio.HeapByteBuffer[pos=0 lim=9 cap=9], durationUs=2583333, display-height=130, width=132, max-input-size=1597, frame-rate=12, height=130, csd-0=java.nio.HeapByteBuffer[pos=0 lim=28 cap=28]}
at android.media.cts.ImageReaderDecoderTest$Decoder.videoDecode(ImageReaderDecoderTest.java:301)
at android.media.cts.ImageReaderDecoderTest$Decoder.videoDecode(ImageReaderDecoderTest.java:239)
at android.media.cts.ImageReaderDecoderTest.decodeTest(ImageReaderDecoderTest.java:423)
at android.media.cts.ImageReaderDecoderTest.swirlTest(ImageReaderDecoderTest.java:416)
at android.media.cts.ImageReaderDecoderTest.testOtherH264Image(ImageReaderDecoderTest.java:369)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
Caused by: junit.framework.AssertionFailedError: color of layer-1 is not uniform: [174.8501, 26.894293, 174.19177, 13.699962, 0.53266126, 0.859622, -0.039674595, 0.26913542, -0.14913738]
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.media.cts.ImageReaderDecoderTest.validateSwirl(ImageReaderDecoderTest.java:684)
at android.media.cts.ImageReaderDecoderTest.decodeFramesToImage(ImageReaderDecoderTest.java:575)
at android.media.cts.ImageReaderDecoderTest.-wrap0(Unknown Source:0)
at android.media.cts.ImageReaderDecoderTest$Decoder.videoDecode(ImageReaderDecoderTest.java:292)
... 19 more
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOtherH264ImageReader">
        <Failure message="Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOtherH265ImageReader">
        <Failure message="Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOtherMpeg4ImageReader">
        <Failure message="Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOtherVP8Image">
        <Failure message="java.lang.RuntimeException: while OMX.MTK.VIDEO.DECODER.VP8 decoding swirl_128x128_vp8: {color-format=2135033992, track-id=1, durationUs=2583000, display-height=128, mime=video/x-vnd.on2.vp8, width=128, height=128, display-width=128}&#13;">
          <StackTrace>java.lang.RuntimeException: while OMX.MTK.VIDEO.DECODER.VP8 decoding swirl_128x128_vp8: {color-format=2135033992, track-id=1, durationUs=2583000, display-height=128, mime=video/x-vnd.on2.vp8, width=128, height=128, display-width=128}
at android.media.cts.ImageReaderDecoderTest$Decoder.videoDecode(ImageReaderDecoderTest.java:301)
at android.media.cts.ImageReaderDecoderTest$Decoder.videoDecode(ImageReaderDecoderTest.java:239)
at android.media.cts.ImageReaderDecoderTest.decodeTest(ImageReaderDecoderTest.java:423)
at android.media.cts.ImageReaderDecoderTest.swirlTest(ImageReaderDecoderTest.java:416)
at android.media.cts.ImageReaderDecoderTest.testOtherVP8Image(ImageReaderDecoderTest.java:372)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
Caused by: junit.framework.AssertionFailedError: color of layer-1 is not uniform: [175.03906, 27.0, 174.0, 13.99214, 0.015625, 0.015625, 0.0011166984, 0.0011166984, 1.0]
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.media.cts.ImageReaderDecoderTest.validateSwirl(ImageReaderDecoderTest.java:684)
at android.media.cts.ImageReaderDecoderTest.decodeFramesToImage(ImageReaderDecoderTest.java:575)
at android.media.cts.ImageReaderDecoderTest.-wrap0(Unknown Source:0)
at android.media.cts.ImageReaderDecoderTest$Decoder.videoDecode(ImageReaderDecoderTest.java:292)
... 19 more
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOtherVP8ImageReader">
        <Failure message="Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOtherVP9ImageReader">
        <Failure message="Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.media.cts.MediaCodecCapabilitiesTest">
      <Test result="fail" name="testGetMaxSupportedInstances">
        <Failure message="junit.framework.AssertionFailedError: Unexpected CodecException android.media.MediaCodec.error_neg_1010&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Unexpected CodecException android.media.MediaCodec.error_neg_1010
at junit.framework.Assert.fail(Assert.java:50)
at android.media.cts.MediaCodecCapabilitiesTest.getActualMax(MediaCodecCapabilitiesTest.java:583)
at android.media.cts.MediaCodecCapabilitiesTest.testGetMaxSupportedInstances(MediaCodecCapabilitiesTest.java:645)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.media.cts.MediaCodecTest">
      <Test result="fail" name="testAbruptStop">
        <Failure message="java.lang.IllegalStateException&#13;">
          <StackTrace>java.lang.IllegalStateException
at android.media.MediaCodec.native_stop(Native Method)
at android.media.MediaCodec.stop(MediaCodec.java:2059)
at android.media.cts.MediaCodecTest.doTestAbruptStop(MediaCodecTest.java:492)
at android.media.cts.MediaCodecTest.testAbruptStop(MediaCodecTest.java:456)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testReconfigureWithoutSurface">
        <Failure message="java.lang.IllegalStateException&#13;">
          <StackTrace>java.lang.IllegalStateException
at android.media.MediaCodec.native_stop(Native Method)
at android.media.MediaCodec.stop(MediaCodec.java:2059)
at android.media.cts.MediaCodecTest.testReconfigureWithoutSurface(MediaCodecTest.java:1010)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.media.cts.MediaPlayerTest">
      <Test result="fail" name="testChangeSubtitleTrack">
        <Failure message="java.lang.RuntimeException: Could not launch intent Intent { act=android.intent.action.MAIN flg=0x10000000 cmp=android.media.cts/.MediaStubActivity } within 45 seconds. Perhaps the main thread has not gone idle within a reasonable amount of time? There could be an animation or something constantly repainting the screen. Or the activity is doing network calls on creation? See the threaddump logs. For your reference the last time the event queue was idle before your activity launch request was 1514972392307 and now the last time the queue went idle was: 1514972393339. If these numbers are the same your activity might be hogging the event queue.&#13;">
          <StackTrace>java.lang.RuntimeException: Could not launch intent Intent { act=android.intent.action.MAIN flg=0x10000000 cmp=android.media.cts/.MediaStubActivity } within 45 seconds. Perhaps the main thread has not gone idle within a reasonable amount of time? There could be an animation or something constantly repainting the screen. Or the activity is doing network calls on creation? See the threaddump logs. For your reference the last time the event queue was idle before your activity launch request was 1514972392307 and now the last time the queue went idle was: 1514972393339. If these numbers are the same your activity might be hogging the event queue.
at android.support.test.runner.MonitoringInstrumentation.startActivitySync(MonitoringInstrumentation.java:407)
at android.test.InstrumentationTestCase.launchActivityWithIntent(InstrumentationTestCase.java:125)
at android.test.InstrumentationTestCase.launchActivity(InstrumentationTestCase.java:103)
at android.test.ActivityInstrumentationTestCase2.getActivity(ActivityInstrumentationTestCase2.java:104)
at android.media.cts.MediaPlayerTestBase.setUp(MediaPlayerTestBase.java:123)
at android.media.cts.MediaPlayerTest.setUp(MediaPlayerTest.java:99)
at junit.framework.TestCase.runBare(TestCase.java:132)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testSeekModes">
        <Failure message="Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.media.cts.MediaRandomTest">
      <Test result="fail" name="testPlayerRandomActionHEVC">
        <Failure message="Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.media.cts.NativeDecoderTest">
      <Test result="fail" name="testDecoder">
        <Failure message="junit.framework.AssertionFailedError: different decoded data&#13;">
          <StackTrace>junit.framework.AssertionFailedError: different decoded data
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.media.cts.NativeDecoderTest.testDecoder(NativeDecoderTest.java:222)
at android.media.cts.NativeDecoderTest.testDecoder(NativeDecoderTest.java:197)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.media.cts.ResourceManagerTest">
      <Test result="fail" name="testReclaimResourceNonsecureVsNonsecure">
        <Failure message="junit.framework.AssertionFailedError: The potential reasons for the failure:&#13;">
          <StackTrace>junit.framework.AssertionFailedError: The potential reasons for the failure:
* Please check if the omx component is returning OMX_ErrorInsufficientResources properly when the codec failure is due to insufficient resource.

at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.media.cts.ResourceManagerStubActivity.testReclaimResource(ResourceManagerStubActivity.java:125)
at android.media.cts.ResourceManagerTest.doTestReclaimResource(ResourceManagerTest.java:33)
at android.media.cts.ResourceManagerTest.testReclaimResourceNonsecureVsNonsecure(ResourceManagerTest.java:38)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.media.cts.VideoEncoderTest">
      <Test result="fail" name="testGoogH264Flex360pWithIntraRefresh">
        <Failure message="junit.framework.AssertionFailedError: received error on OMX.google.h264.encoder: android.media.MediaCodec$CodecException: Error 0x80001001&#13;">
          <StackTrace>junit.framework.AssertionFailedError: received error on OMX.google.h264.encoder: android.media.MediaCodec$CodecException: Error 0x80001001
at junit.framework.Assert.fail(Assert.java:50)
at android.media.cts.VideoEncoderTest$VideoProcessor.onError(VideoEncoderTest.java:613)
at android.media.MediaCodec$EventHandler.handleCallback(MediaCodec.java:1681)
at android.media.MediaCodec$EventHandler.handleMessage(MediaCodec.java:1621)
at android.os.Handler.dispatchMessage(Handler.java:105)
at android.os.Looper.loop(Looper.java:164)
at android.app.ActivityThread.main(ActivityThread.java:6541)
at java.lang.reflect.Method.invoke(Native Method)
at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:240)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:767)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogH264FlexArbitraryH">
        <Failure message="junit.framework.AssertionFailedError: received error on OMX.google.h264.encoder: android.media.MediaCodec$CodecException: Error 0x80001001&#13;">
          <StackTrace>junit.framework.AssertionFailedError: received error on OMX.google.h264.encoder: android.media.MediaCodec$CodecException: Error 0x80001001
at junit.framework.Assert.fail(Assert.java:50)
at android.media.cts.VideoEncoderTest$VideoProcessor.onError(VideoEncoderTest.java:613)
at android.media.MediaCodec$EventHandler.handleCallback(MediaCodec.java:1681)
at android.media.MediaCodec$EventHandler.handleMessage(MediaCodec.java:1621)
at android.os.Handler.dispatchMessage(Handler.java:105)
at android.os.Looper.loop(Looper.java:164)
at android.app.ActivityThread.main(ActivityThread.java:6541)
at java.lang.reflect.Method.invoke(Native Method)
at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:240)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:767)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogH264SurfArbitraryH">
        <Failure message="java.lang.RuntimeException: glUseProgram: glError 1285&#13;">
          <StackTrace>java.lang.RuntimeException: glUseProgram: glError 1285
at android.media.cts.TextureRender.checkGlError(TextureRender.java:245)
at android.media.cts.TextureRender.drawFrame(TextureRender.java:105)
at android.media.cts.OutputSurface.drawImage(OutputSurface.java:289)
at android.media.cts.VideoEncoderTest$SurfaceVideoProcessor.processLoop(VideoEncoderTest.java:727)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1142)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testArbitrary(VideoEncoderTest.java:1028)
at android.media.cts.VideoEncoderTest.arbitrary(VideoEncoderTest.java:1754)
at android.media.cts.VideoEncoderTest.arbitraryh(VideoEncoderTest.java:1768)
at android.media.cts.VideoEncoderTest.testGoogH264SurfArbitraryH(VideoEncoderTest.java:1446)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogH264SurfNearMinMax">
        <Failure message="java.lang.RuntimeException: glUseProgram: glError 1285&#13;">
          <StackTrace>java.lang.RuntimeException: glUseProgram: glError 1285
at android.media.cts.TextureRender.checkGlError(TextureRender.java:245)
at android.media.cts.TextureRender.drawFrame(TextureRender.java:105)
at android.media.cts.OutputSurface.drawImage(OutputSurface.java:289)
at android.media.cts.VideoEncoderTest$SurfaceVideoProcessor.processLoop(VideoEncoderTest.java:727)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1142)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testExtreme(VideoEncoderTest.java:1018)
at android.media.cts.VideoEncoderTest.extreme(VideoEncoderTest.java:1738)
at android.media.cts.VideoEncoderTest.nearminmax(VideoEncoderTest.java:1720)
at android.media.cts.VideoEncoderTest.testGoogH264SurfNearMinMax(VideoEncoderTest.java:1342)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogH264SurfNearMinMin">
        <Failure message="java.lang.RuntimeException: glUseProgram: glError 1285&#13;">
          <StackTrace>java.lang.RuntimeException: glUseProgram: glError 1285
at android.media.cts.TextureRender.checkGlError(TextureRender.java:245)
at android.media.cts.TextureRender.drawFrame(TextureRender.java:105)
at android.media.cts.OutputSurface.drawImage(OutputSurface.java:289)
at android.media.cts.VideoEncoderTest$SurfaceVideoProcessor.processLoop(VideoEncoderTest.java:727)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1142)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testExtreme(VideoEncoderTest.java:1018)
at android.media.cts.VideoEncoderTest.extreme(VideoEncoderTest.java:1738)
at android.media.cts.VideoEncoderTest.nearminmin(VideoEncoderTest.java:1716)
at android.media.cts.VideoEncoderTest.testGoogH264SurfNearMinMin(VideoEncoderTest.java:1316)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogMpeg4FlexArbitraryH">
        <Failure message="android.media.MediaCodec$CodecException: Error 0xfffffc0e&#13;">
          <StackTrace>android.media.MediaCodec$CodecException: Error 0xfffffc0e
at android.media.MediaCodec.native_configure(Native Method)
at android.media.MediaCodec.configure(MediaCodec.java:1935)
at android.media.MediaCodec.configure(MediaCodec.java:1864)
at android.media.cts.VideoEncoderTest$VideoStorage.play(VideoEncoderTest.java:134)
at android.media.cts.VideoEncoderTest$VideoStorage.playAll(VideoEncoderTest.java:167)
at android.media.cts.VideoEncoderTest$VideoProcessorBase.playBack(VideoEncoderTest.java:404)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1145)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testArbitrary(VideoEncoderTest.java:1028)
at android.media.cts.VideoEncoderTest.arbitrary(VideoEncoderTest.java:1754)
at android.media.cts.VideoEncoderTest.arbitraryh(VideoEncoderTest.java:1768)
at android.media.cts.VideoEncoderTest.testGoogMpeg4FlexArbitraryH(VideoEncoderTest.java:1449)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogMpeg4FlexArbitraryW">
        <Failure message="android.media.MediaCodec$CodecException: Error 0xfffffc0e&#13;">
          <StackTrace>android.media.MediaCodec$CodecException: Error 0xfffffc0e
at android.media.MediaCodec.native_configure(Native Method)
at android.media.MediaCodec.configure(MediaCodec.java:1935)
at android.media.MediaCodec.configure(MediaCodec.java:1864)
at android.media.cts.VideoEncoderTest$VideoStorage.play(VideoEncoderTest.java:134)
at android.media.cts.VideoEncoderTest$VideoStorage.playAll(VideoEncoderTest.java:167)
at android.media.cts.VideoEncoderTest$VideoProcessorBase.playBack(VideoEncoderTest.java:404)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1145)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testArbitrary(VideoEncoderTest.java:1028)
at android.media.cts.VideoEncoderTest.arbitrary(VideoEncoderTest.java:1754)
at android.media.cts.VideoEncoderTest.arbitraryw(VideoEncoderTest.java:1764)
at android.media.cts.VideoEncoderTest.testGoogMpeg4FlexArbitraryW(VideoEncoderTest.java:1423)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogMpeg4FlexMinMax">
        <Failure message="android.media.MediaCodec$CodecException: Error 0xfffffc0e&#13;">
          <StackTrace>android.media.MediaCodec$CodecException: Error 0xfffffc0e
at android.media.MediaCodec.native_configure(Native Method)
at android.media.MediaCodec.configure(MediaCodec.java:1935)
at android.media.MediaCodec.configure(MediaCodec.java:1864)
at android.media.cts.VideoEncoderTest$VideoStorage.play(VideoEncoderTest.java:134)
at android.media.cts.VideoEncoderTest$VideoStorage.playAll(VideoEncoderTest.java:167)
at android.media.cts.VideoEncoderTest$VideoProcessorBase.playBack(VideoEncoderTest.java:404)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1145)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testExtreme(VideoEncoderTest.java:1018)
at android.media.cts.VideoEncoderTest.extreme(VideoEncoderTest.java:1738)
at android.media.cts.VideoEncoderTest.minmax(VideoEncoderTest.java:1704)
at android.media.cts.VideoEncoderTest.testGoogMpeg4FlexMinMax(VideoEncoderTest.java:1241)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogMpeg4FlexMinMin">
        <Failure message="android.media.MediaCodec$CodecException: Error 0xfffffc0e&#13;">
          <StackTrace>android.media.MediaCodec$CodecException: Error 0xfffffc0e
at android.media.MediaCodec.native_configure(Native Method)
at android.media.MediaCodec.configure(MediaCodec.java:1935)
at android.media.MediaCodec.configure(MediaCodec.java:1864)
at android.media.cts.VideoEncoderTest$VideoStorage.play(VideoEncoderTest.java:134)
at android.media.cts.VideoEncoderTest$VideoStorage.playAll(VideoEncoderTest.java:167)
at android.media.cts.VideoEncoderTest$VideoProcessorBase.playBack(VideoEncoderTest.java:404)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1145)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testExtreme(VideoEncoderTest.java:1018)
at android.media.cts.VideoEncoderTest.extreme(VideoEncoderTest.java:1738)
at android.media.cts.VideoEncoderTest.minmin(VideoEncoderTest.java:1700)
at android.media.cts.VideoEncoderTest.testGoogMpeg4FlexMinMin(VideoEncoderTest.java:1215)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogMpeg4FlexNearMaxMin">
        <Failure message="android.media.MediaCodec$CodecException: Error 0xfffffc0e&#13;">
          <StackTrace>android.media.MediaCodec$CodecException: Error 0xfffffc0e
at android.media.MediaCodec.native_configure(Native Method)
at android.media.MediaCodec.configure(MediaCodec.java:1935)
at android.media.MediaCodec.configure(MediaCodec.java:1864)
at android.media.cts.VideoEncoderTest$VideoStorage.play(VideoEncoderTest.java:134)
at android.media.cts.VideoEncoderTest$VideoStorage.playAll(VideoEncoderTest.java:167)
at android.media.cts.VideoEncoderTest$VideoProcessorBase.playBack(VideoEncoderTest.java:404)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1145)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testExtreme(VideoEncoderTest.java:1018)
at android.media.cts.VideoEncoderTest.extreme(VideoEncoderTest.java:1738)
at android.media.cts.VideoEncoderTest.nearmaxmin(VideoEncoderTest.java:1724)
at android.media.cts.VideoEncoderTest.testGoogMpeg4FlexNearMaxMin(VideoEncoderTest.java:1371)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogMpeg4FlexNearMinMax">
        <Failure message="junit.framework.AssertionFailedError: timed out after 0 decoder output and 2 encoder input buffers&#13;">
          <StackTrace>junit.framework.AssertionFailedError: timed out after 0 decoder output and 2 encoder input buffers
at junit.framework.Assert.fail(Assert.java:50)
at android.media.cts.VideoEncoderTest$VideoProcessor.processLoop(VideoEncoderTest.java:496)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1142)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testExtreme(VideoEncoderTest.java:1018)
at android.media.cts.VideoEncoderTest.extreme(VideoEncoderTest.java:1738)
at android.media.cts.VideoEncoderTest.nearminmax(VideoEncoderTest.java:1720)
at android.media.cts.VideoEncoderTest.testGoogMpeg4FlexNearMinMax(VideoEncoderTest.java:1345)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogMpeg4FlexNearMinMin">
        <Failure message="android.media.MediaCodec$CodecException: Error 0xfffffc0e&#13;">
          <StackTrace>android.media.MediaCodec$CodecException: Error 0xfffffc0e
at android.media.MediaCodec.native_configure(Native Method)
at android.media.MediaCodec.configure(MediaCodec.java:1935)
at android.media.MediaCodec.configure(MediaCodec.java:1864)
at android.media.cts.VideoEncoderTest$VideoStorage.play(VideoEncoderTest.java:134)
at android.media.cts.VideoEncoderTest$VideoStorage.playAll(VideoEncoderTest.java:167)
at android.media.cts.VideoEncoderTest$VideoProcessorBase.playBack(VideoEncoderTest.java:404)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1145)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testExtreme(VideoEncoderTest.java:1018)
at android.media.cts.VideoEncoderTest.extreme(VideoEncoderTest.java:1738)
at android.media.cts.VideoEncoderTest.nearminmin(VideoEncoderTest.java:1716)
at android.media.cts.VideoEncoderTest.testGoogMpeg4FlexNearMinMin(VideoEncoderTest.java:1319)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogMpeg4SurfArbitraryH">
        <Failure message="android.media.MediaCodec$CodecException: Error 0xfffffc0e&#13;">
          <StackTrace>android.media.MediaCodec$CodecException: Error 0xfffffc0e
at android.media.MediaCodec.native_configure(Native Method)
at android.media.MediaCodec.configure(MediaCodec.java:1935)
at android.media.MediaCodec.configure(MediaCodec.java:1864)
at android.media.cts.VideoEncoderTest$VideoStorage.play(VideoEncoderTest.java:134)
at android.media.cts.VideoEncoderTest$VideoStorage.playAll(VideoEncoderTest.java:167)
at android.media.cts.VideoEncoderTest$VideoProcessorBase.playBack(VideoEncoderTest.java:404)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1145)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testArbitrary(VideoEncoderTest.java:1028)
at android.media.cts.VideoEncoderTest.arbitrary(VideoEncoderTest.java:1754)
at android.media.cts.VideoEncoderTest.arbitraryh(VideoEncoderTest.java:1768)
at android.media.cts.VideoEncoderTest.testGoogMpeg4SurfArbitraryH(VideoEncoderTest.java:1450)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogMpeg4SurfArbitraryW">
        <Failure message="android.media.MediaCodec$CodecException: Error 0xfffffc0e&#13;">
          <StackTrace>android.media.MediaCodec$CodecException: Error 0xfffffc0e
at android.media.MediaCodec.native_configure(Native Method)
at android.media.MediaCodec.configure(MediaCodec.java:1935)
at android.media.MediaCodec.configure(MediaCodec.java:1864)
at android.media.cts.VideoEncoderTest$VideoStorage.play(VideoEncoderTest.java:134)
at android.media.cts.VideoEncoderTest$VideoStorage.playAll(VideoEncoderTest.java:167)
at android.media.cts.VideoEncoderTest$VideoProcessorBase.playBack(VideoEncoderTest.java:404)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1145)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testArbitrary(VideoEncoderTest.java:1028)
at android.media.cts.VideoEncoderTest.arbitrary(VideoEncoderTest.java:1754)
at android.media.cts.VideoEncoderTest.arbitraryw(VideoEncoderTest.java:1764)
at android.media.cts.VideoEncoderTest.testGoogMpeg4SurfArbitraryW(VideoEncoderTest.java:1424)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogMpeg4SurfMinMax">
        <Failure message="android.media.MediaCodec$CodecException: Error 0xfffffc0e&#13;">
          <StackTrace>android.media.MediaCodec$CodecException: Error 0xfffffc0e
at android.media.MediaCodec.native_configure(Native Method)
at android.media.MediaCodec.configure(MediaCodec.java:1935)
at android.media.MediaCodec.configure(MediaCodec.java:1864)
at android.media.cts.VideoEncoderTest$VideoStorage.play(VideoEncoderTest.java:134)
at android.media.cts.VideoEncoderTest$VideoStorage.playAll(VideoEncoderTest.java:167)
at android.media.cts.VideoEncoderTest$VideoProcessorBase.playBack(VideoEncoderTest.java:404)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1145)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testExtreme(VideoEncoderTest.java:1018)
at android.media.cts.VideoEncoderTest.extreme(VideoEncoderTest.java:1738)
at android.media.cts.VideoEncoderTest.minmax(VideoEncoderTest.java:1704)
at android.media.cts.VideoEncoderTest.testGoogMpeg4SurfMinMax(VideoEncoderTest.java:1242)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogMpeg4SurfMinMin">
        <Failure message="android.media.MediaCodec$CodecException: Error 0xfffffc0e&#13;">
          <StackTrace>android.media.MediaCodec$CodecException: Error 0xfffffc0e
at android.media.MediaCodec.native_configure(Native Method)
at android.media.MediaCodec.configure(MediaCodec.java:1935)
at android.media.MediaCodec.configure(MediaCodec.java:1864)
at android.media.cts.VideoEncoderTest$VideoStorage.play(VideoEncoderTest.java:134)
at android.media.cts.VideoEncoderTest$VideoStorage.playAll(VideoEncoderTest.java:167)
at android.media.cts.VideoEncoderTest$VideoProcessorBase.playBack(VideoEncoderTest.java:404)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1145)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testExtreme(VideoEncoderTest.java:1018)
at android.media.cts.VideoEncoderTest.extreme(VideoEncoderTest.java:1738)
at android.media.cts.VideoEncoderTest.minmin(VideoEncoderTest.java:1700)
at android.media.cts.VideoEncoderTest.testGoogMpeg4SurfMinMin(VideoEncoderTest.java:1216)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogMpeg4SurfNearMaxMin">
        <Failure message="android.media.MediaCodec$CodecException: Error 0xfffffc0e&#13;">
          <StackTrace>android.media.MediaCodec$CodecException: Error 0xfffffc0e
at android.media.MediaCodec.native_configure(Native Method)
at android.media.MediaCodec.configure(MediaCodec.java:1935)
at android.media.MediaCodec.configure(MediaCodec.java:1864)
at android.media.cts.VideoEncoderTest$VideoStorage.play(VideoEncoderTest.java:134)
at android.media.cts.VideoEncoderTest$VideoStorage.playAll(VideoEncoderTest.java:167)
at android.media.cts.VideoEncoderTest$VideoProcessorBase.playBack(VideoEncoderTest.java:404)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1145)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testExtreme(VideoEncoderTest.java:1018)
at android.media.cts.VideoEncoderTest.extreme(VideoEncoderTest.java:1738)
at android.media.cts.VideoEncoderTest.nearmaxmin(VideoEncoderTest.java:1724)
at android.media.cts.VideoEncoderTest.testGoogMpeg4SurfNearMaxMin(VideoEncoderTest.java:1372)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogMpeg4SurfNearMinMax">
        <Failure message="android.media.MediaCodec$CodecException: Error 0xfffffc0e&#13;">
          <StackTrace>android.media.MediaCodec$CodecException: Error 0xfffffc0e
at android.media.MediaCodec.native_configure(Native Method)
at android.media.MediaCodec.configure(MediaCodec.java:1935)
at android.media.MediaCodec.configure(MediaCodec.java:1864)
at android.media.cts.VideoEncoderTest$VideoStorage.play(VideoEncoderTest.java:134)
at android.media.cts.VideoEncoderTest$VideoStorage.playAll(VideoEncoderTest.java:167)
at android.media.cts.VideoEncoderTest$VideoProcessorBase.playBack(VideoEncoderTest.java:404)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1145)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testExtreme(VideoEncoderTest.java:1018)
at android.media.cts.VideoEncoderTest.extreme(VideoEncoderTest.java:1738)
at android.media.cts.VideoEncoderTest.nearminmax(VideoEncoderTest.java:1720)
at android.media.cts.VideoEncoderTest.testGoogMpeg4SurfNearMinMax(VideoEncoderTest.java:1346)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogMpeg4SurfNearMinMin">
        <Failure message="android.media.MediaCodec$CodecException: Error 0xfffffc0e&#13;">
          <StackTrace>android.media.MediaCodec$CodecException: Error 0xfffffc0e
at android.media.MediaCodec.native_configure(Native Method)
at android.media.MediaCodec.configure(MediaCodec.java:1935)
at android.media.MediaCodec.configure(MediaCodec.java:1864)
at android.media.cts.VideoEncoderTest$VideoStorage.play(VideoEncoderTest.java:134)
at android.media.cts.VideoEncoderTest$VideoStorage.playAll(VideoEncoderTest.java:167)
at android.media.cts.VideoEncoderTest$VideoProcessorBase.playBack(VideoEncoderTest.java:404)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1145)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testExtreme(VideoEncoderTest.java:1018)
at android.media.cts.VideoEncoderTest.extreme(VideoEncoderTest.java:1738)
at android.media.cts.VideoEncoderTest.nearminmin(VideoEncoderTest.java:1716)
at android.media.cts.VideoEncoderTest.testGoogMpeg4SurfNearMinMin(VideoEncoderTest.java:1320)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogVP8SurfArbitraryH">
        <Failure message="java.lang.RuntimeException: glUseProgram: glError 1285&#13;">
          <StackTrace>java.lang.RuntimeException: glUseProgram: glError 1285
at android.media.cts.TextureRender.checkGlError(TextureRender.java:245)
at android.media.cts.TextureRender.drawFrame(TextureRender.java:105)
at android.media.cts.OutputSurface.drawImage(OutputSurface.java:289)
at android.media.cts.VideoEncoderTest$SurfaceVideoProcessor.processLoop(VideoEncoderTest.java:727)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1142)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testArbitrary(VideoEncoderTest.java:1028)
at android.media.cts.VideoEncoderTest.arbitrary(VideoEncoderTest.java:1754)
at android.media.cts.VideoEncoderTest.arbitraryh(VideoEncoderTest.java:1768)
at android.media.cts.VideoEncoderTest.testGoogVP8SurfArbitraryH(VideoEncoderTest.java:1452)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogVP8SurfArbitraryW">
        <Failure message="java.lang.RuntimeException: glUseProgram: glError 1285&#13;">
          <StackTrace>java.lang.RuntimeException: glUseProgram: glError 1285
at android.media.cts.TextureRender.checkGlError(TextureRender.java:245)
at android.media.cts.TextureRender.drawFrame(TextureRender.java:105)
at android.media.cts.OutputSurface.drawImage(OutputSurface.java:289)
at android.media.cts.VideoEncoderTest$SurfaceVideoProcessor.processLoop(VideoEncoderTest.java:727)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1142)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testArbitrary(VideoEncoderTest.java:1028)
at android.media.cts.VideoEncoderTest.arbitrary(VideoEncoderTest.java:1754)
at android.media.cts.VideoEncoderTest.arbitraryw(VideoEncoderTest.java:1764)
at android.media.cts.VideoEncoderTest.testGoogVP8SurfArbitraryW(VideoEncoderTest.java:1426)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogVP8SurfMinMin">
        <Failure message="java.lang.RuntimeException: glUseProgram: glError 1285&#13;">
          <StackTrace>java.lang.RuntimeException: glUseProgram: glError 1285
at android.media.cts.TextureRender.checkGlError(TextureRender.java:245)
at android.media.cts.TextureRender.drawFrame(TextureRender.java:105)
at android.media.cts.OutputSurface.drawImage(OutputSurface.java:289)
at android.media.cts.VideoEncoderTest$SurfaceVideoProcessor.processLoop(VideoEncoderTest.java:727)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1142)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testExtreme(VideoEncoderTest.java:1018)
at android.media.cts.VideoEncoderTest.extreme(VideoEncoderTest.java:1738)
at android.media.cts.VideoEncoderTest.minmin(VideoEncoderTest.java:1700)
at android.media.cts.VideoEncoderTest.testGoogVP8SurfMinMin(VideoEncoderTest.java:1218)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogVP8SurfNearMinMax">
        <Failure message="java.lang.RuntimeException: glUseProgram: glError 1285&#13;">
          <StackTrace>java.lang.RuntimeException: glUseProgram: glError 1285
at android.media.cts.TextureRender.checkGlError(TextureRender.java:245)
at android.media.cts.TextureRender.drawFrame(TextureRender.java:105)
at android.media.cts.OutputSurface.drawImage(OutputSurface.java:289)
at android.media.cts.VideoEncoderTest$SurfaceVideoProcessor.processLoop(VideoEncoderTest.java:727)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1142)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testExtreme(VideoEncoderTest.java:1018)
at android.media.cts.VideoEncoderTest.extreme(VideoEncoderTest.java:1738)
at android.media.cts.VideoEncoderTest.nearminmax(VideoEncoderTest.java:1720)
at android.media.cts.VideoEncoderTest.testGoogVP8SurfNearMinMax(VideoEncoderTest.java:1348)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogVP8SurfNearMinMin">
        <Failure message="java.lang.RuntimeException: glUseProgram: glError 1285&#13;">
          <StackTrace>java.lang.RuntimeException: glUseProgram: glError 1285
at android.media.cts.TextureRender.checkGlError(TextureRender.java:245)
at android.media.cts.TextureRender.drawFrame(TextureRender.java:105)
at android.media.cts.OutputSurface.drawImage(OutputSurface.java:289)
at android.media.cts.VideoEncoderTest$SurfaceVideoProcessor.processLoop(VideoEncoderTest.java:727)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1142)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testExtreme(VideoEncoderTest.java:1018)
at android.media.cts.VideoEncoderTest.extreme(VideoEncoderTest.java:1738)
at android.media.cts.VideoEncoderTest.nearminmin(VideoEncoderTest.java:1716)
at android.media.cts.VideoEncoderTest.testGoogVP8SurfNearMinMin(VideoEncoderTest.java:1322)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogVP9FlexArbitraryH">
        <Failure message="junit.framework.AssertionFailedError: timed out after 11 decoder output and 0 encoder input buffers&#13;">
          <StackTrace>junit.framework.AssertionFailedError: timed out after 11 decoder output and 0 encoder input buffers
at junit.framework.Assert.fail(Assert.java:50)
at android.media.cts.VideoEncoderTest$VideoProcessor.processLoop(VideoEncoderTest.java:496)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1142)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testArbitrary(VideoEncoderTest.java:1028)
at android.media.cts.VideoEncoderTest.arbitrary(VideoEncoderTest.java:1754)
at android.media.cts.VideoEncoderTest.arbitraryh(VideoEncoderTest.java:1768)
at android.media.cts.VideoEncoderTest.testGoogVP9FlexArbitraryH(VideoEncoderTest.java:1453)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogVP9FlexMaxMax">
        <Failure message="junit.framework.AssertionFailedError: received error on OMX.google.vp9.encoder: android.media.MediaCodec$CodecException: Error 0x80001001&#13;">
          <StackTrace>junit.framework.AssertionFailedError: received error on OMX.google.vp9.encoder: android.media.MediaCodec$CodecException: Error 0x80001001
at junit.framework.Assert.fail(Assert.java:50)
at android.media.cts.VideoEncoderTest$VideoProcessor.onError(VideoEncoderTest.java:613)
at android.media.MediaCodec$EventHandler.handleCallback(MediaCodec.java:1681)
at android.media.MediaCodec$EventHandler.handleMessage(MediaCodec.java:1621)
at android.os.Handler.dispatchMessage(Handler.java:105)
at android.os.Looper.loop(Looper.java:164)
at android.app.ActivityThread.main(ActivityThread.java:6541)
at java.lang.reflect.Method.invoke(Native Method)
at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:240)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:767)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogVP9SurfArbitraryH">
        <Failure message="java.lang.RuntimeException: glUseProgram: glError 1285&#13;">
          <StackTrace>java.lang.RuntimeException: glUseProgram: glError 1285
at android.media.cts.TextureRender.checkGlError(TextureRender.java:245)
at android.media.cts.TextureRender.drawFrame(TextureRender.java:105)
at android.media.cts.OutputSurface.drawImage(OutputSurface.java:289)
at android.media.cts.VideoEncoderTest$SurfaceVideoProcessor.processLoop(VideoEncoderTest.java:727)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1142)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testArbitrary(VideoEncoderTest.java:1028)
at android.media.cts.VideoEncoderTest.arbitrary(VideoEncoderTest.java:1754)
at android.media.cts.VideoEncoderTest.arbitraryh(VideoEncoderTest.java:1768)
at android.media.cts.VideoEncoderTest.testGoogVP9SurfArbitraryH(VideoEncoderTest.java:1454)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogVP9SurfNearMinMax">
        <Failure message="java.lang.RuntimeException: glUseProgram: glError 1285&#13;">
          <StackTrace>java.lang.RuntimeException: glUseProgram: glError 1285
at android.media.cts.TextureRender.checkGlError(TextureRender.java:245)
at android.media.cts.TextureRender.drawFrame(TextureRender.java:105)
at android.media.cts.OutputSurface.drawImage(OutputSurface.java:289)
at android.media.cts.VideoEncoderTest$SurfaceVideoProcessor.processLoop(VideoEncoderTest.java:727)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1142)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testExtreme(VideoEncoderTest.java:1018)
at android.media.cts.VideoEncoderTest.extreme(VideoEncoderTest.java:1738)
at android.media.cts.VideoEncoderTest.nearminmax(VideoEncoderTest.java:1720)
at android.media.cts.VideoEncoderTest.testGoogVP9SurfNearMinMax(VideoEncoderTest.java:1350)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogVP9SurfNearMinMin">
        <Failure message="java.lang.RuntimeException: glUseProgram: glError 1285&#13;">
          <StackTrace>java.lang.RuntimeException: glUseProgram: glError 1285
at android.media.cts.TextureRender.checkGlError(TextureRender.java:245)
at android.media.cts.TextureRender.drawFrame(TextureRender.java:105)
at android.media.cts.OutputSurface.drawImage(OutputSurface.java:289)
at android.media.cts.VideoEncoderTest$SurfaceVideoProcessor.processLoop(VideoEncoderTest.java:727)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1142)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testExtreme(VideoEncoderTest.java:1018)
at android.media.cts.VideoEncoderTest.extreme(VideoEncoderTest.java:1738)
at android.media.cts.VideoEncoderTest.nearminmin(VideoEncoderTest.java:1716)
at android.media.cts.VideoEncoderTest.testGoogVP9SurfNearMinMin(VideoEncoderTest.java:1324)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testH264Surf720p30fps4Mbps">
        <Failure message="junit.framework.AssertionFailedError: received error on OMX.MTK.VIDEO.ENCODER.AVC: android.media.MediaCodec$CodecException: Error 0x80001009&#13;">
          <StackTrace>junit.framework.AssertionFailedError: received error on OMX.MTK.VIDEO.ENCODER.AVC: android.media.MediaCodec$CodecException: Error 0x80001009
at junit.framework.Assert.fail(Assert.java:50)
at android.media.cts.VideoEncoderTest$SurfaceVideoProcessor.onError(VideoEncoderTest.java:845)
at android.media.MediaCodec$EventHandler.handleCallback(MediaCodec.java:1681)
at android.media.MediaCodec$EventHandler.handleMessage(MediaCodec.java:1621)
at android.os.Handler.dispatchMessage(Handler.java:105)
at android.os.Looper.loop(Looper.java:164)
at android.app.ActivityThread.main(ActivityThread.java:6541)
at java.lang.reflect.Method.invoke(Native Method)
at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:240)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:767)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOtherH264FlexArbitraryH">
        <Failure message="Test failed to run to completion. Reason: 'Test run failed to complete. Expected 9 tests, received 6'. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Test run failed to complete. Expected 9 tests, received 6'. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOtherH264FlexArbitraryW">
        <Failure message="junit.framework.AssertionFailedError: could not get encoder image for {color-format=21, slice-height=1184, image-data=java.nio.HeapByteBuffer[pos=0 lim=104 cap=104], mime=video/raw, width=256, stride=256, height=1184}&#13;">
          <StackTrace>junit.framework.AssertionFailedError: could not get encoder image for {color-format=21, slice-height=1184, image-data=java.nio.HeapByteBuffer[pos=0 lim=104 cap=104], mime=video/raw, width=256, stride=256, height=1184}
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertNotNull(Assert.java:218)
at android.media.cts.VideoEncoderTest$VideoProcessor.renderDecodedBuffer(VideoEncoderTest.java:588)
at android.media.cts.VideoEncoderTest$VideoProcessor.processLoop(VideoEncoderTest.java:512)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1142)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testArbitrary(VideoEncoderTest.java:1028)
at android.media.cts.VideoEncoderTest.arbitrary(VideoEncoderTest.java:1754)
at android.media.cts.VideoEncoderTest.arbitraryw(VideoEncoderTest.java:1764)
at android.media.cts.VideoEncoderTest.testOtherH264FlexArbitraryW(VideoEncoderTest.java:1432)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOtherH264FlexMaxMax">
        <Failure message="junit.framework.AssertionFailedError: could not configure encoder for supported size&#13;">
          <StackTrace>junit.framework.AssertionFailedError: could not configure encoder for supported size
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.media.cts.VideoEncoderTest$VideoProcessor.processLoop(VideoEncoderTest.java:462)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1142)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testExtreme(VideoEncoderTest.java:1018)
at android.media.cts.VideoEncoderTest.extreme(VideoEncoderTest.java:1738)
at android.media.cts.VideoEncoderTest.maxmax(VideoEncoderTest.java:1712)
at android.media.cts.VideoEncoderTest.testOtherH264FlexMaxMax(VideoEncoderTest.java:1302)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOtherH264FlexNearMaxMax">
        <Failure message="junit.framework.AssertionFailedError: could not configure encoder for supported size&#13;">
          <StackTrace>junit.framework.AssertionFailedError: could not configure encoder for supported size
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.media.cts.VideoEncoderTest$VideoProcessor.processLoop(VideoEncoderTest.java:462)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1142)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testExtreme(VideoEncoderTest.java:1018)
at android.media.cts.VideoEncoderTest.extreme(VideoEncoderTest.java:1738)
at android.media.cts.VideoEncoderTest.nearmaxmax(VideoEncoderTest.java:1728)
at android.media.cts.VideoEncoderTest.testOtherH264FlexNearMaxMax(VideoEncoderTest.java:1406)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOtherH264SurfMinMin">
        <Failure message="junit.framework.AssertionFailedError: received error on OMX.MTK.VIDEO.ENCODER.AVC: android.media.MediaCodec$CodecException: Error 0x80001009&#13;">
          <StackTrace>junit.framework.AssertionFailedError: received error on OMX.MTK.VIDEO.ENCODER.AVC: android.media.MediaCodec$CodecException: Error 0x80001009
at junit.framework.Assert.fail(Assert.java:50)
at android.media.cts.VideoEncoderTest$SurfaceVideoProcessor.onError(VideoEncoderTest.java:845)
at android.media.MediaCodec$EventHandler.handleCallback(MediaCodec.java:1681)
at android.media.MediaCodec$EventHandler.handleMessage(MediaCodec.java:1621)
at android.os.Handler.dispatchMessage(Handler.java:105)
at android.os.Looper.loop(Looper.java:164)
at android.app.ActivityThread.main(ActivityThread.java:6541)
at java.lang.reflect.Method.invoke(Native Method)
at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:240)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:767)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOtherH264SurfNearMaxMax">
        <Failure message="junit.framework.AssertionFailedError: could not configure encoder for supported size&#13;">
          <StackTrace>junit.framework.AssertionFailedError: could not configure encoder for supported size
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.media.cts.VideoEncoderTest$SurfaceVideoProcessor.processLoop(VideoEncoderTest.java:678)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1142)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testExtreme(VideoEncoderTest.java:1018)
at android.media.cts.VideoEncoderTest.extreme(VideoEncoderTest.java:1738)
at android.media.cts.VideoEncoderTest.nearmaxmax(VideoEncoderTest.java:1728)
at android.media.cts.VideoEncoderTest.testOtherH264SurfNearMaxMax(VideoEncoderTest.java:1407)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOtherH264SurfNearMaxMin">
        <Failure message="junit.framework.AssertionFailedError: received error on OMX.MTK.VIDEO.ENCODER.AVC: android.media.MediaCodec$CodecException: Error 0x80001009&#13;">
          <StackTrace>junit.framework.AssertionFailedError: received error on OMX.MTK.VIDEO.ENCODER.AVC: android.media.MediaCodec$CodecException: Error 0x80001009
at junit.framework.Assert.fail(Assert.java:50)
at android.media.cts.VideoEncoderTest$SurfaceVideoProcessor.onError(VideoEncoderTest.java:845)
at android.media.MediaCodec$EventHandler.handleCallback(MediaCodec.java:1681)
at android.media.MediaCodec$EventHandler.handleMessage(MediaCodec.java:1621)
at android.os.Handler.dispatchMessage(Handler.java:105)
at android.os.Looper.loop(Looper.java:164)
at android.app.ActivityThread.main(ActivityThread.java:6541)
at java.lang.reflect.Method.invoke(Native Method)
at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:240)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:767)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOtherH264SurfNearMinMin">
        <Failure message="junit.framework.AssertionFailedError: received error on OMX.MTK.VIDEO.ENCODER.AVC: android.media.MediaCodec$CodecException: Error 0x80001009&#13;">
          <StackTrace>junit.framework.AssertionFailedError: received error on OMX.MTK.VIDEO.ENCODER.AVC: android.media.MediaCodec$CodecException: Error 0x80001009
at junit.framework.Assert.fail(Assert.java:50)
at android.media.cts.VideoEncoderTest$SurfaceVideoProcessor.onError(VideoEncoderTest.java:845)
at android.media.MediaCodec$EventHandler.handleCallback(MediaCodec.java:1681)
at android.media.MediaCodec$EventHandler.handleMessage(MediaCodec.java:1621)
at android.os.Handler.dispatchMessage(Handler.java:105)
at android.os.Looper.loop(Looper.java:164)
at android.app.ActivityThread.main(ActivityThread.java:6541)
at java.lang.reflect.Method.invoke(Native Method)
at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:240)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:767)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testVP8Surf1080p30fps10Mbps">
        <Failure message="junit.framework.AssertionFailedError: still waiting for image&#13;">
          <StackTrace>junit.framework.AssertionFailedError: still waiting for image
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.media.cts.VideoEncoderTest$SurfaceVideoProcessor.processLoop(VideoEncoderTest.java:715)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1142)
at android.media.cts.VideoEncoderTest$Encoder.testDetailed(VideoEncoderTest.java:1106)
at android.media.cts.VideoEncoderTest.detailed(VideoEncoderTest.java:1817)
at android.media.cts.VideoEncoderTest.testVP8Surf1080p30fps10Mbps(VideoEncoderTest.java:1696)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.media.cts.VpxEncoderTest">
      <Test result="fail" name="testEncoderQualityVP8">
        <Failure message="java.lang.RuntimeException: Target bitrates: 300000, 500000. Actual PSNRs: 16.776814220385962, 16.683659735893865&#13;">
          <StackTrace>java.lang.RuntimeException: Target bitrates: 300000, 500000. Actual PSNRs: 16.776814220385962, 16.683659735893865
at android.media.cts.VpxEncoderTest.internalTestEncoderQuality(VpxEncoderTest.java:475)
at android.media.cts.VpxEncoderTest.testEncoderQualityVP8(VpxEncoderTest.java:544)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
  </Module>
  <Module name="CtsNetTestCases" abi="arm64-v8a" runtime="1179128" done="true" pass="162">
    <TestCase name="android.net.cts.DnsTest">
      <Test result="fail" name="testDnsWorks">
        <Failure message="junit.framework.AssertionFailedError: [RERUN] DNS could not resolve ipv6.google.com, check the network supports IPv6&#13;">
          <StackTrace>junit.framework.AssertionFailedError: [RERUN] DNS could not resolve ipv6.google.com, check the network supports IPv6
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.net.cts.DnsTest.testDnsWorks(DnsTest.java:91)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.net.wifi.cts.WifiManagerTest">
      <Test result="fail" name="testWifiWatchdog">
        <Failure message="junit.framework.AssertionFailedError&#13;">
          <StackTrace>junit.framework.AssertionFailedError
at junit.framework.Assert.fail(Assert.java:48)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertTrue(Assert.java:27)
at android.net.wifi.cts.WifiManagerTest.testWifiWatchdog(WifiManagerTest.java:576)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    </Module>
  <Module name="CtsOsTestCases" abi="arm64-v8a" runtime="297539" done="true" pass="449">
    <TestCase name="android.os.cts.BuildVersionTest">
      <Test result="fail" name="testBuildFingerprint">
        <Failure message="junit.framework.ComparisonFailure: Tag expected:&lt;[release]-keys&gt; but was:&lt;[test]-keys&gt;&#13;">
          <StackTrace>junit.framework.ComparisonFailure: Tag expected:&lt;[release]-keys&gt; but was:&lt;[test]-keys&gt;
at junit.framework.Assert.assertEquals(Assert.java:85)
at android.os.cts.BuildVersionTest.testBuildFingerprint(BuildVersionTest.java:87)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    </Module>
  <Module name="CtsPermission2TestCases" abi="arm64-v8a" runtime="3843" done="true" pass="13">
    <TestCase name="android.permission2.cts.PermissionPolicyTest">
      <Test result="fail" name="testPlatformPermissionPolicyUnaltered">
        <Failure message="junit.framework.AssertionFailedError: Cannot define permission in android namespace:android.permission.HIDE_NON_SYSTEM_OVERLAY_WINDOWS&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Cannot define permission in android namespace:android.permission.HIDE_NON_SYSTEM_OVERLAY_WINDOWS
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertFalse(Assert.java:34)
at android.permission2.cts.PermissionPolicyTest.testPlatformPermissionPolicyUnaltered(PermissionPolicyTest.java:109)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    </Module>
  <Module name="CtsPermissionTestCases" abi="arm64-v8a" runtime="15362" done="true" pass="152">
    <TestCase name="android.permission.cts.FileSystemPermissionTest">
      <Test result="fail" name="testDevPortSane">
        <Failure message="junit.framework.AssertionFailedError&#13;">
          <StackTrace>junit.framework.AssertionFailedError
at junit.framework.Assert.fail(Assert.java:48)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertFalse(Assert.java:34)
at junit.framework.Assert.assertFalse(Assert.java:41)
at android.permission.cts.FileSystemPermissionTest.testDevPortSane(FileSystemPermissionTest.java:187)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    </Module>
  <Module name="CtsProviderTestCases" abi="arm64-v8a" runtime="527488" done="true" pass="340">
    <TestCase name="android.provider.cts.MediaStoreIntentsTest">
      <Test result="fail" name="testViewImageFile">
        <Failure message="junit.framework.AssertionFailedError: No ResolveInfo found for Intent { act=android.intent.action.VIEW dat=http://example.com/image typ=image/bmp }&#13;">
          <StackTrace>junit.framework.AssertionFailedError: No ResolveInfo found for Intent { act=android.intent.action.VIEW dat=http://example.com/image typ=image/bmp }
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.provider.cts.MediaStoreIntentsTest.assertCanBeHandled(MediaStoreIntentsTest.java:36)
at android.provider.cts.MediaStoreIntentsTest.testViewImageFile(MediaStoreIntentsTest.java:85)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testViewVideoFile">
        <Failure message="junit.framework.AssertionFailedError: No ResolveInfo found for Intent { act=android.intent.action.VIEW dat=http://example.com/video typ=video/mpeg4 }&#13;">
          <StackTrace>junit.framework.AssertionFailedError: No ResolveInfo found for Intent { act=android.intent.action.VIEW dat=http://example.com/video typ=video/mpeg4 }
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.provider.cts.MediaStoreIntentsTest.assertCanBeHandled(MediaStoreIntentsTest.java:36)
at android.provider.cts.MediaStoreIntentsTest.testViewVideoFile(MediaStoreIntentsTest.java:103)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.provider.cts.contacts.ContactsContractIntentsTest">
      <Test result="fail" name="testPickContactDir">
        <Failure message="junit.framework.AssertionFailedError: No ResolveInfo found for Intent { act=android.intent.action.PICK dat=content://com.android.contacts/contacts }&#13;">
          <StackTrace>junit.framework.AssertionFailedError: No ResolveInfo found for Intent { act=android.intent.action.PICK dat=content://com.android.contacts/contacts }
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.provider.cts.contacts.ContactsContractIntentsTest.assertCanBeHandled(ContactsContractIntentsTest.java:35)
at android.provider.cts.contacts.ContactsContractIntentsTest.testPickContactDir(ContactsContractIntentsTest.java:48)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testViewContactDir">
        <Failure message="junit.framework.AssertionFailedError: No ResolveInfo found for Intent { act=android.intent.action.VIEW dat=content://com.android.contacts/contacts }&#13;">
          <StackTrace>junit.framework.AssertionFailedError: No ResolveInfo found for Intent { act=android.intent.action.VIEW dat=content://com.android.contacts/contacts }
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.provider.cts.contacts.ContactsContractIntentsTest.assertCanBeHandled(ContactsContractIntentsTest.java:35)
at android.provider.cts.contacts.ContactsContractIntentsTest.testViewContactDir(ContactsContractIntentsTest.java:42)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.provider.cts.contacts.ContactsContract_ContactsTest">
      <Test result="fail" name="testContentUri">
        <Failure message="junit.framework.AssertionFailedError: Device does not support the activity intent: Intent { act=android.intent.action.VIEW dat=content://com.android.contacts/contacts }&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Device does not support the activity intent: Intent { act=android.intent.action.VIEW dat=content://com.android.contacts/contacts }
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertFalse(Assert.java:34)
at android.provider.cts.contacts.ContactsContract_ContactsTest.testContentUri(ContactsContract_ContactsTest.java:122)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    </Module>
  <Module name="CtsSecurityHostTestCases" abi="arm64-v8a" runtime="422224" done="true" pass="636">
    <TestCase name="android.cts.security.SELinuxNeverallowRulesTest">
      <Test result="fail" name="testNeverallowRules348">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {          coredomain          -init          -modprobe      } vendor_toolbox_exec:file { entrypoint execute execute_no_trans };
libsepol.report_failure: neverallow violated by allow adbd vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow audioserver vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow blkid vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow blkid_untrusted vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow bluetooth vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow bootanim vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow bootstat vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow bufferhubd vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow cameraserver vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow charger vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow clatd vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow cppreopts vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow crash_dump vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow dex2oat vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow dhcp vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow dnsmasq vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow drmserver vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow dumpstate vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow ephemeral_app vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow fingerprintd vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow fsck vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow fsck_untrusted vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow gatekeeperd vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow healthd vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow hwservicemanager vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow idmap vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow incident vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow incidentd vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow inputflinger vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow install_recovery vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow installd vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow isolated_app vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow kernel vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow keystore vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow lmkd vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow logd vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow logpersist vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow mdnsd vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow mediadrmserver vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow mediaextractor vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow mediametrics vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow mediaserver vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow mtp vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow netd vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow netutils_wrapper vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow nfc vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow otapreopt_chroot vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow otapreopt_slot vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow performanced vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow platform_app vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow postinstall vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow postinstall_dexopt vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow ppp vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow preopt2cachename vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow priv_app vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow profman vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow racoon vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow radio vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow recovery vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow recovery_persist vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow recovery_refresh vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow runas vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow sdcardd vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow servicemanager vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow sgdisk vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow shared_relro vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow shell vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow slideshow vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow surfaceflinger vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow system_app vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow system_server vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow tombstoned vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow toolbox vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow tzdatacheck vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow ueventd vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow uncrypt vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow untrusted_app vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow untrusted_app_25 vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow untrusted_v2_app vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow update_engine vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow update_verifier vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow vdc vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow virtual_touchpad vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow vold vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow vr_hwc vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow watchdogd vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow webview_zygote vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow wificond vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow zygote vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow dexoptanalyzer vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow hal_allocator_default vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow storaged vendor_toolbox_exec:file { execute };
libsepol.check_assertions: 92 neverallow failures occurred

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules348(SELinuxNeverallowRulesTest.java:10544)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules440">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow { untrusted_app_all untrusted_app_25 untrusted_app ephemeral_app isolated_app } {      halserverdomain      -coredomain      -hal_configstore_server      -hal_graphics_allocator_server      -binder_in_vendor_violators     }:binder { call transfer };
Warning!  Type or attribute binder_in_vendor_violators used in neverallow undefined in policy being checked.

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules440(SELinuxNeverallowRulesTest.java:13304)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules456">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow ephemeral_app app_data_file:file { execute execute_no_trans };
libsepol.report_failure: neverallow violated by allow ephemeral_app app_data_file:file { execute };
libsepol.check_assertions: 1 neverallow failures occurred

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules456(SELinuxNeverallowRulesTest.java:13784)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules72">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {      domain      -coredomain      -appdomain      -binder_in_vendor_violators     } binder_device:chr_file { { getattr open read ioctl lock } { open append write lock } };
Warning!  Type or attribute binder_in_vendor_violators used in neverallow undefined in policy being checked.
libsepol.report_failure: neverallow violated by allow vpud_native binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_wifi_offload_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_bluetooth_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow wmt_launcher binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_vr_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_sensors_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_tv_input_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_dumpstate_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow mediacodec binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_configstore_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_vr_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hostapd binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow fastrvc_native binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow mtk_agpsd binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_dumpstate_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow qemud binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow vms binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_graphics_allocator_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow mediacodec binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow perfprofd binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_tv_input_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_tv_cec_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow mdpd_native binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_camera_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_ir_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_health_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow vehicle_monitor_service binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow vms binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_wifi_supplicant_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow vendor_modprobe binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_audio_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_contexthub_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow fastrvc_native binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow tee binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_fingerprint_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow rild binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_bootctl_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_gnss_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_usb_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_bluetooth_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow wifi2agps binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_audio_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow vehicle_monitor_service binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow mnld binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_camera_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_wifi_supplicant_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow su binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_keymaster_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_bootctl_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_vibrator_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow wifi2agps binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_wifi_offload_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_usb_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_wifi_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_graphics_composer_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow vendor_modprobe binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_contexthub_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow mtk_agpsd binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_wifi_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_nfc_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow vehicle_network_service binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow vehicle_network_service binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_health_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hostapd binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_light_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_tv_cec_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_nfc_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_graphics_allocator_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow mnld binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_power_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow mdpd_native binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_power_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_sensors_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_fingerprint_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_gatekeeper_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_vehicle_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow su binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow MPED binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow perfprofd binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow wmt_loader binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow wmt_loader binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_vehicle_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_thermal_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_gatekeeper_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow wmt_launcher binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_light_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_drm_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow MPED binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_thermal_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow qemud binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_vibrator_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_memtrack_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_gnss_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow tee binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_configstore_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow vpud_native binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_drm_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow rild binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_memtrack_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_ir_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_keymaster_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_graphics_composer_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.check_assertions: 102 neverallow failures occurred

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules72(SELinuxNeverallowRulesTest.java:2264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules73">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {      domain      -coredomain      -appdomain       -binder_in_vendor_violators     } service_manager_type:service_manager find;
Warning!  Type or attribute binder_in_vendor_violators used in neverallow undefined in policy being checked.
libsepol.report_failure: neverallow violated by allow mediacodec mediametrics_service:service_manager { find };
libsepol.report_failure: neverallow violated by allow mediacodec mediacodec_service:service_manager { find };
libsepol.report_failure: neverallow violated by allow mediacodec mediametrics_service:service_manager { find };
libsepol.report_failure: neverallow violated by allow mediacodec permission_service:service_manager { find };
libsepol.report_failure: neverallow violated by allow mediacodec keystore_service:service_manager { find };
libsepol.report_failure: neverallow violated by allow mediacodec surfaceflinger_service:service_manager { find };
libsepol.report_failure: neverallow violated by allow mediacodec mediacodec_service:service_manager { find };
libsepol.report_failure: neverallow violated by allow mediacodec surfaceflinger_service:service_manager { find };
libsepol.report_failure: neverallow violated by allow MPED sensorservice_service:service_manager { find };
libsepol.check_assertions: 9 neverallow failures occurred

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules73(SELinuxNeverallowRulesTest.java:2294)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules75">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {      domain      -coredomain      -appdomain      -binder_in_vendor_violators     } servicemanager:binder { call transfer };
Warning!  Type or attribute binder_in_vendor_violators used in neverallow undefined in policy being checked.
libsepol.report_failure: neverallow violated by allow mediacodec servicemanager:binder { call transfer };
libsepol.report_failure: neverallow violated by allow vms servicemanager:binder { call transfer };
libsepol.report_failure: neverallow violated by allow MPED servicemanager:binder { call transfer };
libsepol.report_failure: neverallow violated by allow mediacodec servicemanager:binder { call transfer };
libsepol.check_assertions: 4 neverallow failures occurred

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules75(SELinuxNeverallowRulesTest.java:2354)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules76">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow binder_in_vendor_violators unlabeled:service_manager list ;
Warning!  Type or attribute binder_in_vendor_violators used in neverallow undefined in policy being checked.

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules76(SELinuxNeverallowRulesTest.java:2384)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules81">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {      coredomain      -init      -adbd    } {      domain      -coredomain      -socket_between_core_and_vendor_violators    }:{ socket tcp_socket udp_socket rawip_socket netlink_socket packet_socket key_socket unix_stream_socket unix_dgram_socket appletalk_socket netlink_route_socket netlink_tcpdiag_socket netlink_nflog_socket netlink_xfrm_socket netlink_selinux_socket netlink_audit_socket netlink_dnrt_socket netlink_kobject_uevent_socket tun_socket netlink_iscsi_socket netlink_fib_lookup_socket netlink_connector_socket netlink_netfilter_socket netlink_generic_socket netlink_scsitransport_socket netlink_rdma_socket netlink_crypto_socket sctp_socket icmp_socket ax25_socket ipx_socket netrom_socket atmpvc_socket x25_socket rose_socket decnet_socket atmsvc_socket rds_socket irda_socket pppox_socket llc_socket can_socket tipc_socket bluetooth_socket iucv_socket rxrpc_socket isdn_socket phonet_socket ieee802154_socket caif_socket alg_socket nfc_socket vsock_socket kcm_socket qipcrtr_socket } { connect sendto };
Warning!  Type or attribute socket_between_core_and_vendor_violators used in neverallow undefined in policy being checked.

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules81(SELinuxNeverallowRulesTest.java:2534)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules82">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {      coredomain      -init      -adbd    } {      domain      -coredomain      -socket_between_core_and_vendor_violators    }:unix_stream_socket connectto;
Warning!  Type or attribute socket_between_core_and_vendor_violators used in neverallow undefined in policy being checked.
libsepol.report_failure: neverallow violated by allow radio rild:unix_stream_socket { connectto };
libsepol.report_failure: neverallow violated by allow radio rild:unix_stream_socket { connectto };
libsepol.check_assertions: 2 neverallow failures occurred

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules82(SELinuxNeverallowRulesTest.java:2564)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules83">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {      domain      -coredomain      -appdomain      -socket_between_core_and_vendor_violators    } {      coredomain      -logd       -netd       -mdnsd              -init      -incidentd       -tombstoned     }:{ socket tcp_socket udp_socket rawip_socket netlink_socket packet_socket key_socket unix_stream_socket unix_dgram_socket appletalk_socket netlink_route_socket netlink_tcpdiag_socket netlink_nflog_socket netlink_xfrm_socket netlink_selinux_socket netlink_audit_socket netlink_dnrt_socket netlink_kobject_uevent_socket tun_socket netlink_iscsi_socket netlink_fib_lookup_socket netlink_connector_socket netlink_netfilter_socket netlink_generic_socket netlink_scsitransport_socket netlink_rdma_socket netlink_crypto_socket sctp_socket icmp_socket ax25_socket ipx_socket netrom_socket atmpvc_socket x25_socket rose_socket decnet_socket atmsvc_socket rds_socket irda_socket pppox_socket llc_socket can_socket tipc_socket bluetooth_socket iucv_socket rxrpc_socket isdn_socket phonet_socket ieee802154_socket caif_socket alg_socket nfc_socket vsock_socket kcm_socket qipcrtr_socket } { connect sendto };
Warning!  Type or attribute socket_between_core_and_vendor_violators used in neverallow undefined in policy being checked.
libsepol.report_failure: neverallow violated by allow MPED system_server:unix_dgram_socket { sendto };
libsepol.report_failure: neverallow violated by allow MPED system_server:unix_stream_socket { connect };
libsepol.report_failure: neverallow violated by allow mnld system_server:unix_dgram_socket { sendto };
libsepol.check_assertions: 3 neverallow failures occurred

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules83(SELinuxNeverallowRulesTest.java:2594)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules84">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {      domain      -coredomain      -appdomain      -socket_between_core_and_vendor_violators    } {      coredomain      -logd       -netd       -mdnsd              -init      -incidentd       -tombstoned     }:unix_stream_socket connectto;
Warning!  Type or attribute socket_between_core_and_vendor_violators used in neverallow undefined in policy being checked.
libsepol.report_failure: neverallow violated by allow mnld system_server:unix_stream_socket { connectto };
libsepol.report_failure: neverallow violated by allow mnld system_app:unix_stream_socket { connectto };
libsepol.report_failure: neverallow violated by allow mnld platform_app:unix_stream_socket { connectto };
libsepol.check_assertions: 3 neverallow failures occurred

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules84(SELinuxNeverallowRulesTest.java:2624)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules85">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow socket_between_core_and_vendor_violators unlabeled:service_manager list ;
Warning!  Type or attribute socket_between_core_and_vendor_violators used in neverallow undefined in policy being checked.

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules85(SELinuxNeverallowRulesTest.java:2654)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules86">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {      domain      -coredomain      -netdomain      -socket_between_core_and_vendor_violators    } netd:{ socket tcp_socket udp_socket rawip_socket netlink_socket packet_socket key_socket unix_stream_socket unix_dgram_socket appletalk_socket netlink_route_socket netlink_tcpdiag_socket netlink_nflog_socket netlink_xfrm_socket netlink_selinux_socket netlink_audit_socket netlink_dnrt_socket netlink_kobject_uevent_socket tun_socket netlink_iscsi_socket netlink_fib_lookup_socket netlink_connector_socket netlink_netfilter_socket netlink_generic_socket netlink_scsitransport_socket netlink_rdma_socket netlink_crypto_socket sctp_socket icmp_socket ax25_socket ipx_socket netrom_socket atmpvc_socket x25_socket rose_socket decnet_socket atmsvc_socket rds_socket irda_socket pppox_socket llc_socket can_socket tipc_socket bluetooth_socket iucv_socket rxrpc_socket isdn_socket phonet_socket ieee802154_socket caif_socket alg_socket nfc_socket vsock_socket kcm_socket qipcrtr_socket } { connect sendto };
Warning!  Type or attribute socket_between_core_and_vendor_violators used in neverallow undefined in policy being checked.

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules86(SELinuxNeverallowRulesTest.java:2684)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules87">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {      domain      -coredomain      -netdomain      -socket_between_core_and_vendor_violators    } netd:unix_stream_socket connectto;
Warning!  Type or attribute socket_between_core_and_vendor_violators used in neverallow undefined in policy being checked.

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules87(SELinuxNeverallowRulesTest.java:2714)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules88">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {      domain      -coredomain      -appdomain       -socket_between_core_and_vendor_violators    } {      coredomain_socket      core_data_file_type      unlabeled     }:sock_file ~{ append getattr ioctl read write };
Warning!  Type or attribute socket_between_core_and_vendor_violators used in neverallow undefined in policy being checked.
Warning!  Type or attribute coredomain_socket used in neverallow undefined in policy being checked.
Warning!  Type or attribute core_data_file_type used in neverallow undefined in policy being checked.

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules88(SELinuxNeverallowRulesTest.java:2744)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules89">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {      appdomain      -coredomain    } {      coredomain_socket      unlabeled       core_data_file_type      -app_data_file      -pdx_endpoint_socket_type       -pdx_channel_socket_type     }:sock_file ~{ append getattr ioctl read write };
Warning!  Type or attribute coredomain_socket used in neverallow undefined in policy being checked.
Warning!  Type or attribute core_data_file_type used in neverallow undefined in policy being checked.
Warning!  Type or attribute pdx_endpoint_socket_type used in neverallow undefined in policy being checked.
Warning!  Type or attribute pdx_channel_socket_type used in neverallow undefined in policy being checked.

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules89(SELinuxNeverallowRulesTest.java:2774)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules90">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {      pdx_endpoint_socket_type      pdx_channel_socket_type    } unlabeled:service_manager list;
Warning!  Type or attribute pdx_endpoint_socket_type used in neverallow undefined in policy being checked.
Warning!  Type or attribute pdx_channel_socket_type used in neverallow undefined in policy being checked.

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules90(SELinuxNeverallowRulesTest.java:2804)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules91">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {      coredomain      -init      -ueventd      -socket_between_core_and_vendor_violators    } {      file_type      dev_type      -coredomain_socket      -core_data_file_type      -unlabeled    }:sock_file ~{ append getattr ioctl read write };
Warning!  Type or attribute socket_between_core_and_vendor_violators used in neverallow undefined in policy being checked.
Warning!  Type or attribute coredomain_socket used in neverallow undefined in policy being checked.
Warning!  Type or attribute core_data_file_type used in neverallow undefined in policy being checked.
libsepol.report_failure: neverallow violated by allow installd shell_data_file:sock_file { create setattr lock relabelfrom relabelto unlink rename open };
libsepol.report_failure: neverallow violated by allow drmserver apk_data_file:sock_file { unlink };
libsepol.report_failure: neverallow violated by allow shared_relro pdx_performance_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow surfaceflinger pdx_bufferhub_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow keystore keystore_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow system_server wpa_socket:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow installd app_data_file:sock_file { create setattr lock relabelfrom relabelto unlink rename open };
libsepol.report_failure: neverallow violated by allow bluetooth bluetooth_socket:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow priv_app pdx_display_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow surfaceflinger pdx_performance_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow system_server system_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow untrusted_app pdx_display_vsync_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow shared_relro app_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow shell shell_data_file:sock_file { create unlink };
libsepol.report_failure: neverallow violated by allow installd shell_data_file:sock_file { create setattr lock relabelfrom relabelto unlink rename open };
libsepol.report_failure: neverallow violated by allow untrusted_app_25 pdx_performance_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow priv_app pdx_performance_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow nfc pdx_display_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow system_app pdx_display_vsync_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow untrusted_app_25 pdx_display_manager_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow installd system_data_file:sock_file { relabelfrom unlink };
libsepol.report_failure: neverallow violated by allow ephemeral_app app_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow system_server adbd_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow untrusted_app_25 pdx_display_vsync_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow platform_app pdx_display_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow untrusted_v2_app pdx_performance_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow bufferhubd pdx_performance_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow installd nfc_data_file:sock_file { create setattr lock relabelfrom relabelto unlink rename open };
libsepol.report_failure: neverallow violated by allow installd nfc_data_file:sock_file { create setattr lock relabelfrom relabelto unlink rename open };
libsepol.report_failure: neverallow violated by allow nfc nfc_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow bluetooth pdx_display_manager_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow shared_relro pdx_display_manager_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow system_server system_ndebug_socket:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow bluetooth app_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow shell app_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow drmserver drmserver_socket:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow system_app pdx_display_manager_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow nfc pdx_display_manager_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow bluetooth pdx_display_vsync_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow untrusted_app pdx_display_manager_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow bluetooth pdx_display_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow shared_relro pdx_display_vsync_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow untrusted_app_25 app_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow installd app_data_file:sock_file { create setattr lock relabelfrom relabelto unlink rename open };
libsepol.report_failure: neverallow violated by allow keystore keystore_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow untrusted_v2_app app_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow radio app_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow untrusted_app pdx_performance_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow netutils_wrapper netd_socket:sock_file { open };
libsepol.report_failure: neverallow violated by allow system_server wpa_socket:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow platform_app app_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow shell pdx_display_vsync_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow untrusted_v2_app pdx_display_manager_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow shell pdx_performance_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow bluetooth pdx_performance_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow drmserver drmserver_socket:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow installd radio_data_file:sock_file { create setattr lock relabelfrom relabelto unlink rename open };
libsepol.report_failure: neverallow violated by allow untrusted_app_25 pdx_display_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow system_server mdns_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow platform_app pdx_display_vsync_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow installd bluetooth_data_file:sock_file { create setattr lock relabelfrom relabelto unlink rename open };
libsepol.report_failure: neverallow violated by allow drmserver apk_data_file:sock_file { unlink };
libsepol.report_failure: neverallow violated by allow platform_app pdx_performance_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow untrusted_v2_app pdx_display_vsync_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow untrusted_v2_app pdx_display_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow bluetooth bluetooth_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow bufferhubd pdx_performance_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow installd system_app_data_file:sock_file { create setattr lock relabelfrom relabelto unlink rename open };
libsepol.report_failure: neverallow violated by allow shell pdx_display_manager_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow priv_app pdx_display_vsync_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow system_app pdx_performance_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow installd radio_data_file:sock_file { create setattr lock relabelfrom relabelto unlink rename open };
libsepol.report_failure: neverallow violated by allow system_app pdx_display_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow shell pdx_display_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow shared_relro pdx_display_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow vr_hwc pdx_display_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow nfc pdx_performance_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow installd system_data_file:sock_file { relabelfrom unlink };
libsepol.report_failure: neverallow violated by allow vr_hwc pdx_display_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow priv_app app_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow system_app app_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow priv_app pdx_display_manager_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow untrusted_app pdx_display_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow nfc app_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow untrusted_app app_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow radio pdx_performance_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow radio pdx_display_vsync_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow radio pdx_display_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow installd system_app_data_file:sock_file { create setattr lock relabelfrom relabelto unlink rename open };
libsepol.report_failure: neverallow violated by allow radio radio_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow platform_app pdx_display_manager_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow radio pdx_display_manager_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow radio radio_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow nfc pdx_display_vsync_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow installd bluetooth_data_file:sock_file { create setattr lock relabelfrom relabelto unlink rename open };
libsepol.check_assertions: 95 neverallow failures occurred

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules91(SELinuxNeverallowRulesTest.java:2834)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules92">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {          coredomain          -appdomain          -dex2oat          -idmap          -init          -installd          -postinstall_dexopt          -system_server      } vendor_app_file:dir { open read getattr search };
libsepol.report_failure: neverallow violated by allow adbd vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow audioserver vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow blkid vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow blkid_untrusted vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow bootanim vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow bootstat vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow bufferhubd vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow cameraserver vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow charger vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow clatd vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow cppreopts vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow crash_dump vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow dhcp vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow dnsmasq vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow drmserver vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow dumpstate vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow fingerprintd vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow fsck vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow fsck_untrusted vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow gatekeeperd vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow healthd vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow hwservicemanager vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow incident vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow incidentd vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow inputflinger vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow install_recovery vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow kernel vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow keystore vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow lmkd vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow logd vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow logpersist vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow mdnsd vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow mediadrmserver vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow mediaextractor vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow mediametrics vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow mediaserver vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow modprobe vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow mtp vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow netd vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow netutils_wrapper vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow otapreopt_chroot vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow otapreopt_slot vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow performanced vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow postinstall vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow ppp vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow preopt2cachename vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow profman vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow racoon vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow recovery vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow recovery_persist vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow recovery_refresh vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow runas vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow sdcardd vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow servicemanager vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow sgdisk vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow slideshow vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow surfaceflinger vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow tombstoned vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow toolbox vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow tzdatacheck vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow ueventd vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow uncrypt vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow update_engine vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow update_verifier vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow vdc vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow virtual_touchpad vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow vold vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow vr_hwc vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow watchdogd vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow webview_zygote vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow wificond vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow zygote vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow dexoptanalyzer vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow hal_allocator_default vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow storaged vendor_app_file:dir { getattr search };
libsepol.check_assertions: 75 neverallow failures occurred

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules92(SELinuxNeverallowRulesTest.java:2864)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules93">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {          coredomain          -appdomain          -dex2oat          -idmap          -init          -installd          -postinstall_dexopt          -system_server      } vendor_app_file:{ file lnk_file } { getattr open read ioctl lock };
libsepol.report_failure: neverallow violated by allow adbd vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow audioserver vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow blkid vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow blkid_untrusted vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow bootanim vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow bootstat vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow bufferhubd vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow cameraserver vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow charger vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow clatd vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow cppreopts vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow crash_dump vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow dhcp vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow dnsmasq vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow drmserver vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow dumpstate vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow fingerprintd vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow fsck vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow fsck_untrusted vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow gatekeeperd vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow healthd vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow hwservicemanager vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow incident vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow incidentd vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow inputflinger vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow install_recovery vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow kernel vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow keystore vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow lmkd vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow logd vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow logpersist vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow mdnsd vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow mediadrmserver vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow mediaextractor vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow mediametrics vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow mediaserver vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow modprobe vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow mtp vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow netd vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow netutils_wrapper vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow otapreopt_chroot vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow otapreopt_slot vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow performanced vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow postinstall vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow ppp vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow preopt2cachename vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow profman vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow racoon vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow recovery vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow recovery_persist vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow recovery_refresh vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow runas vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow sdcardd vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow servicemanager vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow sgdisk vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow slideshow vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow surfaceflinger vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow tombstoned vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow toolbox vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow tzdatacheck vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow ueventd vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow uncrypt vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow update_engine vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow update_verifier vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow vdc vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow virtual_touchpad vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow vold vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow vr_hwc vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow watchdogd vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow webview_zygote vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow wificond vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow zygote vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow dexoptanalyzer vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow hal_allocator_default vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow storaged vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow adbd vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow audioserver vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow blkid vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow blkid_untrusted vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow bootanim vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow bootstat vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow bufferhubd vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow cameraserver vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow charger vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow clatd vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow cppreopts vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow crash_dump vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow dhcp vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow dnsmasq vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow drmserver vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow dumpstate vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow fingerprintd vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow fsck vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow fsck_untrusted vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow gatekeeperd vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow healthd vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow hwservicemanager vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow incident vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow incidentd vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow inputflinger vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow install_recovery vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow kernel vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow keystore vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow lmkd vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow logd vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow logpersist vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow mdnsd vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow mediadrmserver vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow mediaextractor vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow mediametrics vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow mediaserver vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow modprobe vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow mtp vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow netd vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow netutils_wrapper vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow otapreopt_chroot vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow otapreopt_slot vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow performanced vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow postinstall vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow ppp vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow preopt2cachename vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow profman vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow racoon vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow recovery vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow recovery_persist vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow recovery_refresh vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow runas vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow sdcardd vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow servicemanager vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow sgdisk vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow slideshow vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow surfaceflinger vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow tombstoned vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow toolbox vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow tzdatacheck vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow ueventd vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow uncrypt vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow update_engine vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow update_verifier vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow vdc vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow virtual_touchpad vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow vold vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow vr_hwc vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow watchdogd vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow webview_zygote vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow wificond vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow zygote vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow dexoptanalyzer vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow hal_allocator_default vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow storaged vendor_app_file:file { read getattr open };
libsepol.check_assertions: 150 neverallow failures occurred

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules93(SELinuxNeverallowRulesTest.java:2894)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules94">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {          coredomain          -appdomain          -idmap          -init          -installd          -system_server          -zygote      } vendor_overlay_file:dir { getattr open read search };
libsepol.report_failure: neverallow violated by allow adbd vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow audioserver vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow blkid vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow blkid_untrusted vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow bootanim vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow bootstat vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow bufferhubd vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow cameraserver vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow charger vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow clatd vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow cppreopts vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow crash_dump vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow dex2oat vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow dhcp vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow dnsmasq vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow drmserver vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow dumpstate vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow fingerprintd vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow fsck vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow fsck_untrusted vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow gatekeeperd vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow healthd vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow hwservicemanager vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow incident vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow incidentd vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow inputflinger vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow install_recovery vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow kernel vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow keystore vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow lmkd vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow logd vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow logpersist vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow mdnsd vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow mediadrmserver vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow mediaextractor vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow mediametrics vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow mediaserver vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow modprobe vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow mtp vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow netd vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow netutils_wrapper vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow otapreopt_chroot vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow otapreopt_slot vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow performanced vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow postinstall vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow postinstall_dexopt vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow ppp vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow preopt2cachename vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow profman vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow racoon vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow recovery vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow recovery_persist vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow recovery_refresh vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow runas vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow sdcardd vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow servicemanager vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow sgdisk vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow slideshow vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow surfaceflinger vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow tombstoned vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow toolbox vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow tzdatacheck vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow ueventd vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow uncrypt vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow update_engine vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow update_verifier vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow vdc vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow virtual_touchpad vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow vold vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow vr_hwc vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow watchdogd vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow webview_zygote vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow wificond vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow dexoptanalyzer vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow hal_allocator_default vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow storaged vendor_overlay_file:dir { getattr search };
libsepol.check_assertions: 76 neverallow failures occurred

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules94(SELinuxNeverallowRulesTest.java:2924)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules95">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {          coredomain          -appdomain          -idmap          -init          -installd          -system_server          -zygote      } vendor_overlay_file:{ file lnk_file } { getattr open read ioctl lock };
libsepol.report_failure: neverallow violated by allow adbd vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow audioserver vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow blkid vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow blkid_untrusted vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow bootanim vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow bootstat vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow bufferhubd vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow cameraserver vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow charger vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow clatd vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow cppreopts vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow crash_dump vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow dex2oat vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow dhcp vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow dnsmasq vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow drmserver vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow dumpstate vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow fingerprintd vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow fsck vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow fsck_untrusted vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow gatekeeperd vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow healthd vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow hwservicemanager vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow incident vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow incidentd vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow inputflinger vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow install_recovery vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow kernel vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow keystore vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow lmkd vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow logd vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow logpersist vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow mdnsd vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow mediadrmserver vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow mediaextractor vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow mediametrics vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow mediaserver vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow modprobe vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow mtp vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow netd vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow netutils_wrapper vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow otapreopt_chroot vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow otapreopt_slot vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow performanced vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow postinstall vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow postinstall_dexopt vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow ppp vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow preopt2cachename vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow profman vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow racoon vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow recovery vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow recovery_persist vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow recovery_refresh vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow runas vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow sdcardd vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow servicemanager vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow sgdisk vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow slideshow vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow surfaceflinger vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow tombstoned vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow toolbox vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow tzdatacheck vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow ueventd vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow uncrypt vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow update_engine vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow update_verifier vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow vdc vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow virtual_touchpad vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow vold vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow vr_hwc vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow watchdogd vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow webview_zygote vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow wificond vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow dexoptanalyzer vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow hal_allocator_default vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow storaged vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow adbd vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow audioserver vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow blkid vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow blkid_untrusted vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow bootanim vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow bootstat vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow bufferhubd vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow cameraserver vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow charger vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow clatd vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow cppreopts vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow crash_dump vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow dex2oat vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow dhcp vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow dnsmasq vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow drmserver vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow dumpstate vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow fingerprintd vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow fsck vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow fsck_untrusted vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow gatekeeperd vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow healthd vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow hwservicemanager vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow incident vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow incidentd vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow inputflinger vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow install_recovery vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow kernel vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow keystore vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow lmkd vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow logd vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow logpersist vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow mdnsd vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow mediadrmserver vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow mediaextractor vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow mediametrics vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow mediaserver vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow modprobe vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow mtp vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow netd vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow netutils_wrapper vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow otapreopt_chroot vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow otapreopt_slot vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow performanced vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow postinstall vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow postinstall_dexopt vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow ppp vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow preopt2cachename vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow profman vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow racoon vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow recovery vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow recovery_persist vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow recovery_refresh vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow runas vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow sdcardd vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow servicemanager vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow sgdisk vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow slideshow vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow surfaceflinger vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow tombstoned vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow toolbox vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow tzdatacheck vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow ueventd vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow uncrypt vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow update_engine vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow update_verifier vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow vdc vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow virtual_touchpad vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow vold vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow vr_hwc vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow watchdogd vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow webview_zygote vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow wificond vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow dexoptanalyzer vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow hal_allocator_default vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow storaged vendor_overlay_file:file { read getattr open };
libsepol.check_assertions: 152 neverallow failures occurred

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules95(SELinuxNeverallowRulesTest.java:2954)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules96">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {          coredomain          -init      } vendor_shell_exec:file { execute execute_no_trans };
libsepol.report_failure: neverallow violated by allow adbd vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow audioserver vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow blkid vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow blkid_untrusted vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow bluetooth vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow bootanim vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow bootstat vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow bufferhubd vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow cameraserver vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow charger vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow clatd vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow cppreopts vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow crash_dump vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow dex2oat vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow dhcp vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow dnsmasq vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow drmserver vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow dumpstate vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow ephemeral_app vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow fingerprintd vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow fsck vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow fsck_untrusted vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow gatekeeperd vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow healthd vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow hwservicemanager vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow idmap vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow incident vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow incidentd vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow inputflinger vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow install_recovery vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow installd vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow isolated_app vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow kernel vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow keystore vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow lmkd vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow logd vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow logpersist vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow mdnsd vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow mediadrmserver vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow mediaextractor vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow mediametrics vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow mediaserver vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow modprobe vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow mtp vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow netd vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow netutils_wrapper vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow nfc vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow otapreopt_chroot vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow otapreopt_slot vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow performanced vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow platform_app vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow postinstall vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow postinstall_dexopt vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow ppp vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow preopt2cachename vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow priv_app vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow profman vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow racoon vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow radio vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow recovery vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow recovery_persist vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow recovery_refresh vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow runas vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow sdcardd vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow servicemanager vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow sgdisk vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow shared_relro vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow shell vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow slideshow vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow surfaceflinger vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow system_app vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow system_server vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow tombstoned vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow toolbox vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow tzdatacheck vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow ueventd vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow uncrypt vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow untrusted_app vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow untrusted_app_25 vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow untrusted_v2_app vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow update_engine vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow update_verifier vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow vdc vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow virtual_touchpad vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow vold vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow vr_hwc vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow watchdogd vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow webview_zygote vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow wificond vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow zygote vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow dexoptanalyzer vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow hal_allocator_default vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow storaged vendor_shell_exec:file { execute };
libsepol.check_assertions: 93 neverallow failures occurred

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules96(SELinuxNeverallowRulesTest.java:2984)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules97">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {          domain          -coredomain          -appdomain          -rild          -vendor_executes_system_violators      } {          exec_type          -vendor_file_type          -crash_dump_exec          -netutils_wrapper_exec      }:file { entrypoint execute execute_no_trans };
Warning!  Type or attribute vendor_executes_system_violators used in neverallow undefined in policy being checked.
libsepol.report_failure: neverallow violated by allow vpud_native toolbox_exec:file { execute execute_no_trans };
libsepol.report_failure: neverallow violated by allow hal_vehicle_default hal_vehicle_default_exec:file { execute entrypoint };
libsepol.report_failure: neverallow violated by allow mtk_agpsd mtk_agpsd_exec:file { execute entrypoint };
libsepol.report_failure: neverallow violated by allow vehicle_monitor_service vehicle_monitor_service_exec:file { execute entrypoint };
libsepol.report_failure: neverallow violated by allow vpud_native vpud_native_exec:file { execute entrypoint };
libsepol.report_failure: neverallow violated by allow qemud qemud_exec:file { execute entrypoint };
libsepol.report_failure: neverallow violated by allow vms vms_exec:file { execute entrypoint };
libsepol.report_failure: neverallow violated by allow mdpd_native toolbox_exec:file { execute execute_no_trans };
libsepol.report_failure: neverallow violated by allow vpud_native shell_exec:file { execute execute_no_trans };
libsepol.report_failure: neverallow violated by allow mnld mnld_exec:file { execute entrypoint };
libsepol.report_failure: neverallow violated by allow mdpd_native shell_exec:file { execute execute_no_trans };
libsepol.report_failure: neverallow violated by allow MPED MPED_exec:file { execute entrypoint };
libsepol.report_failure: neverallow violated by allow vehicle_network_service vehicle_network_service_exec:file { execute entrypoint };
libsepol.report_failure: neverallow violated by allow wmt_launcher wmt_launcher_exec:file { execute entrypoint };
libsepol.report_failure: neverallow violated by allow wmt_loader wmt_loader_exec:file { execute entrypoint };
libsepol.report_failure: neverallow violated by allow fastrvc_native fastrvc_native_exec:file { execute entrypoint };
libsepol.report_failure: neverallow violated by allow mdpd_native mdpd_native_exec:file { execute entrypoint };
libsepol.report_failure: neverallow violated by allow fastrvc_native shell_exec:file { execute execute_no_trans };
libsepol.report_failure: neverallow violated by allow wifi2agps wifi2agps_exec:file { execute entrypoint };
libsepol.check_assertions: 19 neverallow failures occurred

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules97(SELinuxNeverallowRulesTest.java:3014)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules98">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow vendor_executes_system_violators unlabeled:service_manager list;
Warning!  Type or attribute vendor_executes_system_violators used in neverallow undefined in policy being checked.

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules98(SELinuxNeverallowRulesTest.java:3044)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.security.cts.SELinuxHostTest">
      <Test result="fail" name="testNoExemptionsForBinderInVendorBan">
        <Failure message="junit.framework.AssertionFailedError: sepolicy-analyze attribute binder_in_vendor_violators failed with error code 255: binder_in_vendor_violators is not defined in this policy.">
          <StackTrace>junit.framework.AssertionFailedError: sepolicy-analyze attribute binder_in_vendor_violators failed with error code 255: binder_in_vendor_violators is not defined in this policy.

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.TestCase.fail(TestCase.java:227)
	at android.security.cts.SELinuxHostTest.sepolicyAnalyzeGetTypesAssociatedWithAttribute(SELinuxHostTest.java:224)
	at android.security.cts.SELinuxHostTest.testNoExemptionsForBinderInVendorBan(SELinuxHostTest.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNoExemptionsForSocketsBetweenCoreAndVendorBan">
        <Failure message="junit.framework.AssertionFailedError: sepolicy-analyze attribute socket_between_core_and_vendor_violators failed with error code 255: socket_between_core_and_vendor_violators is not defined in this policy.">
          <StackTrace>junit.framework.AssertionFailedError: sepolicy-analyze attribute socket_between_core_and_vendor_violators failed with error code 255: socket_between_core_and_vendor_violators is not defined in this policy.

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.TestCase.fail(TestCase.java:227)
	at android.security.cts.SELinuxHostTest.sepolicyAnalyzeGetTypesAssociatedWithAttribute(SELinuxHostTest.java:224)
	at android.security.cts.SELinuxHostTest.testNoExemptionsForSocketsBetweenCoreAndVendorBan(SELinuxHostTest.java:287)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNoExemptionsForVendorExecutingCore">
        <Failure message="junit.framework.AssertionFailedError: sepolicy-analyze attribute vendor_executes_system_violators failed with error code 255: vendor_executes_system_violators is not defined in this policy.">
          <StackTrace>junit.framework.AssertionFailedError: sepolicy-analyze attribute vendor_executes_system_violators failed with error code 255: vendor_executes_system_violators is not defined in this policy.

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.TestCase.fail(TestCase.java:227)
	at android.security.cts.SELinuxHostTest.sepolicyAnalyzeGetTypesAssociatedWithAttribute(SELinuxHostTest.java:224)
	at android.security.cts.SELinuxHostTest.testNoExemptionsForVendorExecutingCore(SELinuxHostTest.java:307)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
  </Module>
  <Module name="CtsSecurityTestCases" abi="arm64-v8a" runtime="608578" done="false" pass="161">
    <TestCase name="android.security.cts.EncryptionTest">
      <Test result="fail" name="testEncryption">
        <Failure message="junit.framework.AssertionFailedError: Device encryption is required&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Device encryption is required
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertFalse(Assert.java:34)
at android.security.cts.EncryptionTest.testEncryption(EncryptionTest.java:66)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.security.cts.PackageSignatureTest">
      <Test result="fail" name="testPackageSignatures">
        <Failure message="junit.framework.AssertionFailedError: These packages should not be signed with a well known key: [com.android.storagemanager, com.android.printspooler, com.android.defcontainer, com.android.car.systemupdater, android.ext.services, com.android.support.car.lenspicker, com.android.phone, com.android.pacprocessor, com.android.mms.service, com.android.captiveportallogin, com.android.car.media, com.android.inputdevices, com.android.car.dialer, com.android.providers.calendar, org.chromium.webview_shell, com.android.deskclock, com.android.externalstorage, com.android.server.telecom, com.android.keychain, com.android.car.overview, com.android.wallpaperbackup, com.android.providers.contacts, com.android.managedprovisioning, com.android.providers.media, com.android.mtp, com.android.sharedstoragebackup, com.android.documentsui, com.svox.pico, com.android.inputmethod.latin, com.android.vpndialogs, com.google.android.car.vms.subscriber, android.car.usb.handler, com.google.android.car.vms.publisher, android.ext.shared, android, com.android.gallery, com.android.onetimeinitializer, com.android.location.fused, com.android.car.media.localmediaplayer, com.android.statementservice, com.android.webview, com.android.certinstaller, com.android.providers.settings, com.android.systemui, com.android.provision, com.android.companiondevicemanager, com.android.proxyhandler, com.android.musicfx, com.android.music, com.android.car, com.android.providers.downloads, com.android.dreams.basic, com.android.quicksearchbox, android.car.ui.provider, com.android.car.radio, com.android.car.mapsplaceholder, com.android.car.trust, com.android.packageinstaller, com.android.bluetooth, com.android.providers.downloads.ui, com.android.car.stream, com.android.car.hvac, com.android.shell, com.android.backupconfirm, com.android.car.messenger, com.android.calendar, com.android.settings, com.android.providers.userdictionary, com.android.htmlviewer, com.google.android.car.kitchensink]&#13;">
          <StackTrace>junit.framework.AssertionFailedError: These packages should not be signed with a well known key: [com.android.storagemanager, com.android.printspooler, com.android.defcontainer, com.android.car.systemupdater, android.ext.services, com.android.support.car.lenspicker, com.android.phone, com.android.pacprocessor, com.android.mms.service, com.android.captiveportallogin, com.android.car.media, com.android.inputdevices, com.android.car.dialer, com.android.providers.calendar, org.chromium.webview_shell, com.android.deskclock, com.android.externalstorage, com.android.server.telecom, com.android.keychain, com.android.car.overview, com.android.wallpaperbackup, com.android.providers.contacts, com.android.managedprovisioning, com.android.providers.media, com.android.mtp, com.android.sharedstoragebackup, com.android.documentsui, com.svox.pico, com.android.inputmethod.latin, com.android.vpndialogs, com.google.android.car.vms.subscriber, android.car.usb.handler, com.google.android.car.vms.publisher, android.ext.shared, android, com.android.gallery, com.android.onetimeinitializer, com.android.location.fused, com.android.car.media.localmediaplayer, com.android.statementservice, com.android.webview, com.android.certinstaller, com.android.providers.settings, com.android.systemui, com.android.provision, com.android.companiondevicemanager, com.android.proxyhandler, com.android.musicfx, com.android.music, com.android.car, com.android.providers.downloads, com.android.dreams.basic, com.android.quicksearchbox, android.car.ui.provider, com.android.car.radio, com.android.car.mapsplaceholder, com.android.car.trust, com.android.packageinstaller, com.android.bluetooth, com.android.providers.downloads.ui, com.android.car.stream, com.android.car.hvac, com.android.shell, com.android.backupconfirm, com.android.car.messenger, com.android.calendar, com.android.settings, com.android.providers.userdictionary, com.android.htmlviewer, com.google.android.car.kitchensink]
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.security.cts.PackageSignatureTest.testPackageSignatures(PackageSignatureTest.java:67)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.security.cts.StagefrightTest">
      <Test result="fail" name="testStagefrightANR_bug_62673844">
        <Failure message="java.util.concurrent.TimeoutException: Test timed out after 900000 milliseconds&#13;">
          <StackTrace>java.util.concurrent.TimeoutException: Test timed out after 900000 milliseconds
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:86)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testStagefright_bug_21443020">
        <Failure message="Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testStagefright_bug_32873375">
        <Failure message="Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testStagefright_bug_32915871">
        <Failure message="Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testStagefright_bug_34360591">
        <Failure message="Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testStagefright_cve_2015_3873_b_21814993">
        <Failure message="java.util.concurrent.TimeoutException: Test timed out after 900000 milliseconds&#13;">
          <StackTrace>java.util.concurrent.TimeoutException: Test timed out after 900000 milliseconds
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:86)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testStagefright_cve_2015_6600">
        <Failure message="java.util.concurrent.TimeoutException: Test timed out after 900000 milliseconds&#13;">
          <StackTrace>java.util.concurrent.TimeoutException: Test timed out after 900000 milliseconds
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:86)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testStagefright_cve_2016_2507">
        <Failure message="java.util.concurrent.TimeoutException: Test timed out after 900000 milliseconds&#13;">
          <StackTrace>java.util.concurrent.TimeoutException: Test timed out after 900000 milliseconds
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:86)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    </Module>
  <Module name="CtsSensorTestCases" abi="arm64-v8a" runtime="390018" done="true" pass="274">
    <TestCase name="android.hardware.cts.SensorTest">
      <Test result="fail" name="testBatchAndFlush">
        <Failure message="junit.framework.AssertionFailedError: registerListener | sensor='LIGHT', samplingPeriod=0us, maxReportLatency=10000000us | Failed&#13;">
          <StackTrace>junit.framework.AssertionFailedError: registerListener | sensor='LIGHT', samplingPeriod=0us, maxReportLatency=10000000us | Failed

at junit.framework.Assert.fail(Assert.java:50)
at android.hardware.cts.SensorTest.assertOnErrors(SensorTest.java:558)
at android.hardware.cts.SensorTest.testBatchAndFlush(SensorTest.java:329)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at android.hardware.cts.SensorTestCase.runBare(SensorTestCase.java:52)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    </Module>
  <Module name="CtsServicesHostTestCases" abi="arm64-v8a" runtime="3704448" done="true" pass="205">
    <TestCase name="android.server.cts.ActivityManagerActivityVisibilityTests">
      <Test result="fail" name="testFinishActivityWithMoveTaskToBackAfterPause">
        <Failure message="junit.framework.AssertionFailedError">
          <StackTrace>junit.framework.AssertionFailedError
	at junit.framework.Assert.fail(Assert.java:55)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNotNull(Assert.java:256)
	at junit.framework.Assert.assertNotNull(Assert.java:248)
	at android.server.cts.ActivityAndWindowManagersState.assertHomeActivityVisible(ActivityAndWindowManagersState.java:555)
	at android.server.cts.ActivityManagerActivityVisibilityTests.performFinishActivityWithMoveTaskToBack(ActivityManagerActivityVisibilityTests.java:166)
	at android.server.cts.ActivityManagerActivityVisibilityTests.testFinishActivityWithMoveTaskToBackAfterPause(ActivityManagerActivityVisibilityTests.java:156)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testFinishActivityWithMoveTaskToBackAfterStop">
        <Failure message="junit.framework.AssertionFailedError">
          <StackTrace>junit.framework.AssertionFailedError
	at junit.framework.Assert.fail(Assert.java:55)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNotNull(Assert.java:256)
	at junit.framework.Assert.assertNotNull(Assert.java:248)
	at android.server.cts.ActivityAndWindowManagersState.assertHomeActivityVisible(ActivityAndWindowManagersState.java:555)
	at android.server.cts.ActivityManagerActivityVisibilityTests.performFinishActivityWithMoveTaskToBack(ActivityManagerActivityVisibilityTests.java:166)
	at android.server.cts.ActivityManagerActivityVisibilityTests.testFinishActivityWithMoveTaskToBackAfterStop(ActivityManagerActivityVisibilityTests.java:160)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNoHistoryActivityFinishedResumedActivityNotIdle">
        <Failure message="junit.framework.AssertionFailedError">
          <StackTrace>junit.framework.AssertionFailedError
	at junit.framework.Assert.fail(Assert.java:55)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNotNull(Assert.java:256)
	at junit.framework.Assert.assertNotNull(Assert.java:248)
	at android.server.cts.ActivityAndWindowManagersState.assertHomeActivityVisible(ActivityAndWindowManagersState.java:555)
	at android.server.cts.ActivityManagerActivityVisibilityTests.testNoHistoryActivityFinishedResumedActivityNotIdle(ActivityManagerActivityVisibilityTests.java:274)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testReorderToFrontBackstack">
        <Failure message="junit.framework.AssertionFailedError">
          <StackTrace>junit.framework.AssertionFailedError
	at junit.framework.Assert.fail(Assert.java:55)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNotNull(Assert.java:256)
	at junit.framework.Assert.assertNotNull(Assert.java:248)
	at android.server.cts.ActivityAndWindowManagersState.assertHomeActivityVisible(ActivityAndWindowManagersState.java:555)
	at android.server.cts.ActivityManagerActivityVisibilityTests.testReorderToFrontBackstack(ActivityManagerActivityVisibilityTests.java:194)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testReorderToFrontChangingStack">
        <Failure message="junit.framework.AssertionFailedError">
          <StackTrace>junit.framework.AssertionFailedError
	at junit.framework.Assert.fail(Assert.java:55)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNotNull(Assert.java:256)
	at junit.framework.Assert.assertNotNull(Assert.java:248)
	at android.server.cts.ActivityAndWindowManagersState.assertHomeActivityVisible(ActivityAndWindowManagersState.java:555)
	at android.server.cts.ActivityManagerActivityVisibilityTests.testReorderToFrontChangingStack(ActivityManagerActivityVisibilityTests.java:226)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testTranslucentActivityOnTopOfHome">
        <Failure message="junit.framework.AssertionFailedError: Activity=android.server.cts/.AlwaysFocusablePipActivity must be visible.">
          <StackTrace>junit.framework.AssertionFailedError: Activity=android.server.cts/.AlwaysFocusablePipActivity must be visible.
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at android.server.cts.ActivityAndWindowManagersState.assertVisibility(ActivityAndWindowManagersState.java:544)
	at android.server.cts.ActivityAndWindowManagersState.assertVisibility(ActivityAndWindowManagersState.java:535)
	at android.server.cts.ActivityManagerActivityVisibilityTests.testTranslucentActivityOnTopOfHome(ActivityManagerActivityVisibilityTests.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.server.cts.ActivityManagerAppConfigurationTests">
      <Test result="fail" name="testFullscreenAppOrientationRequests">
        <Failure message="junit.framework.AssertionFailedError: Activity=android.server.cts/.PortraitOrientationActivity must be visible.">
          <StackTrace>junit.framework.AssertionFailedError: Activity=android.server.cts/.PortraitOrientationActivity must be visible.
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at android.server.cts.ActivityAndWindowManagersState.assertVisibility(ActivityAndWindowManagersState.java:544)
	at android.server.cts.ActivityAndWindowManagersState.assertVisibility(ActivityAndWindowManagersState.java:535)
	at android.server.cts.ActivityManagerAppConfigurationTests.testFullscreenAppOrientationRequests(ActivityManagerAppConfigurationTests.java:302)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNonfullscreenAppOrientationRequests">
        <Failure message="junit.framework.AssertionFailedError: portrait activity should be in portrait expected:&lt;1&gt; but was:&lt;2&gt;">
          <StackTrace>junit.framework.AssertionFailedError: portrait activity should be in portrait expected:&lt;1&gt; but was:&lt;2&gt;
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.failNotEquals(Assert.java:329)
	at junit.framework.Assert.assertEquals(Assert.java:78)
	at junit.framework.Assert.assertEquals(Assert.java:234)
	at junit.framework.TestCase.assertEquals(TestCase.java:401)
	at android.server.cts.ActivityManagerAppConfigurationTests.testNonfullscreenAppOrientationRequests(ActivityManagerAppConfigurationTests.java:322)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testSplitscreenPortraitAppOrientationRequests">
        <Failure message="junit.framework.AssertionFailedError: Activity=android.server.cts/.LandscapeOrientationActivity must be visible.">
          <StackTrace>junit.framework.AssertionFailedError: Activity=android.server.cts/.LandscapeOrientationActivity must be visible.
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at android.server.cts.ActivityAndWindowManagersState.assertVisibility(ActivityAndWindowManagersState.java:544)
	at android.server.cts.ActivityAndWindowManagersState.assertVisibility(ActivityAndWindowManagersState.java:535)
	at android.server.cts.ActivityManagerAppConfigurationTests.requestOrientationInSplitScreen(ActivityManagerAppConfigurationTests.java:442)
	at android.server.cts.ActivityManagerAppConfigurationTests.testSplitscreenPortraitAppOrientationRequests(ActivityManagerAppConfigurationTests.java:417)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.server.cts.ActivityManagerAssistantStackTests">
      <Test result="fail" name="testTranslucentAssistantActivityStackVisibility">
        <Failure message="junit.framework.AssertionFailedError">
          <StackTrace>junit.framework.AssertionFailedError
	at junit.framework.Assert.fail(Assert.java:55)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNotNull(Assert.java:256)
	at junit.framework.Assert.assertNotNull(Assert.java:248)
	at android.server.cts.ActivityAndWindowManagersState.assertHomeActivityVisible(ActivityAndWindowManagersState.java:555)
	at android.server.cts.ActivityManagerAssistantStackTests.testTranslucentAssistantActivityStackVisibility(ActivityManagerAssistantStackTests.java:164)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.server.cts.DisplaySizeTest">
      <Test result="fail" name="testCompatibilityDialogAfterReturn">
        <Failure message="junit.framework.AssertionFailedError: UnsupportedDisplaySizeDialog was not displayed">
          <StackTrace>junit.framework.AssertionFailedError: UnsupportedDisplaySizeDialog was not displayed
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.server.cts.DisplaySizeTest.verifyWindowDisplayed(DisplaySizeTest.java:172)
	at android.server.cts.DisplaySizeTest.testCompatibilityDialogAfterReturn(DisplaySizeTest.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testCompatibilityDialogWhenFocused">
        <Failure message="junit.framework.AssertionFailedError: UnsupportedDisplaySizeDialog was not displayed">
          <StackTrace>junit.framework.AssertionFailedError: UnsupportedDisplaySizeDialog was not displayed
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.server.cts.DisplaySizeTest.verifyWindowDisplayed(DisplaySizeTest.java:172)
	at android.server.cts.DisplaySizeTest.testCompatibilityDialogWhenFocused(DisplaySizeTest.java:83)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.server.cts.KeyguardTests">
      <Test result="fail" name="testKeyguardHidesActivity">
        <Failure message="junit.framework.AssertionFailedError: Activity=android.server.cts/.TestActivity must be visible.">
          <StackTrace>junit.framework.AssertionFailedError: Activity=android.server.cts/.TestActivity must be visible.
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at android.server.cts.ActivityAndWindowManagersState.assertVisibility(ActivityAndWindowManagersState.java:544)
	at android.server.cts.ActivityAndWindowManagersState.assertVisibility(ActivityAndWindowManagersState.java:535)
	at android.server.cts.KeyguardTests.testKeyguardHidesActivity(KeyguardTests.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testTranslucentDoesntRevealBehind">
        <Failure message="junit.framework.AssertionFailedError: Activity=android.server.cts/.TestActivity must be visible.">
          <StackTrace>junit.framework.AssertionFailedError: Activity=android.server.cts/.TestActivity must be visible.
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at android.server.cts.ActivityAndWindowManagersState.assertVisibility(ActivityAndWindowManagersState.java:544)
	at android.server.cts.ActivityAndWindowManagersState.assertVisibility(ActivityAndWindowManagersState.java:535)
	at android.server.cts.KeyguardTests.testTranslucentDoesntRevealBehind(KeyguardTests.java:146)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testUnoccludeRotationChange">
        <Failure message="junit.framework.AssertionFailedError: Must have focus activity.">
          <StackTrace>junit.framework.AssertionFailedError: Must have focus activity.
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNotNull(Assert.java:256)
	at android.server.cts.ActivityAndWindowManagersState.assertSanity(ActivityAndWindowManagersState.java:443)
	at android.server.cts.KeyguardTests.testUnoccludeRotationChange(KeyguardTests.java:301)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.server.cts.KeyguardTransitionTests">
      <Test result="fail" name="testUnlock">
        <Failure message="junit.framework.ComparisonFailure: Picked wrong transition expected:&lt;TRANSIT_[KEYGUARD_GOING_AWAY]&gt; but was:&lt;TRANSIT_[TASK_OPEN]&gt;">
          <StackTrace>junit.framework.ComparisonFailure: Picked wrong transition expected:&lt;TRANSIT_[KEYGUARD_GOING_AWAY]&gt; but was:&lt;TRANSIT_[TASK_OPEN]&gt;
	at junit.framework.Assert.assertEquals(Assert.java:100)
	at junit.framework.TestCase.assertEquals(TestCase.java:261)
	at android.server.cts.KeyguardTransitionTests.testUnlock(KeyguardTransitionTests.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testUnlockWallpaper">
        <Failure message="junit.framework.ComparisonFailure: Picked wrong transition expected:&lt;TRANSIT_[KEYGUARD_GOING_AWAY_ON_WALLPAPER]&gt; but was:&lt;TRANSIT_[WALLPAPER_OPEN]&gt;">
          <StackTrace>junit.framework.ComparisonFailure: Picked wrong transition expected:&lt;TRANSIT_[KEYGUARD_GOING_AWAY_ON_WALLPAPER]&gt; but was:&lt;TRANSIT_[WALLPAPER_OPEN]&gt;
	at junit.framework.Assert.assertEquals(Assert.java:100)
	at junit.framework.TestCase.assertEquals(TestCase.java:261)
	at android.server.cts.KeyguardTransitionTests.testUnlockWallpaper(KeyguardTransitionTests.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    </Module>
  <Module name="CtsSignatureTestCases" abi="arm64-v8a" runtime="45735" done="true" pass="1">
    <TestCase name="android.signature.cts.IntentTest">
      <Test result="fail" name="shouldNotFindUnexpectedIntents">
        <Failure message="java.lang.AssertionError: [Package: com.svox.pico Invalid Intent: [android.intent.action.START_TTS_ENGINE]]&#13;">
          <StackTrace>java.lang.AssertionError: [Package: com.svox.pico Invalid Intent: [android.intent.action.START_TTS_ENGINE]]
at org.junit.Assert.fail(Assert.java:88)
at org.junit.Assert.assertTrue(Assert.java:41)
at android.signature.cts.IntentTest.shouldNotFindUnexpectedIntents(IntentTest.java:145)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    </Module>
  <Module name="CtsSpeechTestCases" abi="arm64-v8a" runtime="274172" done="true" pass="6">
    <TestCase name="android.speech.tts.cts.TextToSpeechTest">
      <Test result="fail" name="testSpeak">
        <Failure message="junit.framework.AssertionFailedError: speak() completion timeout&#13;">
          <StackTrace>junit.framework.AssertionFailedError: speak() completion timeout
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.speech.tts.cts.TextToSpeechTest.testSpeak(TextToSpeechTest.java:142)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testSpeakStop">
        <Failure message="junit.framework.AssertionFailedError: speak() stop callback timeout&#13;">
          <StackTrace>junit.framework.AssertionFailedError: speak() stop callback timeout
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.speech.tts.cts.TextToSpeechTest.testSpeakStop(TextToSpeechTest.java:159)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testSynthesizeToFile">
        <Failure message="junit.framework.AssertionFailedError: synthesizeToFile() completion timeout&#13;">
          <StackTrace>junit.framework.AssertionFailedError: synthesizeToFile() completion timeout
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.speech.tts.cts.TextToSpeechTest.testSynthesizeToFile(TextToSpeechTest.java:126)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
  </Module>
  <Module name="CtsTelephonyTestCases" abi="arm64-v8a" runtime="3012952" done="true" pass="99">
    <TestCase name="android.telephony.cts.CarrierConfigManagerTest">
      <Test result="fail" name="testNotifyConfigChangedForSubId">
        <Failure message="junit.framework.AssertionFailedError: Expected SecurityException. App doesn't have carrier privileges.&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Expected SecurityException. App doesn't have carrier privileges.
at junit.framework.Assert.fail(Assert.java:50)
at android.telephony.cts.CarrierConfigManagerTest.testNotifyConfigChangedForSubId(CarrierConfigManagerTest.java:105)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.telephony.cts.CellLocationTest">
      <Test result="fail" name="testCellLocation">
        <Failure message="junit.framework.AssertionFailedError: TelephonyManager.getCellLocation() returned null!&#13;">
          <StackTrace>junit.framework.AssertionFailedError: TelephonyManager.getCellLocation() returned null!
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertNotNull(Assert.java:218)
at android.telephony.cts.CellLocationTest.testCellLocation(CellLocationTest.java:68)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.telephony.cts.PhoneStateListenerTest">
      <Test result="fail" name="testOnCallForwardingIndicatorChanged">
        <Failure message="java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds&#13;">
          <StackTrace>java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:86)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOnCallStateChanged">
        <Failure message="java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds&#13;">
          <StackTrace>java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:86)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOnCellLocationChanged">
        <Failure message="java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds&#13;">
          <StackTrace>java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:86)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOnDataActivity">
        <Failure message="java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds&#13;">
          <StackTrace>java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:86)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOnDataConnectionStateChanged">
        <Failure message="java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds&#13;">
          <StackTrace>java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:86)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOnMessageWaitingIndicatorChanged">
        <Failure message="java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds&#13;">
          <StackTrace>java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:86)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOnServiceStateChanged">
        <Failure message="java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds&#13;">
          <StackTrace>java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:86)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOnSignalStrengthChanged">
        <Failure message="java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds&#13;">
          <StackTrace>java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:86)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOnSignalStrengthsChanged">
        <Failure message="java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds&#13;">
          <StackTrace>java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:86)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.telephony.cts.SimRestrictedApisTest">
      <Test result="fail" name="testInjectSmsPdu">
        <Failure message="junit.framework.AssertionFailedError: Expected SecurityException. App doesn't have carrier privileges.&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Expected SecurityException. App doesn't have carrier privileges.
at junit.framework.Assert.fail(Assert.java:50)
at android.telephony.cts.SimRestrictedApisTest.testInjectSmsPdu(SimRestrictedApisTest.java:48)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.telephony.cts.SubscriptionManagerTest">
      <Test result="fail" name="testActiveSubscriptions">
        <Failure message="junit.framework.AssertionFailedError&#13;">
          <StackTrace>junit.framework.AssertionFailedError
at junit.framework.Assert.fail(Assert.java:48)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertTrue(Assert.java:27)
at android.telephony.cts.SubscriptionManagerTest.testActiveSubscriptions(SubscriptionManagerTest.java:72)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.telephony.cts.TelephonyManagerTest">
      <Test result="fail" name="testListen">
        <Failure message="java.lang.AssertionError&#13;">
          <StackTrace>java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:86)
at org.junit.Assert.assertTrue(Assert.java:41)
at org.junit.Assert.assertTrue(Assert.java:52)
at android.telephony.cts.TelephonyManagerTest.testListen(TelephonyManagerTest.java:121)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testTelephonyManager">
        <Failure message="java.lang.AssertionError&#13;">
          <StackTrace>java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:86)
at org.junit.Assert.assertTrue(Assert.java:41)
at org.junit.Assert.assertFalse(Assert.java:64)
at org.junit.Assert.assertFalse(Assert.java:74)
at android.telephony.cts.TelephonyManagerTest.testTelephonyManager(TelephonyManagerTest.java:165)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    </Module>
  <Module name="CtsThemeHostTestCases" abi="arm64-v8a" runtime="415802" done="true" pass="0">
    <TestCase name="android.theme.cts.ThemeHostTest">
      <Test result="fail" name="testThemes">
        <Failure message="junit.framework.AssertionFailedError: 96 failures in theme test">
          <StackTrace>junit.framework.AssertionFailedError: 96 failures in theme test
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.theme.cts.ThemeHostTest.testThemes(ThemeHostTest.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
  </Module>
  <Module name="CtsUiHostTestCases" abi="arm64-v8a" runtime="263461" done="true" pass="1">
    <TestCase name="android.ui.cts.TaskSwitchingTest">
      <Test result="fail" name="testTaskSwitching">
        <Failure message="junit.framework.AssertionFailedError: no performance data">
          <StackTrace>junit.framework.AssertionFailedError: no performance data
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNotNull(Assert.java:256)
	at junit.framework.TestCase.assertNotNull(TestCase.java:426)
	at android.ui.cts.TaskSwitchingTest.testTaskSwitching(TaskSwitchingTest.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
  </Module>
  <Module name="CtsUtilTestCases" abi="arm64-v8a" runtime="10502" done="true" pass="284">
    <TestCase name="android.util.cts.DisplayMetricsTest">
      <Test result="fail" name="testDisplayMetricsOp">
        <Failure message="java.lang.AssertionError&#13;">
          <StackTrace>java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:86)
at org.junit.Assert.assertTrue(Assert.java:41)
at org.junit.Assert.assertTrue(Assert.java:52)
at android.util.cts.DisplayMetricsTest.testDisplayMetricsOp(DisplayMetricsTest.java:67)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    </Module>
  <Module name="CtsVideoTestCases" abi="arm64-v8a" runtime="2253164" done="true" pass="302">
    <TestCase name="android.video.cts.VideoEncoderDecoderTest">
      <Test result="fail" name="testAvcOther0Qual0320x0240">
        <Failure message="android.media.MediaCodec$CodecException: start failed&#13;">
          <StackTrace>android.media.MediaCodec$CodecException: start failed
at android.media.MediaCodec.native_start(Native Method)
at android.media.MediaCodec.start(MediaCodec.java:2043)
at android.video.cts.VideoEncoderDecoderTest.runEncoder(VideoEncoderDecoderTest.java:800)
at android.video.cts.VideoEncoderDecoderTest.doTest(VideoEncoderDecoderTest.java:653)
at android.video.cts.VideoEncoderDecoderTest.qual(VideoEncoderDecoderTest.java:182)
at android.video.cts.VideoEncoderDecoderTest.testAvcOther0Qual0320x0240(VideoEncoderDecoderTest.java:201)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testAvcOther0Qual0720x0480">
        <Failure message="android.media.MediaCodec$CodecException: start failed&#13;">
          <StackTrace>android.media.MediaCodec$CodecException: start failed
at android.media.MediaCodec.native_start(Native Method)
at android.media.MediaCodec.start(MediaCodec.java:2043)
at android.video.cts.VideoEncoderDecoderTest.runEncoder(VideoEncoderDecoderTest.java:800)
at android.video.cts.VideoEncoderDecoderTest.doTest(VideoEncoderDecoderTest.java:653)
at android.video.cts.VideoEncoderDecoderTest.qual(VideoEncoderDecoderTest.java:182)
at android.video.cts.VideoEncoderDecoderTest.testAvcOther0Qual0720x0480(VideoEncoderDecoderTest.java:212)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testAvcOther0Qual1280x0720">
        <Failure message="android.media.MediaCodec$CodecException: start failed&#13;">
          <StackTrace>android.media.MediaCodec$CodecException: start failed
at android.media.MediaCodec.native_start(Native Method)
at android.media.MediaCodec.start(MediaCodec.java:2043)
at android.video.cts.VideoEncoderDecoderTest.runEncoder(VideoEncoderDecoderTest.java:800)
at android.video.cts.VideoEncoderDecoderTest.doTest(VideoEncoderDecoderTest.java:653)
at android.video.cts.VideoEncoderDecoderTest.qual(VideoEncoderDecoderTest.java:182)
at android.video.cts.VideoEncoderDecoderTest.testAvcOther0Qual1280x0720(VideoEncoderDecoderTest.java:223)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
  </Module>
  <Module name="CtsViewTestCases" abi="arm64-v8a" runtime="2003213" done="false" pass="890">
    <TestCase name="android.view.cts.DisplayRefreshRateTest">
      <Test result="fail" name="testRefreshRate">
        <Failure message="java.lang.AssertionError&#13;">
          <StackTrace>java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:86)
at org.junit.Assert.assertTrue(Assert.java:41)
at org.junit.Assert.assertTrue(Assert.java:52)
at android.view.cts.DisplayRefreshRateTest.testRefreshRate(DisplayRefreshRateTest.java:92)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.view.cts.SurfaceViewSyncTest">
      <Test result="fail" name="testEmptySurfaceView">
        <Failure message="java.lang.AssertionError: Error, only 5 frames observed, virtual display only capturing at 0.5 frames per second&#13;">
          <StackTrace>java.lang.AssertionError: Error, only 5 frames observed, virtual display only capturing at 0.5 frames per second
at org.junit.Assert.fail(Assert.java:88)
at org.junit.Assert.assertTrue(Assert.java:41)
at android.view.cts.SurfaceViewSyncTest.verifyTest(SurfaceViewSyncTest.java:246)
at android.view.cts.SurfaceViewSyncTest.testEmptySurfaceView(SurfaceViewSyncTest.java:284)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testSmallRect">
        <Failure message="java.lang.AssertionError: Error, only 10 frames observed, virtual display only capturing at 1.0 frames per second&#13;">
          <StackTrace>java.lang.AssertionError: Error, only 10 frames observed, virtual display only capturing at 1.0 frames per second
at org.junit.Assert.fail(Assert.java:88)
at org.junit.Assert.assertTrue(Assert.java:41)
at android.view.cts.SurfaceViewSyncTest.verifyTest(SurfaceViewSyncTest.java:246)
at android.view.cts.SurfaceViewSyncTest.testSmallRect(SurfaceViewSyncTest.java:255)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testSurfaceViewBigScale">
        <Failure message="java.lang.AssertionError: Error: 1 incorrect frames observed - incorrect positioning&#13;">
          <StackTrace>java.lang.AssertionError: Error: 1 incorrect frames observed - incorrect positioning
at org.junit.Assert.fail(Assert.java:88)
at org.junit.Assert.assertTrue(Assert.java:41)
at android.view.cts.SurfaceViewSyncTest.verifyTest(SurfaceViewSyncTest.java:241)
at android.view.cts.SurfaceViewSyncTest.testSurfaceViewBigScale(SurfaceViewSyncTest.java:303)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testSurfaceViewSmallScale">
        <Failure message="java.lang.AssertionError: Error, only 10 frames observed, virtual display only capturing at 1.0 frames per second&#13;">
          <StackTrace>java.lang.AssertionError: Error, only 10 frames observed, virtual display only capturing at 1.0 frames per second
at org.junit.Assert.fail(Assert.java:88)
at org.junit.Assert.assertTrue(Assert.java:41)
at android.view.cts.SurfaceViewSyncTest.verifyTest(SurfaceViewSyncTest.java:246)
at android.view.cts.SurfaceViewSyncTest.testSurfaceViewSmallScale(SurfaceViewSyncTest.java:294)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testVideoSurfaceViewCornerCoverage">
        <Failure message="java.lang.AssertionError: Error, only 4 frames observed, virtual display only capturing at 0.4 frames per second&#13;">
          <StackTrace>java.lang.AssertionError: Error, only 4 frames observed, virtual display only capturing at 0.4 frames per second
at org.junit.Assert.fail(Assert.java:88)
at org.junit.Assert.assertTrue(Assert.java:41)
at android.view.cts.SurfaceViewSyncTest.verifyTest(SurfaceViewSyncTest.java:246)
at android.view.cts.SurfaceViewSyncTest.testVideoSurfaceViewCornerCoverage(SurfaceViewSyncTest.java:351)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testVideoSurfaceViewEdgeCoverage">
        <Failure message="java.lang.AssertionError: Error, only 4 frames observed, virtual display only capturing at 0.4 frames per second&#13;">
          <StackTrace>java.lang.AssertionError: Error, only 4 frames observed, virtual display only capturing at 0.4 frames per second
at org.junit.Assert.fail(Assert.java:88)
at org.junit.Assert.assertTrue(Assert.java:41)
at android.view.cts.SurfaceViewSyncTest.verifyTest(SurfaceViewSyncTest.java:246)
at android.view.cts.SurfaceViewSyncTest.testVideoSurfaceViewEdgeCoverage(SurfaceViewSyncTest.java:333)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testVideoSurfaceViewRotated">
        <Failure message="java.lang.AssertionError: Error, only 4 frames observed, virtual display only capturing at 0.4 frames per second&#13;">
          <StackTrace>java.lang.AssertionError: Error, only 4 frames observed, virtual display only capturing at 0.4 frames per second
at org.junit.Assert.fail(Assert.java:88)
at org.junit.Assert.assertTrue(Assert.java:41)
at android.view.cts.SurfaceViewSyncTest.verifyTest(SurfaceViewSyncTest.java:246)
at android.view.cts.SurfaceViewSyncTest.testVideoSurfaceViewRotated(SurfaceViewSyncTest.java:321)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testVideoSurfaceViewTranslate">
        <Failure message="java.lang.AssertionError: Error, only 7 frames observed, virtual display only capturing at 0.7 frames per second&#13;">
          <StackTrace>java.lang.AssertionError: Error, only 7 frames observed, virtual display only capturing at 0.7 frames per second
at org.junit.Assert.fail(Assert.java:88)
at org.junit.Assert.assertTrue(Assert.java:41)
at android.view.cts.SurfaceViewSyncTest.verifyTest(SurfaceViewSyncTest.java:246)
at android.view.cts.SurfaceViewSyncTest.testVideoSurfaceViewTranslate(SurfaceViewSyncTest.java:312)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.view.cts.WindowTest">
      <Test result="fail" name="testSetLocalFocus">
        <Failure message="Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    </Module>
  <Module name="CtsAccessibilityServiceTestCases" abi="armeabi-v7a" runtime="486969" done="true" pass="117">
    <TestCase name="android.accessibilityservice.cts.AccessibilityMagnificationTest">
      <Test result="fail" name="testSetScaleAndCenter">
        <Failure message="junit.framework.AssertionFailedError: Failed to apply center Y expected:&lt;256.0&gt; but was:&lt;270.0&gt;&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Failed to apply center Y expected:&lt;256.0&gt; but was:&lt;270.0&gt;
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:120)
at android.accessibilityservice.cts.AccessibilityMagnificationTest.testSetScaleAndCenter(AccessibilityMagnificationTest.java:107)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    </Module>
  <Module name="CtsAppSecurityHostTestCases" abi="armeabi-v7a" runtime="6250515" done="true" pass="195">
    <TestCase name="android.appsecurity.cts.AdoptableHostTest">
      <Test result="fail" name="testApps">
        <Failure message="java.lang.AssertionError: Expected private volume; found [private:179,130 unmountable null, private mounted null]">
          <StackTrace>java.lang.AssertionError: Expected private volume; found [private:179,130 unmountable null, private mounted null]
	at android.appsecurity.cts.AdoptableHostTest.getAdoptionVolume(AdoptableHostTest.java:330)
	at android.appsecurity.cts.AdoptableHostTest.testApps(AdoptableHostTest.java:89)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testEjected">
        <Failure message="java.lang.AssertionError: Expected private volume; found [private:179,130 unmountable null, private mounted null]">
          <StackTrace>java.lang.AssertionError: Expected private volume; found [private:179,130 unmountable null, private mounted null]
	at android.appsecurity.cts.AdoptableHostTest.getAdoptionVolume(AdoptableHostTest.java:330)
	at android.appsecurity.cts.AdoptableHostTest.testEjected(AdoptableHostTest.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testPackageInstaller">
        <Failure message="java.lang.AssertionError: Expected private volume; found [private:179,130 unmountable null, private mounted null]">
          <StackTrace>java.lang.AssertionError: Expected private volume; found [private:179,130 unmountable null, private mounted null]
	at android.appsecurity.cts.AdoptableHostTest.getAdoptionVolume(AdoptableHostTest.java:330)
	at android.appsecurity.cts.AdoptableHostTest.testPackageInstaller(AdoptableHostTest.java:226)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testPrimaryStorage">
        <Failure message="java.lang.AssertionError: Expected private volume; found [private:179,130 unmountable null, private mounted null]">
          <StackTrace>java.lang.AssertionError: Expected private volume; found [private:179,130 unmountable null, private mounted null]
	at android.appsecurity.cts.AdoptableHostTest.getAdoptionVolume(AdoptableHostTest.java:330)
	at android.appsecurity.cts.AdoptableHostTest.verifyPrimaryInternal(AdoptableHostTest.java:149)
	at android.appsecurity.cts.AdoptableHostTest.testPrimaryStorage(AdoptableHostTest.java:130)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.appsecurity.cts.DirectBootHostTest">
      <Test result="fail" name="testAutomotiveNativeFbe">
        <Failure message="junit.framework.AssertionFailedError: Automotive devices must support native FBE">
          <StackTrace>junit.framework.AssertionFailedError: Automotive devices must support native FBE
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.appsecurity.cts.DirectBootHostTest.testAutomotiveNativeFbe(DirectBootHostTest.java:103)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testDirectBootEmulated">
        <Failure message="java.lang.AssertionError: on-device tests failed:">
          <StackTrace>java.lang.AssertionError: on-device tests failed:
com.android.cts.encryptionapp.EncryptionAppTest#testVerifyLockedAndDismiss:
junit.framework.AssertionFailedError: USER_UNLOCKED
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at com.android.cts.encryptionapp.EncryptionAppTest.testVerifyLockedAndDismiss(EncryptionAppTest.java:149)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)

	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:124)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:75)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:68)
	at android.appsecurity.cts.DirectBootHostTest.runDeviceTests(DirectBootHostTest.java:216)
	at android.appsecurity.cts.DirectBootHostTest.doDirectBootTest(DirectBootHostTest.java:188)
	at android.appsecurity.cts.DirectBootHostTest.testDirectBootEmulated(DirectBootHostTest.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.appsecurity.cts.DocumentsTest">
      <Test result="fail" name="testCreateExisting">
        <Failure message="java.lang.AssertionError: on-device tests failed:">
          <StackTrace>java.lang.AssertionError: on-device tests failed:
com.android.cts.documentclient.DocumentsClientTest#testCreateExisting:
java.lang.IllegalStateException: Activity didn't receive a Result in 30 seconds
at com.android.cts.documentclient.MyActivity.getResult(MyActivity.java:68)
at com.android.cts.documentclient.DocumentsClientTest.testCreateExisting(DocumentsClientTest.java:255)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)

	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:124)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:75)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:57)
	at android.appsecurity.cts.DocumentsTestCase.runDeviceTests(DocumentsTestCase.java:67)
	at android.appsecurity.cts.DocumentsTest.runDeviceTests(DocumentsTest.java:25)
	at android.appsecurity.cts.DocumentsTest.testCreateExisting(DocumentsTest.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testCreateNew">
        <Failure message="java.lang.AssertionError: on-device tests failed:">
          <StackTrace>java.lang.AssertionError: on-device tests failed:
com.android.cts.documentclient.DocumentsClientTest#testCreateNew:
java.lang.RuntimeException: Could not launch intent Intent { act=android.intent.action.MAIN flg=0x14000000 cmp=com.android.cts.documentclient/.MyActivity } within 45 seconds. Perhaps the main thread has not gone idle within a reasonable amount of time? There could be an animation or something constantly repainting the screen. Or the activity is doing network calls on creation? See the threaddump logs. For your reference the last time the event queue was idle before your activity launch request was 1515059733426 and now the last time the queue went idle was: 1515059760162. If these numbers are the same your activity might be hogging the event queue.
at android.support.test.runner.MonitoringInstrumentation.startActivitySync(MonitoringInstrumentation.java:407)
at android.test.InstrumentationTestCase.launchActivityWithIntent(InstrumentationTestCase.java:125)
at android.test.InstrumentationTestCase.launchActivity(InstrumentationTestCase.java:103)
at com.android.cts.documentclient.DocumentsClientTestCase.setUp(DocumentsClientTestCase.java:71)
at com.android.cts.documentclient.DocumentsClientTest.setUp(Unknown Source:0)
at junit.framework.TestCase.runBare(TestCase.java:132)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)

	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:124)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:75)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:57)
	at android.appsecurity.cts.DocumentsTestCase.runDeviceTests(DocumentsTestCase.java:67)
	at android.appsecurity.cts.DocumentsTest.runDeviceTests(DocumentsTest.java:25)
	at android.appsecurity.cts.DocumentsTest.testCreateNew(DocumentsTest.java:54)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testFindDocumentPathInScopedAccess">
        <Failure message="java.lang.AssertionError: on-device tests failed:">
          <StackTrace>java.lang.AssertionError: on-device tests failed:
com.android.cts.documentclient.DocumentsClientTest#testFindDocumentPathInScopedAccess:
junit.framework.AssertionFailedError: First list item
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at com.android.cts.documentclient.DocumentsClientTest.revealRoot(DocumentsClientTest.java:69)
at com.android.cts.documentclient.DocumentsClientTest.findRoot(DocumentsClientTest.java:78)
at com.android.cts.documentclient.DocumentsClientTest.testFindDocumentPathInScopedAccess(DocumentsClientTest.java:475)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)

	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:124)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:75)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:57)
	at android.appsecurity.cts.DocumentsTestCase.runDeviceTests(DocumentsTestCase.java:67)
	at android.appsecurity.cts.DocumentsTest.runDeviceTests(DocumentsTest.java:25)
	at android.appsecurity.cts.DocumentsTest.testFindDocumentPathInScopedAccess(DocumentsTest.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testTransferDocument">
        <Failure message="java.lang.AssertionError: on-device tests failed:">
          <StackTrace>java.lang.AssertionError: on-device tests failed:
com.android.cts.documentclient.DocumentsClientTest#testTransferDocument:
java.lang.IllegalStateException: Activity didn't receive a Result in 30 seconds
at com.android.cts.documentclient.MyActivity.getResult(MyActivity.java:68)
at com.android.cts.documentclient.DocumentsClientTest.testTransferDocument(DocumentsClientTest.java:375)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)

	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:124)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:75)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:57)
	at android.appsecurity.cts.DocumentsTestCase.runDeviceTests(DocumentsTestCase.java:67)
	at android.appsecurity.cts.DocumentsTest.runDeviceTests(DocumentsTest.java:25)
	at android.appsecurity.cts.DocumentsTest.testTransferDocument(DocumentsTest.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testTree">
        <Failure message="java.lang.AssertionError: on-device tests failed:">
          <StackTrace>java.lang.AssertionError: on-device tests failed:
com.android.cts.documentclient.DocumentsClientTest#testTree:
junit.framework.AssertionFailedError: First list item
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at com.android.cts.documentclient.DocumentsClientTest.revealRoot(DocumentsClientTest.java:69)
at com.android.cts.documentclient.DocumentsClientTest.findRoot(DocumentsClientTest.java:78)
at com.android.cts.documentclient.DocumentsClientTest.testTree(DocumentsClientTest.java:268)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)

	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:124)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:75)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:57)
	at android.appsecurity.cts.DocumentsTestCase.runDeviceTests(DocumentsTestCase.java:67)
	at android.appsecurity.cts.DocumentsTest.runDeviceTests(DocumentsTest.java:25)
	at android.appsecurity.cts.DocumentsTest.testTree(DocumentsTest.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.appsecurity.cts.ExternalStorageHostTest">
      <Test result="fail" name="testMultiViewMoveConsistency">
        <Failure message="java.lang.AssertionError: on-device tests failed:">
          <StackTrace>java.lang.AssertionError: on-device tests failed:
com.android.cts.readexternalstorageapp.ReadMultiViewTest#testROAccess:
junit.framework.AssertionFailedError: able to write!
at junit.framework.Assert.fail(Assert.java:50)
at com.android.cts.externalstorageapp.CommonExternalStorageTest.assertFileReadOnlyAccess(CommonExternalStorageTest.java:329)
at com.android.cts.readexternalstorageapp.ReadMultiViewTest.testROAccess(ReadMultiViewTest.java:69)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)

	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:124)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:75)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:68)
	at android.appsecurity.cts.ExternalStorageHostTest.runDeviceTests(ExternalStorageHostTest.java:332)
	at android.appsecurity.cts.ExternalStorageHostTest.testMultiViewMoveConsistency(ExternalStorageHostTest.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.appsecurity.cts.StorageHostTest">
      <Test result="fail" name="testCache">
        <Failure message="java.lang.AssertionError: on-device tests failed:">
          <StackTrace>java.lang.AssertionError: on-device tests failed:
com.android.cts.storagestatsapp.StorageStatsTest#testCacheClearing:
junit.framework.AssertionFailedError: Expected roughly 33554432 but was 16797696 [UserHandle{0}]
at com.android.cts.storageapp.Utils.assertMostlyEquals(Utils.java:94)
at com.android.cts.storageapp.Utils.assertMostlyEquals(Utils.java:89)
at com.android.cts.storagestatsapp.StorageStatsTest.testCacheClearing(StorageStatsTest.java:301)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)

	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:124)
	at android.appsecurity.cts.StorageHostTest.runDeviceTests(StorageHostTest.java:239)
	at android.appsecurity.cts.StorageHostTest.testCache(StorageHostTest.java:167)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:52)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.android.tradefed.testtype.HostTest.runJUnit4Tests(HostTest.java:505)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:422)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testFullDisk">
        <Failure message="junit.framework.AssertionFailedError: Unexpected crashes while disk full: ">
          <StackTrace>junit.framework.AssertionFailedError: Unexpected crashes while disk full: 

01-04 10:04:22.418  2178  2234 E PackageManager: Unable to write package manager settings, current changes will be lost at reboot
01-04 10:04:22.418  2178  2234 E PackageManager: java.io.IOException: write failed: ENOSPC (No space left on device)
01-04 10:04:22.418  2178  2234 E PackageManager: 	at libcore.io.IoBridge.write(IoBridge.java:558)
01-04 10:04:22.418  2178  2234 E PackageManager: 	at java.io.FileOutputStream.write(FileOutputStream.java:326)
01-04 10:04:22.418  2178  2234 E PackageManager: 	at java.io.BufferedOutputStream.flushBuffer(BufferedOutputStream.java:82)
01-04 10:04:22.418  2178  2234 E PackageManager: 	at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:140)
01-04 10:04:22.418  2178  2234 E PackageManager: 	at com.android.internal.util.FastXmlSerializer.flush(FastXmlSerializer.java:255)
01-04 10:04:22.418  2178  2234 E PackageManager: 	at com.android.internal.util.FastXmlSerializer.append(FastXmlSerializer.java:93)
01-04 10:04:22.418  2178  2234 E PackageManager: 	at com.android.internal.util.FastXmlSerializer.escapeAndAppendString(FastXmlSerializer.java:146)
01-04 10:04:22.418  2178  2234 E PackageManager: 	at com.android.internal.util.FastXmlSerializer.attribute(FastXmlSerializer.java:177)
01-04 10:04:22.418  2178  2234 E PackageManager: 	at com.android.server.pm.Settings.writePermissionLPr(Settings.java:2967)
01-04 10:04:22.418  2178  2234 E PackageManager: 	at com.android.server.pm.Settings.writeLPr(Settings.java:2513)
01-04 10:04:22.418  2178  2234 E PackageManager: 	at com.android.server.pm.PackageManagerService$PackageHandler.doHandleMessage(PackageManagerService.java:1723)
01-04 10:04:22.418  2178  2234 E PackageManager: 	at com.android.server.pm.PackageManagerService$PackageHandler.handleMessage(PackageManagerService.java:1424)
01-04 10:04:22.418  2178  2234 E PackageManager: 	at android.os.Handler.dispatchMessage(Handler.java:105)
01-04 10:04:22.418  2178  2234 E PackageManager: 	at android.os.Looper.loop(Looper.java:164)
01-04 10:04:22.418  2178  2234 E PackageManager: 	at android.os.HandlerThread.run(HandlerThread.java:65)
01-04 10:04:22.418  2178  2234 E PackageManager: 	at com.android.server.ServiceThread.run(ServiceThread.java:46)
01-04 10:04:22.418  2178  2234 E PackageManager: Caused by: android.system.ErrnoException: write failed: ENOSPC (No space left on device)
01-04 10:04:22.418  2178  2234 E PackageManager: 	at libcore.io.Linux.writeBytes(Native Method)
01-04 10:04:22.418  2178  2234 E PackageManager: 	at libcore.io.Linux.write(Linux.java:286)
01-04 10:04:22.418  2178  2234 E PackageManager: 	at libcore.io.BlockGuardOs.write(BlockGuardOs.java:345)
01-04 10:04:22.418  2178  2234 E PackageManager: 	at libcore.io.IoBridge.write(IoBridge.java:553)
01-04 10:04:22.418  2178  2234 E PackageManager: 	... 15 more
01-04 10:04:26.540  2178  6148 W AppOps  : Failed to write state, restoring backup.
01-04 10:04:26.540  2178  6148 W AppOps  : java.io.IOException: write failed: ENOSPC (No space left on device)
01-04 10:04:26.540  2178  6148 W AppOps  : 	at libcore.io.IoBridge.write(IoBridge.java:558)
01-04 10:04:26.540  2178  6148 W AppOps  : 	at java.io.FileOutputStream.write(FileOutputStream.java:326)
01-04 10:04:26.540  2178  6148 W AppOps  : 	at com.android.internal.util.FastXmlSerializer.flushBytes(FastXmlSerializer.java:233)
01-04 10:04:26.540  2178  6148 W AppOps  : 	at com.android.internal.util.FastXmlSerializer.flush(FastXmlSerializer.java:254)
01-04 10:04:26.540  2178  6148 W AppOps  : 	at com.android.internal.util.FastXmlSerializer.append(FastXmlSerializer.java:93)
01-04 10:04:26.540  2178  6148 W AppOps  : 	at com.android.internal.util.FastXmlSerializer.append(FastXmlSerializer.java:120)
01-04 10:04:26.540  2178  6148 W AppOps  : 	at com.android.internal.util.FastXmlSerializer.endTag(FastXmlSerializer.java:206)
01-04 10:04:26.540  2178  6148 W AppOps  : 	at com.android.server.AppOpsService.writeState(AppOpsService.java:1686)
01-04 10:04:26.540  2178  6148 W AppOps  : 	at com.android.server.AppOpsService$1$1.doInBackground(AppOpsService.java:103)
01-04 10:04:26.540  2178  6148 W AppOps  : 	at com.android.server.AppOpsService$1$1.doInBackground(AppOpsService.java:102)
01-04 10:04:26.540  2178  6148 W AppOps  : 	at android.os.AsyncTask$2.call(AsyncTask.java:333)
01-04 10:04:26.540  2178  6148 W AppOps  : 	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
01-04 10:04:26.540  2178  6148 W AppOps  : 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
01-04 10:04:26.540  2178  6148 W AppOps  : 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
01-04 10:04:26.540  2178  6148 W AppOps  : 	at java.lang.Thread.run(Thread.java:764)
01-04 10:04:26.540  2178  6148 W AppOps  : Caused by: android.system.ErrnoException: write failed: ENOSPC (No space left on device)
01-04 10:04:26.540  2178  6148 W AppOps  : 	at libcore.io.Linux.writeBytes(Native Method)
01-04 10:04:26.540  2178  6148 W AppOps  : 	at libcore.io.Linux.write(Linux.java:286)
01-04 10:04:26.540  2178  6148 W AppOps  : 	at libcore.io.BlockGuardOs.write(BlockGuardOs.java:345)
01-04 10:04:26.540  2178  6148 W AppOps  : 	at libcore.io.IoBridge.write(IoBridge.java:553)
01-04 10:04:26.540  2178  6148 W AppOps  : 	... 14 more

	at android.appsecurity.cts.StorageHostTest.testFullDisk(StorageHostTest.java:225)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:52)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.android.tradefed.testtype.HostTest.runJUnit4Tests(HostTest.java:505)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:422)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testVerifyQuota">
        <Failure message="java.lang.AssertionError: on-device tests failed:">
          <StackTrace>java.lang.AssertionError: on-device tests failed:
com.android.cts.storagestatsapp.StorageStatsTest#testVerifyQuota:
junit.framework.AssertionFailedError: You're running kernel 3.18 or newer (4.9.44+) which means that CONFIG_QUOTA, CONFIG_QFMT_V2, CONFIG_QUOTACTL and the 'quota' fstab option on /data are required
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at com.android.cts.storagestatsapp.StorageStatsTest.testVerifyQuota(StorageStatsTest.java:89)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)

	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:124)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:75)
	at android.appsecurity.cts.Utils.runDeviceTests(Utils.java:57)
	at android.appsecurity.cts.StorageHostTest.testVerifyQuota(StorageHostTest.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:52)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.android.tradefed.testtype.HostTest.runJUnit4Tests(HostTest.java:505)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:422)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    </Module>
  <Module name="CtsAppTestCases" abi="armeabi-v7a" runtime="1177729" done="true" pass="397">
    <TestCase name="android.app.cts.ActivityManagerTest">
      <Test result="fail" name="testTimeTrackingAPI_ChainedActivityExit">
        <Failure message="junit.framework.AssertionFailedError: expected:&lt;1&gt; but was:&lt;3&gt;&#13;">
          <StackTrace>junit.framework.AssertionFailedError: expected:&lt;1&gt; but was:&lt;3&gt;
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:67)
at junit.framework.Assert.assertEquals(Assert.java:199)
at junit.framework.Assert.assertEquals(Assert.java:205)
at android.app.cts.ActivityManagerTest.testTimeTrackingAPI_ChainedActivityExit(ActivityManagerTest.java:567)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testTimeTrackingAPI_SimpleStartExit">
        <Failure message="junit.framework.AssertionFailedError: expected:&lt;3&gt; but was:&lt;1&gt;&#13;">
          <StackTrace>junit.framework.AssertionFailedError: expected:&lt;3&gt; but was:&lt;1&gt;
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:67)
at junit.framework.Assert.assertEquals(Assert.java:199)
at junit.framework.Assert.assertEquals(Assert.java:205)
at android.app.cts.ActivityManagerTest.testTimeTrackingAPI_SimpleStartExit(ActivityManagerTest.java:470)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.app.cts.DisplayTest">
      <Test result="fail" name="testRotation">
        <Failure message="junit.framework.AssertionFailedError: width from original display instance should have changed&#13;">
          <StackTrace>junit.framework.AssertionFailedError: width from original display instance should have changed
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertFalse(Assert.java:34)
at android.app.cts.DisplayTest.testRotation(DisplayTest.java:67)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.app.cts.SystemFeaturesTest">
      <Test result="fail" name="testLocationFeatures">
        <Failure message="junit.framework.AssertionFailedError: PackageManager#hasSystemFeature should NOT return true for android.hardware.location.network&#13;">
          <StackTrace>junit.framework.AssertionFailedError: PackageManager#hasSystemFeature should NOT return true for android.hardware.location.network
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertFalse(Assert.java:34)
at android.app.cts.SystemFeaturesTest.assertNotAvailable(SystemFeaturesTest.java:508)
at android.app.cts.SystemFeaturesTest.testLocationFeatures(SystemFeaturesTest.java:257)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    </Module>
  <Module name="CtsAppUsageHostTestCases" abi="armeabi-v7a" runtime="3" done="false" pass="0">
    <TestCase name="android.app.usage.cts.AppIdleHostTest">
      <Test result="fail" name="testAppIsNotIdleAfterBeingLaunched">
        <Failure message="com.android.tradefed.device.DeviceUnresponsiveException: Attempted shell am start -W -a android.intent.action.MAIN -c android.intent.category.HOME multiple times on device GFEDCBA1111111111 without communication success. Aborting.">
          <StackTrace>com.android.tradefed.device.DeviceUnresponsiveException: Attempted shell am start -W -a android.intent.action.MAIN -c android.intent.category.HOME multiple times on device GFEDCBA1111111111 without communication success. Aborting.
	at com.android.tradefed.device.NativeDevice.performDeviceAction(NativeDevice.java:1670)
	at com.android.tradefed.device.NativeDevice.executeShellCommand(NativeDevice.java:560)
	at com.android.tradefed.device.NativeDevice.executeShellCommand(NativeDevice.java:588)
	at android.app.usage.cts.AppIdleHostTest.startAndStopTestApp(AppIdleHostTest.java:88)
	at android.app.usage.cts.AppIdleHostTest.testAppIsNotIdleAfterBeingLaunched(AppIdleHostTest.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
  </Module>
  <Module name="CtsBionicTestCases" abi="armeabi-v7a" runtime="117138" done="true" pass="1814">
    <TestCase name="sys_msg">
      <Test result="fail" name="smoke">
        <Failure message="bionic/tests/sys_msg_test.cpp:(46) Failure in test sys_msg.smoke&#13;">
          <StackTrace>bionic/tests/sys_msg_test.cpp:(46) Failure in test sys_msg.smoke
Expected: (id) != (-1), actual: -1 vs -1
sys_msg.smoke exited with exitcode 1.</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="sys_sem">
      <Test result="fail" name="smoke">
        <Failure message="bionic/tests/sys_sem_test.cpp:(46) Failure in test sys_sem.smoke&#13;">
          <StackTrace>bionic/tests/sys_sem_test.cpp:(46) Failure in test sys_sem.smoke
Expected: (id) != (-1), actual: -1 vs -1
sys_sem.smoke exited with exitcode 1.</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="sys_shm">
      <Test result="fail" name="smoke">
        <Failure message="bionic/tests/sys_shm_test.cpp:(46) Failure in test sys_shm.smoke&#13;">
          <StackTrace>bionic/tests/sys_shm_test.cpp:(46) Failure in test sys_shm.smoke
Expected: (id) != (-1), actual: -1 vs -1
sys_shm.smoke exited with exitcode 1.</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    </Module>
  <Module name="CtsCarrierApiTestCases" abi="armeabi-v7a" runtime="756" done="true" pass="1">
    <TestCase name="android.carrierapi.cts.CarrierApiTest">
      <Test result="fail" name="testGetIccAuthentication">
        <Failure message="junit.framework.AssertionFailedError: This test requires a SIM card with carrier privilege rule on it.&#13;">
          <StackTrace>junit.framework.AssertionFailedError: This test requires a SIM card with carrier privilege rule on it.
Cert hash: 61ed377e85d386a8dfee6b864bd85b0bfaa5af81
Visit https://source.android.com/devices/tech/config/uicc.html
at junit.framework.Assert.fail(Assert.java:50)
at android.carrierapi.cts.CarrierApiTest.failMessage(CarrierApiTest.java:100)
at android.carrierapi.cts.CarrierApiTest.testGetIccAuthentication(CarrierApiTest.java:138)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testHasCarrierPrivileges">
        <Failure message="junit.framework.AssertionFailedError: This test requires a SIM card with carrier privilege rule on it.&#13;">
          <StackTrace>junit.framework.AssertionFailedError: This test requires a SIM card with carrier privilege rule on it.
Cert hash: 61ed377e85d386a8dfee6b864bd85b0bfaa5af81
Visit https://source.android.com/devices/tech/config/uicc.html
at junit.framework.Assert.fail(Assert.java:50)
at android.carrierapi.cts.CarrierApiTest.failMessage(CarrierApiTest.java:100)
at android.carrierapi.cts.CarrierApiTest.testHasCarrierPrivileges(CarrierApiTest.java:114)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testSendDialerSpecialCode">
        <Failure message="junit.framework.AssertionFailedError: This test requires a SIM card with carrier privilege rule on it.&#13;">
          <StackTrace>junit.framework.AssertionFailedError: This test requires a SIM card with carrier privilege rule on it.
Cert hash: 61ed377e85d386a8dfee6b864bd85b0bfaa5af81
Visit https://source.android.com/devices/tech/config/uicc.html
at junit.framework.Assert.fail(Assert.java:50)
at android.carrierapi.cts.CarrierApiTest.failMessage(CarrierApiTest.java:100)
at android.carrierapi.cts.CarrierApiTest.testSendDialerSpecialCode(CarrierApiTest.java:155)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
  </Module>
  <Module name="CtsDevicePolicyManagerTestCases" abi="armeabi-v7a" runtime="11110696" done="true" pass="250">
    <TestCase name="com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest">
      <Test result="fail" name="testWipeData_managedProfile">
        <Failure message="java.lang.AssertionError: Failed to successfully run device tests for com.android.cts.comp: Instrumentation run failed due to 'Process crashed.'">
          <StackTrace>java.lang.AssertionError: Failed to successfully run device tests for com.android.cts.comp: Instrumentation run failed due to 'Process crashed.'
	at com.android.cts.devicepolicy.BaseDevicePolicyTest.runDeviceTestsAsUser(BaseDevicePolicyTest.java:327)
	at com.android.cts.devicepolicy.BaseDevicePolicyTest.runDeviceTestsAsUser(BaseDevicePolicyTest.java:289)
	at com.android.cts.devicepolicy.DeviceOwnerPlusProfileOwnerTest.testWipeData_managedProfile(DeviceOwnerPlusProfileOwnerTest.java:309)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="com.android.cts.devicepolicy.MixedDeviceOwnerTest">
      <Test result="fail" name="testPackageInstallUserRestrictions">
        <Failure message="java.lang.AssertionError: On-device tests failed:">
          <StackTrace>java.lang.AssertionError: On-device tests failed:
com.android.cts.packageinstaller.ManualPackageInstallTest#testManualInstallBlocked:
junit.framework.AssertionFailedError: Policy transparency dialog icon not found
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertNotNull(Assert.java:218)
at com.android.cts.packageinstaller.ManualPackageInstallTest.automateDismissInstallBlockedDialog(ManualPackageInstallTest.java:110)
at com.android.cts.packageinstaller.ManualPackageInstallTest.testManualInstallBlocked(ManualPackageInstallTest.java:68)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)

	at com.android.cts.devicepolicy.BaseDevicePolicyTest.runDeviceTestsAsUser(BaseDevicePolicyTest.java:344)
	at com.android.cts.devicepolicy.BaseDevicePolicyTest.runDeviceTestsAsUser(BaseDevicePolicyTest.java:289)
	at com.android.cts.devicepolicy.DeviceAndProfileOwnerTest.testPackageInstallUserRestrictions(DeviceAndProfileOwnerTest.java:577)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="com.android.cts.devicepolicy.MixedManagedProfileOwnerTest">
      <Test result="fail" name="testPackageInstallUserRestrictions">
        <Failure message="java.lang.AssertionError: On-device tests failed:">
          <StackTrace>java.lang.AssertionError: On-device tests failed:
com.android.cts.packageinstaller.ManualPackageInstallTest#testManualInstallSucceeded:
junit.framework.AssertionFailedError: Install button not found
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertNotNull(Assert.java:218)
at com.android.cts.packageinstaller.ManualPackageInstallTest.automateInstallClick(ManualPackageInstallTest.java:103)
at com.android.cts.packageinstaller.ManualPackageInstallTest.installPackage(ManualPackageInstallTest.java:97)
at com.android.cts.packageinstaller.BasePackageInstallTest.assertInstallPackage(BasePackageInstallTest.java:124)
at com.android.cts.packageinstaller.ManualPackageInstallTest.testManualInstallSucceeded(ManualPackageInstallTest.java:46)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)

	at com.android.cts.devicepolicy.BaseDevicePolicyTest.runDeviceTestsAsUser(BaseDevicePolicyTest.java:344)
	at com.android.cts.devicepolicy.BaseDevicePolicyTest.runDeviceTestsAsUser(BaseDevicePolicyTest.java:289)
	at com.android.cts.devicepolicy.DeviceAndProfileOwnerTest.testPackageInstallUserRestrictions(DeviceAndProfileOwnerTest.java:593)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testScreenCaptureDisabled_allowedPrimaryUser">
        <Failure message="java.lang.AssertionError: On-device tests failed:">
          <StackTrace>java.lang.AssertionError: On-device tests failed:
com.android.cts.deviceandprofileowner.ScreenCaptureDisabledTest#testScreenCapturePossible:
junit.framework.AssertionFailedError
at junit.framework.Assert.fail(Assert.java:48)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertNotNull(Assert.java:218)
at junit.framework.Assert.assertNotNull(Assert.java:211)
at com.android.cts.deviceandprofileowner.ScreenCaptureDisabledTest.testScreenCapturePossible(ScreenCaptureDisabledTest.java:68)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)

	at com.android.cts.devicepolicy.BaseDevicePolicyTest.runDeviceTestsAsUser(BaseDevicePolicyTest.java:344)
	at com.android.cts.devicepolicy.BaseDevicePolicyTest.runDeviceTestsAsUser(BaseDevicePolicyTest.java:289)
	at com.android.cts.devicepolicy.DeviceAndProfileOwnerTest.executeDeviceTestMethod(DeviceAndProfileOwnerTest.java:723)
	at com.android.cts.devicepolicy.MixedManagedProfileOwnerTest.testScreenCaptureDisabled_allowedPrimaryUser(MixedManagedProfileOwnerTest.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="com.android.cts.devicepolicy.MixedProfileOwnerTest">
      <Test result="fail" name="testPackageInstallUserRestrictions">
        <Failure message="java.lang.AssertionError: On-device tests failed:">
          <StackTrace>java.lang.AssertionError: On-device tests failed:
com.android.cts.packageinstaller.ManualPackageInstallTest#testManualInstallBlocked:
junit.framework.AssertionFailedError: Policy transparency dialog icon not found
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertNotNull(Assert.java:218)
at com.android.cts.packageinstaller.ManualPackageInstallTest.automateDismissInstallBlockedDialog(ManualPackageInstallTest.java:110)
at com.android.cts.packageinstaller.ManualPackageInstallTest.testManualInstallBlocked(ManualPackageInstallTest.java:68)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)

	at com.android.cts.devicepolicy.BaseDevicePolicyTest.runDeviceTestsAsUser(BaseDevicePolicyTest.java:344)
	at com.android.cts.devicepolicy.BaseDevicePolicyTest.runDeviceTestsAsUser(BaseDevicePolicyTest.java:289)
	at com.android.cts.devicepolicy.DeviceAndProfileOwnerTest.testPackageInstallUserRestrictions(DeviceAndProfileOwnerTest.java:577)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    </Module>
  <Module name="CtsHostsideWebViewTests" abi="armeabi-v7a" runtime="19051" done="true" pass="3">
    <TestCase name="com.android.cts.webkit.WebViewHostSideStartupTest">
      <Test result="fail" name="testStrictMode">
        <Failure message="junit.framework.AssertionFailedError">
          <StackTrace>junit.framework.AssertionFailedError
	at junit.framework.Assert.fail(Assert.java:55)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertTrue(Assert.java:31)
	at junit.framework.TestCase.assertTrue(TestCase.java:201)
	at com.android.cts.webkit.WebViewHostSideStartupTest.testStrictMode(WebViewHostSideStartupTest.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
  </Module>
  <Module name="CtsIncidentHostTestCases" abi="armeabi-v7a" runtime="479149" done="true" pass="26">
    <TestCase name="com.android.server.cts.BatteryIncidentTest">
      <Test result="fail" name="testBatteryServiceDump">
        <Failure message="junit.framework.AssertionFailedError">
          <StackTrace>junit.framework.AssertionFailedError
	at junit.framework.Assert.fail(Assert.java:55)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertTrue(Assert.java:31)
	at junit.framework.TestCase.assertTrue(TestCase.java:201)
	at com.android.server.cts.BatteryIncidentTest.testBatteryServiceDump(BatteryIncidentTest.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="com.android.server.cts.BatteryStatsValidationTest">
      <Test result="fail" name="testWifiDownload">
        <Failure message="junit.framework.AssertionFailedError: Value 0 is less than min 49056">
          <StackTrace>junit.framework.AssertionFailedError: Value 0 is less than min 49056
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at com.android.server.cts.BatteryStatsValidationTest.assertValueRange(BatteryStatsValidationTest.java:487)
	at com.android.server.cts.BatteryStatsValidationTest.testWifiDownload(BatteryStatsValidationTest.java:423)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testWifiUpload">
        <Failure message="junit.framework.AssertionFailedError: Value 0 is less than min 2074">
          <StackTrace>junit.framework.AssertionFailedError: Value 0 is less than min 2074
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at com.android.server.cts.BatteryStatsValidationTest.assertValueRange(BatteryStatsValidationTest.java:487)
	at com.android.server.cts.BatteryStatsValidationTest.testWifiUpload(BatteryStatsValidationTest.java:459)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="com.android.server.cts.GraphicsStatsValidationTest">
      <Test result="fail" name="testBasicDrawFrame">
        <Failure message="junit.framework.AssertionFailedError">
          <StackTrace>junit.framework.AssertionFailedError
	at junit.framework.Assert.fail(Assert.java:55)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertTrue(Assert.java:31)
	at junit.framework.TestCase.assertTrue(TestCase.java:201)
	at com.android.server.cts.GraphicsStatsValidationTest.testBasicDrawFrame(GraphicsStatsValidationTest.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testDaveyDrawFrame">
        <Failure message="junit.framework.AssertionFailedError">
          <StackTrace>junit.framework.AssertionFailedError
	at junit.framework.Assert.fail(Assert.java:55)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertTrue(Assert.java:31)
	at junit.framework.TestCase.assertTrue(TestCase.java:201)
	at com.android.server.cts.GraphicsStatsValidationTest.testDaveyDrawFrame(GraphicsStatsValidationTest.java:113)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    </Module>
  <Module name="CtsJvmtiRunTest986HostTestCases" abi="armeabi-v7a" runtime="16159" done="true" pass="0">
    <TestCase name="android.jvmti.cts.JvmtiHostTest">
      <Test result="fail" name="testJvmti">
        <Failure message="junit.framework.AssertionFailedError: [android.jvmti.cts.JvmtiRunTestBasedTest#testRunTest Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details, Instrumentation run failed due to 'Process crashed.']">
          <StackTrace>junit.framework.AssertionFailedError: [android.jvmti.cts.JvmtiRunTestBasedTest#testRunTest Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details, Instrumentation run failed due to 'Process crashed.']
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertFalse(Assert.java:39)
	at junit.framework.TestCase.assertFalse(TestCase.java:210)
	at android.jvmti.cts.JvmtiHostTest.testJvmti(JvmtiHostTest.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
  </Module>
  <Module name="CtsKernelConfigTestCases" abi="armeabi-v7a" runtime="19" done="true" pass="3">
    <TestCase name="kernel_config">
      <Test result="fail" name="NOT_CONFIG_SYSVIPC">
        <Failure message="system/extras/tests/kernel.config/sysvipc_test.cpp:39: Failure&#13;">
          <StackTrace>system/extras/tests/kernel.config/sysvipc_test.cpp:39: Failure
Value of: access("/proc/sysvipc", 0)
Actual: 0
Expected: -1
system/extras/tests/kernel.config/sysvipc_test.cpp:40: Failure
Value of: access("/proc/sysvipc/msg", 0)
Actual: 0
Expected: -1
system/extras/tests/kernel.config/sysvipc_test.cpp:41: Failure
Value of: access("/proc/sysvipc/sem", 0)
Actual: 0
Expected: -1
system/extras/tests/kernel.config/sysvipc_test.cpp:42: Failure
Value of: access("/proc/sysvipc/shm", 0)
Actual: 0
Expected: -1</StackTrace>
        </Failure>
      </Test>
    </TestCase>
  </Module>
  <Module name="CtsKeystoreTestCases" abi="armeabi-v7a" runtime="985516" done="true" pass="881">
    <TestCase name="android.keystore.cts.KeyAttestationTest">
      <Test result="fail" name="testEcAttestation">
        <Failure message="java.lang.Exception: Failed on curve 0 and challege 0&#13;">
          <StackTrace>java.lang.Exception: Failed on curve 0 and challege 0
at android.keystore.cts.KeyAttestationTest.testEcAttestation(KeyAttestationTest.java:165)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
Caused by: java.lang.AssertionError: Software KM is version 3
Expected: is &lt;3&gt;
but: was &lt;2&gt;
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.junit.Assert.assertThat(Assert.java:956)
at android.keystore.cts.KeyAttestationTest.checkAttestationSecurityLevelDependentParams(KeyAttestationTest.java:744)
at android.keystore.cts.KeyAttestationTest.checkKeyIndependentAttestationInfo(KeyAttestationTest.java:515)
at android.keystore.cts.KeyAttestationTest.testEcAttestation(KeyAttestationTest.java:486)
at android.keystore.cts.KeyAttestationTest.testEcAttestation(KeyAttestationTest.java:158)
... 15 more
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testRsaAttestation">
        <Failure message="java.lang.Exception: Failed on key size 512 challenge [], purposes [2, 3] and paddings [PKCS1]&#13;">
          <StackTrace>java.lang.Exception: Failed on key size 512 challenge [], purposes [2, 3] and paddings [PKCS1]
at android.keystore.cts.KeyAttestationTest.testRsaAttestations(KeyAttestationTest.java:375)
at android.keystore.cts.KeyAttestationTest.testRsaAttestation(KeyAttestationTest.java:285)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
Caused by: java.lang.AssertionError: Software KM is version 3
Expected: is &lt;3&gt;
but: was &lt;2&gt;
at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)
at org.junit.Assert.assertThat(Assert.java:956)
at android.keystore.cts.KeyAttestationTest.checkAttestationSecurityLevelDependentParams(KeyAttestationTest.java:744)
at android.keystore.cts.KeyAttestationTest.checkKeyIndependentAttestationInfo(KeyAttestationTest.java:515)
at android.keystore.cts.KeyAttestationTest.testRsaAttestation(KeyAttestationTest.java:432)
at android.keystore.cts.KeyAttestationTest.testRsaAttestations(KeyAttestationTest.java:370)
... 16 more
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.keystore.cts.KeyChainTest">
      <Test result="fail" name="testIsBoundKeyAlgorithm_RequiredAlgorithmsSupported">
        <Failure message="junit.framework.AssertionFailedError: RSA must be hardware-backed by a hardware-specific Keymaster HAL&#13;">
          <StackTrace>junit.framework.AssertionFailedError: RSA must be hardware-backed by a hardware-specific Keymaster HAL
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.keystore.cts.KeyChainTest.testIsBoundKeyAlgorithm_RequiredAlgorithmsSupported(KeyChainTest.java:76)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    </Module>
  <Module name="CtsLibcoreTestCases" abi="armeabi-v7a" runtime="1852459" done="true" pass="23007">
    <TestCase name="libcore.io.OsTest">
      <Test result="fail" name="test_xattr_Errno">
        <Failure message="junit.framework.AssertionFailedError: expected:&lt;95&gt; but was:&lt;13&gt;&#13;">
          <StackTrace>junit.framework.AssertionFailedError: expected:&lt;95&gt; but was:&lt;13&gt;
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:67)
at junit.framework.Assert.assertEquals(Assert.java:199)
at junit.framework.Assert.assertEquals(Assert.java:205)
at libcore.io.OsTest.test_xattr_Errno(OsTest.java:657)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="libcore.java.net.InetAddressTest">
      <Test result="fail" name="test_getByName_invalid[1]">
        <Failure message="java.lang.AssertionError: Invalid IP address incorrectly recognized as valid: 1.2.3.4.&#13;">
          <StackTrace>java.lang.AssertionError: Invalid IP address incorrectly recognized as valid: 1.2.3.4.
at org.junit.Assert.fail(Assert.java:88)
at libcore.java.net.InetAddressTest.test_getByName_invalid(InetAddressTest.java:301)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at junitparams.internal.InvokeParameterisedMethod.evaluate(InvokeParameterisedMethod.java:220)
at junitparams.internal.InvokableFrameworkMethod.runMethodInvoker(InvokableFrameworkMethod.java:48)
at junitparams.internal.InstanceFrameworkMethod.run(InstanceFrameworkMethod.java:55)
at junitparams.JUnitParamsRunner.runChild(JUnitParamsRunner.java:420)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
at org.junit.runners.ParentRunner.-wrap0(Unknown Source:0)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
at org.junit.runners.Suite.runChild(Suite.java:128)
at org.junit.runners.Suite.runChild(Suite.java:126)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
at org.junit.runners.ParentRunner.-wrap0(Unknown Source:0)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
at android.support.test.internal.runner.TestExecutor.execute(TestExecutor.java:58)
at android.support.test.runner.AndroidJUnitRunner.onStart(AndroidJUnitRunner.java:369)
at android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:2074)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="libcore.java.net.SocketTest">
      <Test result="fail" name="testSocketTestAllAddresses">
        <Failure message="junit.framework.AssertionFailedError: Loopback DNS record is unreachable or is invalid.&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Loopback DNS record is unreachable or is invalid.
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at libcore.java.net.SocketTest.testSocketTestAllAddresses(SocketTest.java:593)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at libcore.junit.junit3.TestCaseWithRules.superRunBare(TestCaseWithRules.java:110)
at libcore.junit.junit3.TestCaseWithRules.-wrap0(Unknown Source:0)
at libcore.junit.junit3.TestCaseWithRules$1.evaluate(TestCaseWithRules.java:66)
at dalvik.system.CloseGuardSupport$FailTestWhenResourcesNotClosedRule$1.evaluate(CloseGuardSupport.java:111)
at libcore.junit.junit3.TestCaseWithRules.runBare(TestCaseWithRules.java:106)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    </Module>
  <Module name="CtsLocationTestCases" abi="armeabi-v7a" runtime="1494903" done="true" pass="134">
    <TestCase name="android.location.cts.GnssPseudorangeVerificationTest">
      <Test result="fail" name="testPseudoPosition">
        <Failure message="junit.framework.AssertionFailedError: Time elapsed without getting enough location fixes. Possibly, the test has been run deep indoors. Consider retrying test outdoors.&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Time elapsed without getting enough location fixes. Possibly, the test has been run deep indoors. Consider retrying test outdoors.
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.location.cts.GnssPseudorangeVerificationTest.testPseudoPosition(GnssPseudorangeVerificationTest.java:251)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    </Module>
  <Module name="CtsMediaTestCases" abi="armeabi-v7a" runtime="481228" done="false" pass="1025">
    <TestCase name="android.media.cts.AudioTrack_ListenerTest">
      <Test result="fail" name="testAudioTrackCallbackWithHandler">
        <Failure message="junit.framework.AssertionFailedError: expected:&lt;8888.0&gt; but was:&lt;10583.0&gt;&#13;">
          <StackTrace>junit.framework.AssertionFailedError: expected:&lt;8888.0&gt; but was:&lt;10583.0&gt;
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:120)
at junit.framework.Assert.assertEquals(Assert.java:127)
at android.media.cts.AudioTrack_ListenerTest.doTest(AudioTrack_ListenerTest.java:195)
at android.media.cts.AudioTrack_ListenerTest.testAudioTrackCallbackWithHandler(AudioTrack_ListenerTest.java:63)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.media.cts.DecodeAccuracyTest">
      <Test result="fail" name="testGLViewDecodeAccuracy[H264 520X360]">
        <Failure message="junit.framework.AssertionFailedError: Failed to decode the expected number of frames.&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Failed to decode the expected number of frames.
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.media.cts.DecodeAccuracyTest.decodeVideo(DecodeAccuracyTest.java:239)
at android.media.cts.DecodeAccuracyTest.runTest(DecodeAccuracyTest.java:231)
at android.media.cts.DecodeAccuracyTest.testGLViewDecodeAccuracy(DecodeAccuracyTest.java:174)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGLViewDecodeAccuracy[H264 608X1080]">
        <Failure message="Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGLViewLargerHeightDecodeAccuracy[VP9 960X720]">
        <Failure message="java.lang.RuntimeException: Could not launch intent Intent { act=android.intent.action.MAIN flg=0x10000000 cmp=android.media.cts/.DecodeAccuracyTestActivity } within 45 seconds. Perhaps the main thread has not gone idle within a reasonable amount of time? There could be an animation or something constantly repainting the screen. Or the activity is doing network calls on creation? See the threaddump logs. For your reference the last time the event queue was idle before your activity launch request was 1515058161231 and now the last time the queue went idle was: 1515058165894. If these numbers are the same your activity might be hogging the event queue.&#13;">
          <StackTrace>java.lang.RuntimeException: Could not launch intent Intent { act=android.intent.action.MAIN flg=0x10000000 cmp=android.media.cts/.DecodeAccuracyTestActivity } within 45 seconds. Perhaps the main thread has not gone idle within a reasonable amount of time? There could be an animation or something constantly repainting the screen. Or the activity is doing network calls on creation? See the threaddump logs. For your reference the last time the event queue was idle before your activity launch request was 1515058161231 and now the last time the queue went idle was: 1515058165894. If these numbers are the same your activity might be hogging the event queue.
at android.support.test.runner.MonitoringInstrumentation.startActivitySync(MonitoringInstrumentation.java:407)
at android.support.test.rule.ActivityTestRule.launchActivity(ActivityTestRule.java:332)
at android.support.test.rule.ActivityTestRule$ActivityStatement.evaluate(ActivityTestRule.java:431)
at org.junit.rules.RunRules.evaluate(RunRules.java:20)
at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
at org.junit.runners.ParentRunner.-wrap0(Unknown Source:0)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
at org.junit.runners.Suite.runChild(Suite.java:128)
at org.junit.runners.Suite.runChild(Suite.java:126)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
at org.junit.runners.ParentRunner.-wrap0(Unknown Source:0)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
at org.junit.runners.Suite.runChild(Suite.java:128)
at org.junit.runners.Suite.runChild(Suite.java:126)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
at org.junit.runners.ParentRunner.-wrap0(Unknown Source:0)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
at android.support.test.internal.runner.TestExecutor.execute(TestExecutor.java:58)
at android.support.test.runner.AndroidJUnitRunner.onStart(AndroidJUnitRunner.java:369)
at android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:2074)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGLViewLargerWidthDecodeAccuracy[VP9 520X360]">
        <Failure message="java.lang.RuntimeException: Could not launch intent Intent { act=android.intent.action.MAIN flg=0x10000000 cmp=android.media.cts/.DecodeAccuracyTestActivity } within 45 seconds. Perhaps the main thread has not gone idle within a reasonable amount of time? There could be an animation or something constantly repainting the screen. Or the activity is doing network calls on creation? See the threaddump logs. For your reference the last time the event queue was idle before your activity launch request was 1514987153859 and now the last time the queue went idle was: 1514987168348. If these numbers are the same your activity might be hogging the event queue.&#13;">
          <StackTrace>java.lang.RuntimeException: Could not launch intent Intent { act=android.intent.action.MAIN flg=0x10000000 cmp=android.media.cts/.DecodeAccuracyTestActivity } within 45 seconds. Perhaps the main thread has not gone idle within a reasonable amount of time? There could be an animation or something constantly repainting the screen. Or the activity is doing network calls on creation? See the threaddump logs. For your reference the last time the event queue was idle before your activity launch request was 1514987153859 and now the last time the queue went idle was: 1514987168348. If these numbers are the same your activity might be hogging the event queue.
at android.support.test.runner.MonitoringInstrumentation.startActivitySync(MonitoringInstrumentation.java:407)
at android.support.test.rule.ActivityTestRule.launchActivity(ActivityTestRule.java:332)
at android.support.test.rule.ActivityTestRule$ActivityStatement.evaluate(ActivityTestRule.java:431)
at org.junit.rules.RunRules.evaluate(RunRules.java:20)
at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
at org.junit.runners.ParentRunner.-wrap0(Unknown Source:0)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
at org.junit.runners.Suite.runChild(Suite.java:128)
at org.junit.runners.Suite.runChild(Suite.java:126)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
at org.junit.runners.ParentRunner.-wrap0(Unknown Source:0)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
at org.junit.runners.Suite.runChild(Suite.java:128)
at org.junit.runners.Suite.runChild(Suite.java:126)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
at org.junit.runners.ParentRunner.-wrap0(Unknown Source:0)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
at android.support.test.internal.runner.TestExecutor.execute(TestExecutor.java:58)
at android.support.test.runner.AndroidJUnitRunner.onStart(AndroidJUnitRunner.java:369)
at android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:2074)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testSurfaceViewVideoDecodeAccuracy[H264 1440X1080]">
        <Failure message="junit.framework.AssertionFailedError: Failed to decode the expected number of frames.&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Failed to decode the expected number of frames.
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.media.cts.DecodeAccuracyTest.decodeVideo(DecodeAccuracyTest.java:239)
at android.media.cts.DecodeAccuracyTest.runTest(DecodeAccuracyTest.java:231)
at android.media.cts.DecodeAccuracyTest.testSurfaceViewVideoDecodeAccuracy(DecodeAccuracyTest.java:189)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testSurfaceViewVideoDecodeAccuracy[VP9 1280X544]">
        <Failure message="java.lang.RuntimeException: Could not launch intent Intent { act=android.intent.action.MAIN flg=0x10000000 cmp=android.media.cts/.DecodeAccuracyTestActivity } within 45 seconds. Perhaps the main thread has not gone idle within a reasonable amount of time? There could be an animation or something constantly repainting the screen. Or the activity is doing network calls on creation? See the threaddump logs. For your reference the last time the event queue was idle before your activity launch request was 1515057961772 and now the last time the queue went idle was: 1515058007991. If these numbers are the same your activity might be hogging the event queue.&#13;">
          <StackTrace>java.lang.RuntimeException: Could not launch intent Intent { act=android.intent.action.MAIN flg=0x10000000 cmp=android.media.cts/.DecodeAccuracyTestActivity } within 45 seconds. Perhaps the main thread has not gone idle within a reasonable amount of time? There could be an animation or something constantly repainting the screen. Or the activity is doing network calls on creation? See the threaddump logs. For your reference the last time the event queue was idle before your activity launch request was 1515057961772 and now the last time the queue went idle was: 1515058007991. If these numbers are the same your activity might be hogging the event queue.
at android.support.test.runner.MonitoringInstrumentation.startActivitySync(MonitoringInstrumentation.java:407)
at android.support.test.rule.ActivityTestRule.launchActivity(ActivityTestRule.java:332)
at android.support.test.rule.ActivityTestRule$ActivityStatement.evaluate(ActivityTestRule.java:431)
at org.junit.rules.RunRules.evaluate(RunRules.java:20)
at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
at org.junit.runners.ParentRunner.-wrap0(Unknown Source:0)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
at org.junit.runners.Suite.runChild(Suite.java:128)
at org.junit.runners.Suite.runChild(Suite.java:126)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
at org.junit.runners.ParentRunner.-wrap0(Unknown Source:0)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
at org.junit.runners.Suite.runChild(Suite.java:128)
at org.junit.runners.Suite.runChild(Suite.java:126)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
at org.junit.runners.ParentRunner.-wrap0(Unknown Source:0)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
at android.support.test.internal.runner.TestExecutor.execute(TestExecutor.java:58)
at android.support.test.runner.AndroidJUnitRunner.onStart(AndroidJUnitRunner.java:369)
at android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:2074)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testSurfaceViewVideoDecodeAccuracy[VP9 520X360]">
        <Failure message="java.lang.AssertionError: Timeout waiting for a valid surface.&#13;">
          <StackTrace>java.lang.AssertionError: Timeout waiting for a valid surface.
at org.junit.Assert.fail(Assert.java:88)
at android.media.cts.DecodeAccuracyTest.runTest(DecodeAccuracyTest.java:221)
at android.media.cts.DecodeAccuracyTest.testSurfaceViewVideoDecodeAccuracy(DecodeAccuracyTest.java:189)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.media.cts.DecodeEditEncodeTest">
      <Test result="fail" name="testVideoEditQCIF">
        <Failure message="junit.framework.AssertionFailedError: Frame count expected:&lt;31&gt; but was:&lt;32&gt;&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Frame count expected:&lt;31&gt; but was:&lt;32&gt;
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:67)
at junit.framework.Assert.assertEquals(Assert.java:199)
at android.media.cts.DecodeEditEncodeTest.generateVideoData(DecodeEditEncodeTest.java:342)
at android.media.cts.DecodeEditEncodeTest.generateVideoFile(DecodeEditEncodeTest.java:224)
at android.media.cts.DecodeEditEncodeTest.videoEditTest(DecodeEditEncodeTest.java:157)
at android.media.cts.DecodeEditEncodeTest.-wrap0(Unknown Source:0)
at android.media.cts.DecodeEditEncodeTest$VideoEditWrapper.run(DecodeEditEncodeTest.java:120)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testVideoEditQVGA">
        <Failure message="junit.framework.AssertionFailedError: Frame count expected:&lt;31&gt; but was:&lt;32&gt;&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Frame count expected:&lt;31&gt; but was:&lt;32&gt;
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:67)
at junit.framework.Assert.assertEquals(Assert.java:199)
at android.media.cts.DecodeEditEncodeTest.generateVideoData(DecodeEditEncodeTest.java:342)
at android.media.cts.DecodeEditEncodeTest.generateVideoFile(DecodeEditEncodeTest.java:224)
at android.media.cts.DecodeEditEncodeTest.videoEditTest(DecodeEditEncodeTest.java:157)
at android.media.cts.DecodeEditEncodeTest.-wrap0(Unknown Source:0)
at android.media.cts.DecodeEditEncodeTest$VideoEditWrapper.run(DecodeEditEncodeTest.java:120)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.media.cts.DecoderTest">
      <Test result="fail" name="testCodecResetsH263WithoutSurface">
        <Failure message="Test failed to run to completion. Reason: 'Test run failed to complete. Expected 108 tests, received 76'. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Test run failed to complete. Expected 108 tests, received 76'. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testEOSBehaviorH264">
        <Failure message="junit.framework.AssertionFailedError: frame data mismatch at frame 5 expected:&lt;1418764182&gt; but was:&lt;1974383031&gt;&#13;">
          <StackTrace>junit.framework.AssertionFailedError: frame data mismatch at frame 5 expected:&lt;1418764182&gt; but was:&lt;1974383031&gt;
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:67)
at junit.framework.Assert.assertEquals(Assert.java:134)
at android.media.cts.DecoderTest.decodeWithChecks(DecoderTest.java:2357)
at android.media.cts.DecoderTest.testEOSBehavior(DecoderTest.java:2156)
at android.media.cts.DecoderTest.testEOSBehaviorH264(DecoderTest.java:2422)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.media.cts.EncodeDecodeTest">
      <Test result="fail" name="testEncodeDecodeVideoFromBufferToBuffer720p">
        <Failure message="junit.framework.AssertionFailedError: Wrong time stamp expected:&lt;1866798&gt; but was:&lt;0&gt;&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Wrong time stamp expected:&lt;1866798&gt; but was:&lt;0&gt;
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:67)
at junit.framework.Assert.assertEquals(Assert.java:134)
at android.media.cts.EncodeDecodeTest.doEncodeDecodeVideoFromBuffer(EncodeDecodeTest.java:833)
at android.media.cts.EncodeDecodeTest.encodeDecodeVideoFromBuffer(EncodeDecodeTest.java:448)
at android.media.cts.EncodeDecodeTest.testEncodeDecodeVideoFromBufferToBuffer720p(EncodeDecodeTest.java:115)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testEncodeDecodeVideoFromBufferToBufferQCIF">
        <Failure message="junit.framework.AssertionFailedError: Wrong time stamp expected:&lt;1866798&gt; but was:&lt;0&gt;&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Wrong time stamp expected:&lt;1866798&gt; but was:&lt;0&gt;
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:67)
at junit.framework.Assert.assertEquals(Assert.java:134)
at android.media.cts.EncodeDecodeTest.doEncodeDecodeVideoFromBuffer(EncodeDecodeTest.java:833)
at android.media.cts.EncodeDecodeTest.encodeDecodeVideoFromBuffer(EncodeDecodeTest.java:448)
at android.media.cts.EncodeDecodeTest.testEncodeDecodeVideoFromBufferToBufferQCIF(EncodeDecodeTest.java:107)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testEncodeDecodeVideoFromBufferToBufferQVGA">
        <Failure message="junit.framework.AssertionFailedError: Wrong time stamp expected:&lt;1866798&gt; but was:&lt;0&gt;&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Wrong time stamp expected:&lt;1866798&gt; but was:&lt;0&gt;
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:67)
at junit.framework.Assert.assertEquals(Assert.java:134)
at android.media.cts.EncodeDecodeTest.doEncodeDecodeVideoFromBuffer(EncodeDecodeTest.java:833)
at android.media.cts.EncodeDecodeTest.encodeDecodeVideoFromBuffer(EncodeDecodeTest.java:448)
at android.media.cts.EncodeDecodeTest.testEncodeDecodeVideoFromBufferToBufferQVGA(EncodeDecodeTest.java:111)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testEncodeDecodeVideoFromBufferToSurface720p">
        <Failure message="junit.framework.AssertionFailedError: Wrong time stamp expected:&lt;1866798&gt; but was:&lt;0&gt;&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Wrong time stamp expected:&lt;1866798&gt; but was:&lt;0&gt;
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:67)
at junit.framework.Assert.assertEquals(Assert.java:134)
at android.media.cts.EncodeDecodeTest.doEncodeDecodeVideoFromBuffer(EncodeDecodeTest.java:866)
at android.media.cts.EncodeDecodeTest.encodeDecodeVideoFromBuffer(EncodeDecodeTest.java:448)
at android.media.cts.EncodeDecodeTest.-wrap1(Unknown Source:0)
at android.media.cts.EncodeDecodeTest$BufferToSurfaceWrapper.run(EncodeDecodeTest.java:191)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testEncodeDecodeVideoFromBufferToSurfaceQCIF">
        <Failure message="junit.framework.AssertionFailedError: Wrong time stamp expected:&lt;1866798&gt; but was:&lt;0&gt;&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Wrong time stamp expected:&lt;1866798&gt; but was:&lt;0&gt;
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:67)
at junit.framework.Assert.assertEquals(Assert.java:134)
at android.media.cts.EncodeDecodeTest.doEncodeDecodeVideoFromBuffer(EncodeDecodeTest.java:866)
at android.media.cts.EncodeDecodeTest.encodeDecodeVideoFromBuffer(EncodeDecodeTest.java:448)
at android.media.cts.EncodeDecodeTest.-wrap1(Unknown Source:0)
at android.media.cts.EncodeDecodeTest$BufferToSurfaceWrapper.run(EncodeDecodeTest.java:191)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testEncodeDecodeVideoFromBufferToSurfaceQVGA">
        <Failure message="junit.framework.AssertionFailedError: Wrong time stamp expected:&lt;1866798&gt; but was:&lt;0&gt;&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Wrong time stamp expected:&lt;1866798&gt; but was:&lt;0&gt;
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.failNotEquals(Assert.java:287)
at junit.framework.Assert.assertEquals(Assert.java:67)
at junit.framework.Assert.assertEquals(Assert.java:134)
at android.media.cts.EncodeDecodeTest.doEncodeDecodeVideoFromBuffer(EncodeDecodeTest.java:866)
at android.media.cts.EncodeDecodeTest.encodeDecodeVideoFromBuffer(EncodeDecodeTest.java:448)
at android.media.cts.EncodeDecodeTest.-wrap1(Unknown Source:0)
at android.media.cts.EncodeDecodeTest$BufferToSurfaceWrapper.run(EncodeDecodeTest.java:191)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testEncodeDecodeVideoFromPersistentSurfaceToSurface720p">
        <Failure message="java.util.concurrent.TimeoutException: Test timed out after 1800000 milliseconds&#13;">
          <StackTrace>java.util.concurrent.TimeoutException: Test timed out after 1800000 milliseconds
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:86)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testEncodeDecodeVideoFromPersistentSurfaceToSurface720pNdk">
        <Failure message="java.util.concurrent.TimeoutException: Test timed out after 1800000 milliseconds&#13;">
          <StackTrace>java.util.concurrent.TimeoutException: Test timed out after 1800000 milliseconds
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:86)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testEncodeDecodeVideoFromPersistentSurfaceToSurfaceQCIF">
        <Failure message="java.util.concurrent.TimeoutException: Test timed out after 1800000 milliseconds&#13;">
          <StackTrace>java.util.concurrent.TimeoutException: Test timed out after 1800000 milliseconds
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:86)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testEncodeDecodeVideoFromPersistentSurfaceToSurfaceQVGA">
        <Failure message="java.util.concurrent.TimeoutException: Test timed out after 1800000 milliseconds&#13;">
          <StackTrace>java.util.concurrent.TimeoutException: Test timed out after 1800000 milliseconds
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:86)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testVP8EncodeDecodeVideoFromBufferToBuffer720p">
        <Failure message="Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testVP8EncodeDecodeVideoFromBufferToBufferQCIF">
        <Failure message="Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testVP8EncodeDecodeVideoFromBufferToBufferQVGA">
        <Failure message="Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.media.cts.EncodeVirtualDisplayWithCompositionTest">
      <Test result="fail" name="testRendering800x480RemotelyWith3Windows">
        <Failure message="Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testRenderingMaxResolutionLocally">
        <Failure message="Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.media.cts.ExifInterfaceTest">
      <Test result="fail" name="testReadExifDataFromCanonG7XCr2">
        <Failure message="java.io.FileNotFoundException: /storage/emulated/0/test/images/canon_g7x.cr2 (No such file or directory)&#13;">
          <StackTrace>java.io.FileNotFoundException: /storage/emulated/0/test/images/canon_g7x.cr2 (No such file or directory)
at java.io.FileInputStream.open0(Native Method)
at java.io.FileInputStream.open(FileInputStream.java:200)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:150)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:103)
at android.media.ExifInterface.&lt;init&gt;(ExifInterface.java:1329)
at android.media.cts.ExifInterfaceTest.testExifInterfaceCommon(ExifInterfaceTest.java:306)
at android.media.cts.ExifInterfaceTest.testExifInterfaceForRaw(ExifInterfaceTest.java:411)
at android.media.cts.ExifInterfaceTest.testReadExifDataFromCanonG7XCr2(ExifInterfaceTest.java:451)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testReadExifDataFromFujiX20Raf">
        <Failure message="java.io.FileNotFoundException: /storage/emulated/0/test/images/fuji_x20.raf (No such file or directory)&#13;">
          <StackTrace>java.io.FileNotFoundException: /storage/emulated/0/test/images/fuji_x20.raf (No such file or directory)
at java.io.FileInputStream.open0(Native Method)
at java.io.FileInputStream.open(FileInputStream.java:200)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:150)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:103)
at android.media.ExifInterface.&lt;init&gt;(ExifInterface.java:1329)
at android.media.cts.ExifInterfaceTest.testExifInterfaceCommon(ExifInterfaceTest.java:306)
at android.media.cts.ExifInterfaceTest.testExifInterfaceForRaw(ExifInterfaceTest.java:411)
at android.media.cts.ExifInterfaceTest.testReadExifDataFromFujiX20Raf(ExifInterfaceTest.java:455)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testReadExifDataFromLgG4Iso800Dng">
        <Failure message="java.io.FileNotFoundException: /storage/emulated/0/test/images/lg_g4_iso_800.dng (No such file or directory)&#13;">
          <StackTrace>java.io.FileNotFoundException: /storage/emulated/0/test/images/lg_g4_iso_800.dng (No such file or directory)
at java.io.FileInputStream.open0(Native Method)
at java.io.FileInputStream.open(FileInputStream.java:200)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:150)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:103)
at android.media.ExifInterface.&lt;init&gt;(ExifInterface.java:1329)
at android.media.cts.ExifInterfaceTest.testExifInterfaceCommon(ExifInterfaceTest.java:306)
at android.media.cts.ExifInterfaceTest.testExifInterfaceForRaw(ExifInterfaceTest.java:411)
at android.media.cts.ExifInterfaceTest.testReadExifDataFromLgG4Iso800Dng(ExifInterfaceTest.java:426)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testReadExifDataFromNikonP330Nrw">
        <Failure message="java.io.FileNotFoundException: /storage/emulated/0/test/images/nikon_p330.nrw (No such file or directory)&#13;">
          <StackTrace>java.io.FileNotFoundException: /storage/emulated/0/test/images/nikon_p330.nrw (No such file or directory)
at java.io.FileInputStream.open0(Native Method)
at java.io.FileInputStream.open(FileInputStream.java:200)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:150)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:103)
at android.media.ExifInterface.&lt;init&gt;(ExifInterface.java:1329)
at android.media.cts.ExifInterfaceTest.testExifInterfaceCommon(ExifInterfaceTest.java:306)
at android.media.cts.ExifInterfaceTest.testExifInterfaceForRaw(ExifInterfaceTest.java:411)
at android.media.cts.ExifInterfaceTest.testReadExifDataFromNikonP330Nrw(ExifInterfaceTest.java:463)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testReadExifDataFromPanasonicGM5Rw2">
        <Failure message="java.io.FileNotFoundException: /storage/emulated/0/test/images/panasonic_gm5.rw2 (No such file or directory)&#13;">
          <StackTrace>java.io.FileNotFoundException: /storage/emulated/0/test/images/panasonic_gm5.rw2 (No such file or directory)
at java.io.FileInputStream.open0(Native Method)
at java.io.FileInputStream.open(FileInputStream.java:200)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:150)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:103)
at android.media.ExifInterface.&lt;init&gt;(ExifInterface.java:1329)
at android.media.cts.ExifInterfaceTest.testExifInterfaceCommon(ExifInterfaceTest.java:306)
at android.media.cts.ExifInterfaceTest.testExifInterfaceForRaw(ExifInterfaceTest.java:411)
at android.media.cts.ExifInterfaceTest.testReadExifDataFromPanasonicGM5Rw2(ExifInterfaceTest.java:471)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testReadExifDataFromPentaxK5Pef">
        <Failure message="java.io.FileNotFoundException: /storage/emulated/0/test/images/pentax_k5.pef (No such file or directory)&#13;">
          <StackTrace>java.io.FileNotFoundException: /storage/emulated/0/test/images/pentax_k5.pef (No such file or directory)
at java.io.FileInputStream.open0(Native Method)
at java.io.FileInputStream.open(FileInputStream.java:200)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:150)
at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:103)
at android.media.ExifInterface.&lt;init&gt;(ExifInterface.java:1329)
at android.media.cts.ExifInterfaceTest.testExifInterfaceCommon(ExifInterfaceTest.java:306)
at android.media.cts.ExifInterfaceTest.testExifInterfaceForRaw(ExifInterfaceTest.java:411)
at android.media.cts.ExifInterfaceTest.testReadExifDataFromPentaxK5Pef(ExifInterfaceTest.java:475)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.media.cts.ExtractDecodeEditEncodeMuxTest">
      <Test result="fail" name="testExtractDecodeEditEncodeMux720p">
        <Failure message="java.lang.IllegalStateException&#13;">
          <StackTrace>java.lang.IllegalStateException
at android.media.MediaCodec.native_dequeueOutputBuffer(Native Method)
at android.media.MediaCodec.dequeueOutputBuffer(MediaCodec.java:2622)
at android.media.cts.ExtractDecodeEditEncodeMuxTest.doExtractDecodeEditEncodeMux(ExtractDecodeEditEncodeMuxTest.java:1055)
at android.media.cts.ExtractDecodeEditEncodeMuxTest.extractDecodeEditEncodeMux(ExtractDecodeEditEncodeMuxTest.java:388)
at android.media.cts.ExtractDecodeEditEncodeMuxTest.-wrap0(Unknown Source:0)
at android.media.cts.ExtractDecodeEditEncodeMuxTest$TestWrapper.run(ExtractDecodeEditEncodeMuxTest.java:188)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.media.cts.ImageReaderDecoderTest">
      <Test result="fail" name="testOtherH263ImageReader">
        <Failure message="Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOtherMpeg4ImageReader">
        <Failure message="Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOtherVP8Image">
        <Failure message="java.lang.RuntimeException: while OMX.MTK.VIDEO.DECODER.VP8 decoding swirl_128x128_vp8: {color-format=2135033992, track-id=1, durationUs=2583000, display-height=128, mime=video/x-vnd.on2.vp8, width=128, height=128, display-width=128}&#13;">
          <StackTrace>java.lang.RuntimeException: while OMX.MTK.VIDEO.DECODER.VP8 decoding swirl_128x128_vp8: {color-format=2135033992, track-id=1, durationUs=2583000, display-height=128, mime=video/x-vnd.on2.vp8, width=128, height=128, display-width=128}
at android.media.cts.ImageReaderDecoderTest$Decoder.videoDecode(ImageReaderDecoderTest.java:301)
at android.media.cts.ImageReaderDecoderTest$Decoder.videoDecode(ImageReaderDecoderTest.java:239)
at android.media.cts.ImageReaderDecoderTest.decodeTest(ImageReaderDecoderTest.java:423)
at android.media.cts.ImageReaderDecoderTest.swirlTest(ImageReaderDecoderTest.java:416)
at android.media.cts.ImageReaderDecoderTest.testOtherVP8Image(ImageReaderDecoderTest.java:372)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
Caused by: junit.framework.AssertionFailedError: color of layer-1 is not uniform: [175.03906, 27.0, 174.0, 13.99214, 0.015625, 0.015625, 0.0011166984, 0.0011166984, 1.0]
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.media.cts.ImageReaderDecoderTest.validateSwirl(ImageReaderDecoderTest.java:684)
at android.media.cts.ImageReaderDecoderTest.decodeFramesToImage(ImageReaderDecoderTest.java:575)
at android.media.cts.ImageReaderDecoderTest.-wrap0(Unknown Source:0)
at android.media.cts.ImageReaderDecoderTest$Decoder.videoDecode(ImageReaderDecoderTest.java:292)
... 19 more
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.media.cts.MediaCodecCapabilitiesTest">
      <Test result="fail" name="testGetMaxSupportedInstances">
        <Failure message="junit.framework.AssertionFailedError: Unexpected CodecException android.media.MediaCodec.error_neg_1010&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Unexpected CodecException android.media.MediaCodec.error_neg_1010
at junit.framework.Assert.fail(Assert.java:50)
at android.media.cts.MediaCodecCapabilitiesTest.getActualMax(MediaCodecCapabilitiesTest.java:583)
at android.media.cts.MediaCodecCapabilitiesTest.testGetMaxSupportedInstances(MediaCodecCapabilitiesTest.java:645)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.media.cts.MediaCodecTest">
      <Test result="fail" name="testAbruptStop">
        <Failure message="java.lang.IllegalStateException&#13;">
          <StackTrace>java.lang.IllegalStateException
at android.media.MediaCodec.native_stop(Native Method)
at android.media.MediaCodec.stop(MediaCodec.java:2059)
at android.media.cts.MediaCodecTest.doTestAbruptStop(MediaCodecTest.java:492)
at android.media.cts.MediaCodecTest.testAbruptStop(MediaCodecTest.java:456)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testReconfigureWithoutSurface">
        <Failure message="java.lang.IllegalStateException&#13;">
          <StackTrace>java.lang.IllegalStateException
at android.media.MediaCodec.native_stop(Native Method)
at android.media.MediaCodec.stop(MediaCodec.java:2059)
at android.media.cts.MediaCodecTest.testReconfigureWithoutSurface(MediaCodecTest.java:1010)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.media.cts.MediaPlayerTest">
      <Test result="fail" name="testChangeTimedTextTrack">
        <Failure message="junit.framework.AssertionFailedError&#13;">
          <StackTrace>junit.framework.AssertionFailedError
at junit.framework.Assert.fail(Assert.java:48)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertTrue(Assert.java:27)
at android.media.cts.MediaPlayerTest.testChangeTimedTextTrack(MediaPlayerTest.java:1857)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.media.cts.VideoEncoderTest">
      <Test result="fail" name="testGoogH264Flex360pWithIntraRefresh">
        <Failure message="junit.framework.AssertionFailedError: received error on OMX.google.h264.encoder: android.media.MediaCodec$CodecException: Error 0x80001001&#13;">
          <StackTrace>junit.framework.AssertionFailedError: received error on OMX.google.h264.encoder: android.media.MediaCodec$CodecException: Error 0x80001001
at junit.framework.Assert.fail(Assert.java:50)
at android.media.cts.VideoEncoderTest$VideoProcessor.onError(VideoEncoderTest.java:613)
at android.media.MediaCodec$EventHandler.handleCallback(MediaCodec.java:1681)
at android.media.MediaCodec$EventHandler.handleMessage(MediaCodec.java:1621)
at android.os.Handler.dispatchMessage(Handler.java:105)
at android.os.Looper.loop(Looper.java:164)
at android.app.ActivityThread.main(ActivityThread.java:6541)
at java.lang.reflect.Method.invoke(Native Method)
at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:240)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:767)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogH264FlexArbitraryH">
        <Failure message="junit.framework.AssertionFailedError: received error on OMX.google.h264.encoder: android.media.MediaCodec$CodecException: Error 0x80001001&#13;">
          <StackTrace>junit.framework.AssertionFailedError: received error on OMX.google.h264.encoder: android.media.MediaCodec$CodecException: Error 0x80001001
at junit.framework.Assert.fail(Assert.java:50)
at android.media.cts.VideoEncoderTest$VideoProcessor.onError(VideoEncoderTest.java:613)
at android.media.MediaCodec$EventHandler.handleCallback(MediaCodec.java:1681)
at android.media.MediaCodec$EventHandler.handleMessage(MediaCodec.java:1621)
at android.os.Handler.dispatchMessage(Handler.java:105)
at android.os.Looper.loop(Looper.java:164)
at android.app.ActivityThread.main(ActivityThread.java:6541)
at java.lang.reflect.Method.invoke(Native Method)
at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:240)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:767)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogH264SurfArbitraryH">
        <Failure message="java.lang.RuntimeException: glUseProgram: glError 1285&#13;">
          <StackTrace>java.lang.RuntimeException: glUseProgram: glError 1285
at android.media.cts.TextureRender.checkGlError(TextureRender.java:245)
at android.media.cts.TextureRender.drawFrame(TextureRender.java:105)
at android.media.cts.OutputSurface.drawImage(OutputSurface.java:289)
at android.media.cts.VideoEncoderTest$SurfaceVideoProcessor.processLoop(VideoEncoderTest.java:727)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1142)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testArbitrary(VideoEncoderTest.java:1028)
at android.media.cts.VideoEncoderTest.arbitrary(VideoEncoderTest.java:1754)
at android.media.cts.VideoEncoderTest.arbitraryh(VideoEncoderTest.java:1768)
at android.media.cts.VideoEncoderTest.testGoogH264SurfArbitraryH(VideoEncoderTest.java:1446)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogH264SurfNearMinMax">
        <Failure message="java.lang.RuntimeException: glUseProgram: glError 1285&#13;">
          <StackTrace>java.lang.RuntimeException: glUseProgram: glError 1285
at android.media.cts.TextureRender.checkGlError(TextureRender.java:245)
at android.media.cts.TextureRender.drawFrame(TextureRender.java:105)
at android.media.cts.OutputSurface.drawImage(OutputSurface.java:289)
at android.media.cts.VideoEncoderTest$SurfaceVideoProcessor.processLoop(VideoEncoderTest.java:727)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1142)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testExtreme(VideoEncoderTest.java:1018)
at android.media.cts.VideoEncoderTest.extreme(VideoEncoderTest.java:1738)
at android.media.cts.VideoEncoderTest.nearminmax(VideoEncoderTest.java:1720)
at android.media.cts.VideoEncoderTest.testGoogH264SurfNearMinMax(VideoEncoderTest.java:1342)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogH264SurfNearMinMin">
        <Failure message="java.lang.RuntimeException: glUseProgram: glError 1285&#13;">
          <StackTrace>java.lang.RuntimeException: glUseProgram: glError 1285
at android.media.cts.TextureRender.checkGlError(TextureRender.java:245)
at android.media.cts.TextureRender.drawFrame(TextureRender.java:105)
at android.media.cts.OutputSurface.drawImage(OutputSurface.java:289)
at android.media.cts.VideoEncoderTest$SurfaceVideoProcessor.processLoop(VideoEncoderTest.java:727)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1142)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testExtreme(VideoEncoderTest.java:1018)
at android.media.cts.VideoEncoderTest.extreme(VideoEncoderTest.java:1738)
at android.media.cts.VideoEncoderTest.nearminmin(VideoEncoderTest.java:1716)
at android.media.cts.VideoEncoderTest.testGoogH264SurfNearMinMin(VideoEncoderTest.java:1316)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogMpeg4FlexArbitraryH">
        <Failure message="android.media.MediaCodec$CodecException: Error 0xfffffc0e&#13;">
          <StackTrace>android.media.MediaCodec$CodecException: Error 0xfffffc0e
at android.media.MediaCodec.native_configure(Native Method)
at android.media.MediaCodec.configure(MediaCodec.java:1935)
at android.media.MediaCodec.configure(MediaCodec.java:1864)
at android.media.cts.VideoEncoderTest$VideoStorage.play(VideoEncoderTest.java:134)
at android.media.cts.VideoEncoderTest$VideoStorage.playAll(VideoEncoderTest.java:167)
at android.media.cts.VideoEncoderTest$VideoProcessorBase.playBack(VideoEncoderTest.java:404)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1145)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testArbitrary(VideoEncoderTest.java:1028)
at android.media.cts.VideoEncoderTest.arbitrary(VideoEncoderTest.java:1754)
at android.media.cts.VideoEncoderTest.arbitraryh(VideoEncoderTest.java:1768)
at android.media.cts.VideoEncoderTest.testGoogMpeg4FlexArbitraryH(VideoEncoderTest.java:1449)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogMpeg4FlexNearMinMax">
        <Failure message="android.media.MediaCodec$CodecException: Error 0xfffffc0e&#13;">
          <StackTrace>android.media.MediaCodec$CodecException: Error 0xfffffc0e
at android.media.MediaCodec.native_configure(Native Method)
at android.media.MediaCodec.configure(MediaCodec.java:1935)
at android.media.MediaCodec.configure(MediaCodec.java:1864)
at android.media.cts.VideoEncoderTest$VideoStorage.play(VideoEncoderTest.java:134)
at android.media.cts.VideoEncoderTest$VideoStorage.playAll(VideoEncoderTest.java:167)
at android.media.cts.VideoEncoderTest$VideoProcessorBase.playBack(VideoEncoderTest.java:404)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1145)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testExtreme(VideoEncoderTest.java:1018)
at android.media.cts.VideoEncoderTest.extreme(VideoEncoderTest.java:1738)
at android.media.cts.VideoEncoderTest.nearminmax(VideoEncoderTest.java:1720)
at android.media.cts.VideoEncoderTest.testGoogMpeg4FlexNearMinMax(VideoEncoderTest.java:1345)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogMpeg4FlexNearMinMin">
        <Failure message="android.media.MediaCodec$CodecException: Error 0xfffffc0e&#13;">
          <StackTrace>android.media.MediaCodec$CodecException: Error 0xfffffc0e
at android.media.MediaCodec.native_configure(Native Method)
at android.media.MediaCodec.configure(MediaCodec.java:1935)
at android.media.MediaCodec.configure(MediaCodec.java:1864)
at android.media.cts.VideoEncoderTest$VideoStorage.play(VideoEncoderTest.java:134)
at android.media.cts.VideoEncoderTest$VideoStorage.playAll(VideoEncoderTest.java:167)
at android.media.cts.VideoEncoderTest$VideoProcessorBase.playBack(VideoEncoderTest.java:404)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1145)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testExtreme(VideoEncoderTest.java:1018)
at android.media.cts.VideoEncoderTest.extreme(VideoEncoderTest.java:1738)
at android.media.cts.VideoEncoderTest.nearminmin(VideoEncoderTest.java:1716)
at android.media.cts.VideoEncoderTest.testGoogMpeg4FlexNearMinMin(VideoEncoderTest.java:1319)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogMpeg4SurfArbitraryH">
        <Failure message="android.media.MediaCodec$CodecException: Error 0xfffffc0e&#13;">
          <StackTrace>android.media.MediaCodec$CodecException: Error 0xfffffc0e
at android.media.MediaCodec.native_configure(Native Method)
at android.media.MediaCodec.configure(MediaCodec.java:1935)
at android.media.MediaCodec.configure(MediaCodec.java:1864)
at android.media.cts.VideoEncoderTest$VideoStorage.play(VideoEncoderTest.java:134)
at android.media.cts.VideoEncoderTest$VideoStorage.playAll(VideoEncoderTest.java:167)
at android.media.cts.VideoEncoderTest$VideoProcessorBase.playBack(VideoEncoderTest.java:404)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1145)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testArbitrary(VideoEncoderTest.java:1028)
at android.media.cts.VideoEncoderTest.arbitrary(VideoEncoderTest.java:1754)
at android.media.cts.VideoEncoderTest.arbitraryh(VideoEncoderTest.java:1768)
at android.media.cts.VideoEncoderTest.testGoogMpeg4SurfArbitraryH(VideoEncoderTest.java:1450)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogMpeg4SurfArbitraryW">
        <Failure message="android.media.MediaCodec$CodecException: Error 0xfffffc0e&#13;">
          <StackTrace>android.media.MediaCodec$CodecException: Error 0xfffffc0e
at android.media.MediaCodec.native_configure(Native Method)
at android.media.MediaCodec.configure(MediaCodec.java:1935)
at android.media.MediaCodec.configure(MediaCodec.java:1864)
at android.media.cts.VideoEncoderTest$VideoStorage.play(VideoEncoderTest.java:134)
at android.media.cts.VideoEncoderTest$VideoStorage.playAll(VideoEncoderTest.java:167)
at android.media.cts.VideoEncoderTest$VideoProcessorBase.playBack(VideoEncoderTest.java:404)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1145)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testArbitrary(VideoEncoderTest.java:1028)
at android.media.cts.VideoEncoderTest.arbitrary(VideoEncoderTest.java:1754)
at android.media.cts.VideoEncoderTest.arbitraryw(VideoEncoderTest.java:1764)
at android.media.cts.VideoEncoderTest.testGoogMpeg4SurfArbitraryW(VideoEncoderTest.java:1424)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogMpeg4SurfNearMaxMin">
        <Failure message="android.media.MediaCodec$CodecException: Error 0xfffffc0e&#13;">
          <StackTrace>android.media.MediaCodec$CodecException: Error 0xfffffc0e
at android.media.MediaCodec.native_configure(Native Method)
at android.media.MediaCodec.configure(MediaCodec.java:1935)
at android.media.MediaCodec.configure(MediaCodec.java:1864)
at android.media.cts.VideoEncoderTest$VideoStorage.play(VideoEncoderTest.java:134)
at android.media.cts.VideoEncoderTest$VideoStorage.playAll(VideoEncoderTest.java:167)
at android.media.cts.VideoEncoderTest$VideoProcessorBase.playBack(VideoEncoderTest.java:404)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1145)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testExtreme(VideoEncoderTest.java:1018)
at android.media.cts.VideoEncoderTest.extreme(VideoEncoderTest.java:1738)
at android.media.cts.VideoEncoderTest.nearmaxmin(VideoEncoderTest.java:1724)
at android.media.cts.VideoEncoderTest.testGoogMpeg4SurfNearMaxMin(VideoEncoderTest.java:1372)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogMpeg4SurfNearMinMin">
        <Failure message="android.media.MediaCodec$CodecException: Error 0xfffffc0e&#13;">
          <StackTrace>android.media.MediaCodec$CodecException: Error 0xfffffc0e
at android.media.MediaCodec.native_configure(Native Method)
at android.media.MediaCodec.configure(MediaCodec.java:1935)
at android.media.MediaCodec.configure(MediaCodec.java:1864)
at android.media.cts.VideoEncoderTest$VideoStorage.play(VideoEncoderTest.java:134)
at android.media.cts.VideoEncoderTest$VideoStorage.playAll(VideoEncoderTest.java:167)
at android.media.cts.VideoEncoderTest$VideoProcessorBase.playBack(VideoEncoderTest.java:404)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1145)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testExtreme(VideoEncoderTest.java:1018)
at android.media.cts.VideoEncoderTest.extreme(VideoEncoderTest.java:1738)
at android.media.cts.VideoEncoderTest.nearminmin(VideoEncoderTest.java:1716)
at android.media.cts.VideoEncoderTest.testGoogMpeg4SurfNearMinMin(VideoEncoderTest.java:1320)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogVP8SurfArbitraryW">
        <Failure message="java.lang.RuntimeException: glUseProgram: glError 1285&#13;">
          <StackTrace>java.lang.RuntimeException: glUseProgram: glError 1285
at android.media.cts.TextureRender.checkGlError(TextureRender.java:245)
at android.media.cts.TextureRender.drawFrame(TextureRender.java:105)
at android.media.cts.OutputSurface.drawImage(OutputSurface.java:289)
at android.media.cts.VideoEncoderTest$SurfaceVideoProcessor.processLoop(VideoEncoderTest.java:727)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1142)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testArbitrary(VideoEncoderTest.java:1028)
at android.media.cts.VideoEncoderTest.arbitrary(VideoEncoderTest.java:1754)
at android.media.cts.VideoEncoderTest.arbitraryw(VideoEncoderTest.java:1764)
at android.media.cts.VideoEncoderTest.testGoogVP8SurfArbitraryW(VideoEncoderTest.java:1426)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogVP8SurfMinMin">
        <Failure message="java.lang.RuntimeException: glUseProgram: glError 1285&#13;">
          <StackTrace>java.lang.RuntimeException: glUseProgram: glError 1285
at android.media.cts.TextureRender.checkGlError(TextureRender.java:245)
at android.media.cts.TextureRender.drawFrame(TextureRender.java:105)
at android.media.cts.OutputSurface.drawImage(OutputSurface.java:289)
at android.media.cts.VideoEncoderTest$SurfaceVideoProcessor.processLoop(VideoEncoderTest.java:727)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1142)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testExtreme(VideoEncoderTest.java:1018)
at android.media.cts.VideoEncoderTest.extreme(VideoEncoderTest.java:1738)
at android.media.cts.VideoEncoderTest.minmin(VideoEncoderTest.java:1700)
at android.media.cts.VideoEncoderTest.testGoogVP8SurfMinMin(VideoEncoderTest.java:1218)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogVP9SurfArbitraryH">
        <Failure message="java.lang.RuntimeException: glUseProgram: glError 1285&#13;">
          <StackTrace>java.lang.RuntimeException: glUseProgram: glError 1285
at android.media.cts.TextureRender.checkGlError(TextureRender.java:245)
at android.media.cts.TextureRender.drawFrame(TextureRender.java:105)
at android.media.cts.OutputSurface.drawImage(OutputSurface.java:289)
at android.media.cts.VideoEncoderTest$SurfaceVideoProcessor.processLoop(VideoEncoderTest.java:727)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1142)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testArbitrary(VideoEncoderTest.java:1028)
at android.media.cts.VideoEncoderTest.arbitrary(VideoEncoderTest.java:1754)
at android.media.cts.VideoEncoderTest.arbitraryh(VideoEncoderTest.java:1768)
at android.media.cts.VideoEncoderTest.testGoogVP9SurfArbitraryH(VideoEncoderTest.java:1454)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogVP9SurfNearMinMax">
        <Failure message="java.lang.RuntimeException: glUseProgram: glError 1285&#13;">
          <StackTrace>java.lang.RuntimeException: glUseProgram: glError 1285
at android.media.cts.TextureRender.checkGlError(TextureRender.java:245)
at android.media.cts.TextureRender.drawFrame(TextureRender.java:105)
at android.media.cts.OutputSurface.drawImage(OutputSurface.java:289)
at android.media.cts.VideoEncoderTest$SurfaceVideoProcessor.processLoop(VideoEncoderTest.java:727)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1142)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testExtreme(VideoEncoderTest.java:1018)
at android.media.cts.VideoEncoderTest.extreme(VideoEncoderTest.java:1738)
at android.media.cts.VideoEncoderTest.nearminmax(VideoEncoderTest.java:1720)
at android.media.cts.VideoEncoderTest.testGoogVP9SurfNearMinMax(VideoEncoderTest.java:1350)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testGoogVP9SurfNearMinMin">
        <Failure message="java.lang.RuntimeException: glUseProgram: glError 1285&#13;">
          <StackTrace>java.lang.RuntimeException: glUseProgram: glError 1285
at android.media.cts.TextureRender.checkGlError(TextureRender.java:245)
at android.media.cts.TextureRender.drawFrame(TextureRender.java:105)
at android.media.cts.OutputSurface.drawImage(OutputSurface.java:289)
at android.media.cts.VideoEncoderTest$SurfaceVideoProcessor.processLoop(VideoEncoderTest.java:727)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1142)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testExtreme(VideoEncoderTest.java:1018)
at android.media.cts.VideoEncoderTest.extreme(VideoEncoderTest.java:1738)
at android.media.cts.VideoEncoderTest.nearminmin(VideoEncoderTest.java:1716)
at android.media.cts.VideoEncoderTest.testGoogVP9SurfNearMinMin(VideoEncoderTest.java:1324)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testH264Surf720p30fps4Mbps">
        <Failure message="junit.framework.AssertionFailedError: received error on OMX.MTK.VIDEO.ENCODER.AVC: android.media.MediaCodec$CodecException: Error 0x80001009&#13;">
          <StackTrace>junit.framework.AssertionFailedError: received error on OMX.MTK.VIDEO.ENCODER.AVC: android.media.MediaCodec$CodecException: Error 0x80001009
at junit.framework.Assert.fail(Assert.java:50)
at android.media.cts.VideoEncoderTest$SurfaceVideoProcessor.onError(VideoEncoderTest.java:845)
at android.media.MediaCodec$EventHandler.handleCallback(MediaCodec.java:1681)
at android.media.MediaCodec$EventHandler.handleMessage(MediaCodec.java:1621)
at android.os.Handler.dispatchMessage(Handler.java:105)
at android.os.Looper.loop(Looper.java:164)
at android.app.ActivityThread.main(ActivityThread.java:6541)
at java.lang.reflect.Method.invoke(Native Method)
at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:240)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:767)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOtherH264FlexArbitraryH">
        <Failure message="junit.framework.AssertionFailedError: could not get encoder image for {color-format=21, slice-height=1200, image-data=java.nio.HeapByteBuffer[pos=0 lim=104 cap=104], mime=video/raw, width=256, stride=256, height=1200}&#13;">
          <StackTrace>junit.framework.AssertionFailedError: could not get encoder image for {color-format=21, slice-height=1200, image-data=java.nio.HeapByteBuffer[pos=0 lim=104 cap=104], mime=video/raw, width=256, stride=256, height=1200}
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertNotNull(Assert.java:218)
at android.media.cts.VideoEncoderTest$VideoProcessor.renderDecodedBuffer(VideoEncoderTest.java:588)
at android.media.cts.VideoEncoderTest$VideoProcessor.processLoop(VideoEncoderTest.java:512)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1142)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testArbitrary(VideoEncoderTest.java:1028)
at android.media.cts.VideoEncoderTest.arbitrary(VideoEncoderTest.java:1754)
at android.media.cts.VideoEncoderTest.arbitraryh(VideoEncoderTest.java:1768)
at android.media.cts.VideoEncoderTest.testOtherH264FlexArbitraryH(VideoEncoderTest.java:1458)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOtherH264SurfNearMaxMax">
        <Failure message="junit.framework.AssertionFailedError: could not configure encoder for supported size&#13;">
          <StackTrace>junit.framework.AssertionFailedError: could not configure encoder for supported size
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.media.cts.VideoEncoderTest$SurfaceVideoProcessor.processLoop(VideoEncoderTest.java:678)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1142)
at android.media.cts.VideoEncoderTest$Encoder.test(VideoEncoderTest.java:1125)
at android.media.cts.VideoEncoderTest$Encoder.testExtreme(VideoEncoderTest.java:1018)
at android.media.cts.VideoEncoderTest.extreme(VideoEncoderTest.java:1738)
at android.media.cts.VideoEncoderTest.nearmaxmax(VideoEncoderTest.java:1728)
at android.media.cts.VideoEncoderTest.testOtherH264SurfNearMaxMax(VideoEncoderTest.java:1407)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOtherH264SurfNearMaxMin">
        <Failure message="junit.framework.AssertionFailedError: received error on OMX.MTK.VIDEO.ENCODER.AVC: android.media.MediaCodec$CodecException: Error 0x80001009&#13;">
          <StackTrace>junit.framework.AssertionFailedError: received error on OMX.MTK.VIDEO.ENCODER.AVC: android.media.MediaCodec$CodecException: Error 0x80001009
at junit.framework.Assert.fail(Assert.java:50)
at android.media.cts.VideoEncoderTest$SurfaceVideoProcessor.onError(VideoEncoderTest.java:845)
at android.media.MediaCodec$EventHandler.handleCallback(MediaCodec.java:1681)
at android.media.MediaCodec$EventHandler.handleMessage(MediaCodec.java:1621)
at android.os.Handler.dispatchMessage(Handler.java:105)
at android.os.Looper.loop(Looper.java:164)
at android.app.ActivityThread.main(ActivityThread.java:6541)
at java.lang.reflect.Method.invoke(Native Method)
at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:240)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:767)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOtherH264SurfNearMinMin">
        <Failure message="junit.framework.AssertionFailedError: received error on OMX.MTK.VIDEO.ENCODER.AVC: android.media.MediaCodec$CodecException: Error 0x80001009&#13;">
          <StackTrace>junit.framework.AssertionFailedError: received error on OMX.MTK.VIDEO.ENCODER.AVC: android.media.MediaCodec$CodecException: Error 0x80001009
at junit.framework.Assert.fail(Assert.java:50)
at android.media.cts.VideoEncoderTest$SurfaceVideoProcessor.onError(VideoEncoderTest.java:845)
at android.media.MediaCodec$EventHandler.handleCallback(MediaCodec.java:1681)
at android.media.MediaCodec$EventHandler.handleMessage(MediaCodec.java:1621)
at android.os.Handler.dispatchMessage(Handler.java:105)
at android.os.Looper.loop(Looper.java:164)
at android.app.ActivityThread.main(ActivityThread.java:6541)
at java.lang.reflect.Method.invoke(Native Method)
at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:240)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:767)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.media.cts.VpxEncoderTest">
      <Test result="fail" name="testEncoderQualityVP8">
        <Failure message="java.lang.RuntimeException: Target bitrates: 300000, 500000. Actual PSNRs: 16.837912951394483, 16.650100659886096&#13;">
          <StackTrace>java.lang.RuntimeException: Target bitrates: 300000, 500000. Actual PSNRs: 16.837912951394483, 16.650100659886096
at android.media.cts.VpxEncoderTest.internalTestEncoderQuality(VpxEncoderTest.java:475)
at android.media.cts.VpxEncoderTest.testEncoderQualityVP8(VpxEncoderTest.java:544)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
  </Module>
  <Module name="CtsNetTestCases" abi="armeabi-v7a" runtime="1196157" done="true" pass="162">
    <TestCase name="android.net.cts.DnsTest">
      <Test result="fail" name="testDnsWorks">
        <Failure message="junit.framework.AssertionFailedError: [RERUN] DNS could not resolve ipv6.google.com, check the network supports IPv6&#13;">
          <StackTrace>junit.framework.AssertionFailedError: [RERUN] DNS could not resolve ipv6.google.com, check the network supports IPv6
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.net.cts.DnsTest.testDnsWorks(DnsTest.java:91)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.net.wifi.cts.WifiManagerTest">
      <Test result="fail" name="testWifiWatchdog">
        <Failure message="junit.framework.AssertionFailedError&#13;">
          <StackTrace>junit.framework.AssertionFailedError
at junit.framework.Assert.fail(Assert.java:48)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertTrue(Assert.java:27)
at android.net.wifi.cts.WifiManagerTest.testWifiWatchdog(WifiManagerTest.java:576)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    </Module>
  <Module name="CtsOsTestCases" abi="armeabi-v7a" runtime="316063" done="true" pass="449">
    <TestCase name="android.os.cts.BuildVersionTest">
      <Test result="fail" name="testBuildFingerprint">
        <Failure message="junit.framework.ComparisonFailure: Tag expected:&lt;[release]-keys&gt; but was:&lt;[test]-keys&gt;&#13;">
          <StackTrace>junit.framework.ComparisonFailure: Tag expected:&lt;[release]-keys&gt; but was:&lt;[test]-keys&gt;
at junit.framework.Assert.assertEquals(Assert.java:85)
at android.os.cts.BuildVersionTest.testBuildFingerprint(BuildVersionTest.java:87)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    </Module>
  <Module name="CtsPermission2TestCases" abi="armeabi-v7a" runtime="3122" done="true" pass="13">
    <TestCase name="android.permission2.cts.PermissionPolicyTest">
      <Test result="fail" name="testPlatformPermissionPolicyUnaltered">
        <Failure message="junit.framework.AssertionFailedError: Cannot define permission in android namespace:android.permission.HIDE_NON_SYSTEM_OVERLAY_WINDOWS&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Cannot define permission in android namespace:android.permission.HIDE_NON_SYSTEM_OVERLAY_WINDOWS
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertFalse(Assert.java:34)
at android.permission2.cts.PermissionPolicyTest.testPlatformPermissionPolicyUnaltered(PermissionPolicyTest.java:109)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    </Module>
  <Module name="CtsPermissionTestCases" abi="armeabi-v7a" runtime="13979" done="true" pass="152">
    <TestCase name="android.permission.cts.FileSystemPermissionTest">
      <Test result="fail" name="testDevPortSane">
        <Failure message="junit.framework.AssertionFailedError&#13;">
          <StackTrace>junit.framework.AssertionFailedError
at junit.framework.Assert.fail(Assert.java:48)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertFalse(Assert.java:34)
at junit.framework.Assert.assertFalse(Assert.java:41)
at android.permission.cts.FileSystemPermissionTest.testDevPortSane(FileSystemPermissionTest.java:187)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    </Module>
  <Module name="CtsProviderTestCases" abi="armeabi-v7a" runtime="531933" done="true" pass="340">
    <TestCase name="android.provider.cts.MediaStoreIntentsTest">
      <Test result="fail" name="testViewImageFile">
        <Failure message="junit.framework.AssertionFailedError: No ResolveInfo found for Intent { act=android.intent.action.VIEW dat=http://example.com/image typ=image/bmp }&#13;">
          <StackTrace>junit.framework.AssertionFailedError: No ResolveInfo found for Intent { act=android.intent.action.VIEW dat=http://example.com/image typ=image/bmp }
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.provider.cts.MediaStoreIntentsTest.assertCanBeHandled(MediaStoreIntentsTest.java:36)
at android.provider.cts.MediaStoreIntentsTest.testViewImageFile(MediaStoreIntentsTest.java:85)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testViewVideoFile">
        <Failure message="junit.framework.AssertionFailedError: No ResolveInfo found for Intent { act=android.intent.action.VIEW dat=http://example.com/video typ=video/mpeg4 }&#13;">
          <StackTrace>junit.framework.AssertionFailedError: No ResolveInfo found for Intent { act=android.intent.action.VIEW dat=http://example.com/video typ=video/mpeg4 }
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.provider.cts.MediaStoreIntentsTest.assertCanBeHandled(MediaStoreIntentsTest.java:36)
at android.provider.cts.MediaStoreIntentsTest.testViewVideoFile(MediaStoreIntentsTest.java:103)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.provider.cts.contacts.ContactsContractIntentsTest">
      <Test result="fail" name="testPickContactDir">
        <Failure message="junit.framework.AssertionFailedError: No ResolveInfo found for Intent { act=android.intent.action.PICK dat=content://com.android.contacts/contacts }&#13;">
          <StackTrace>junit.framework.AssertionFailedError: No ResolveInfo found for Intent { act=android.intent.action.PICK dat=content://com.android.contacts/contacts }
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.provider.cts.contacts.ContactsContractIntentsTest.assertCanBeHandled(ContactsContractIntentsTest.java:35)
at android.provider.cts.contacts.ContactsContractIntentsTest.testPickContactDir(ContactsContractIntentsTest.java:48)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testViewContactDir">
        <Failure message="junit.framework.AssertionFailedError: No ResolveInfo found for Intent { act=android.intent.action.VIEW dat=content://com.android.contacts/contacts }&#13;">
          <StackTrace>junit.framework.AssertionFailedError: No ResolveInfo found for Intent { act=android.intent.action.VIEW dat=content://com.android.contacts/contacts }
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.provider.cts.contacts.ContactsContractIntentsTest.assertCanBeHandled(ContactsContractIntentsTest.java:35)
at android.provider.cts.contacts.ContactsContractIntentsTest.testViewContactDir(ContactsContractIntentsTest.java:42)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.provider.cts.contacts.ContactsContract_ContactsTest">
      <Test result="fail" name="testContentUri">
        <Failure message="junit.framework.AssertionFailedError: Device does not support the activity intent: Intent { act=android.intent.action.VIEW dat=content://com.android.contacts/contacts }&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Device does not support the activity intent: Intent { act=android.intent.action.VIEW dat=content://com.android.contacts/contacts }
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertFalse(Assert.java:34)
at android.provider.cts.contacts.ContactsContract_ContactsTest.testContentUri(ContactsContract_ContactsTest.java:122)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    </Module>
  <Module name="CtsSecurityHostTestCases" abi="armeabi-v7a" runtime="424084" done="true" pass="636">
    <TestCase name="android.cts.security.SELinuxNeverallowRulesTest">
      <Test result="fail" name="testNeverallowRules348">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {          coredomain          -init          -modprobe      } vendor_toolbox_exec:file { entrypoint execute execute_no_trans };
libsepol.report_failure: neverallow violated by allow adbd vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow audioserver vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow blkid vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow blkid_untrusted vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow bluetooth vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow bootanim vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow bootstat vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow bufferhubd vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow cameraserver vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow charger vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow clatd vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow cppreopts vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow crash_dump vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow dex2oat vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow dhcp vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow dnsmasq vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow drmserver vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow dumpstate vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow ephemeral_app vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow fingerprintd vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow fsck vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow fsck_untrusted vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow gatekeeperd vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow healthd vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow hwservicemanager vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow idmap vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow incident vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow incidentd vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow inputflinger vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow install_recovery vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow installd vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow isolated_app vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow kernel vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow keystore vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow lmkd vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow logd vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow logpersist vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow mdnsd vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow mediadrmserver vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow mediaextractor vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow mediametrics vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow mediaserver vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow mtp vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow netd vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow netutils_wrapper vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow nfc vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow otapreopt_chroot vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow otapreopt_slot vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow performanced vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow platform_app vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow postinstall vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow postinstall_dexopt vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow ppp vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow preopt2cachename vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow priv_app vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow profman vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow racoon vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow radio vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow recovery vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow recovery_persist vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow recovery_refresh vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow runas vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow sdcardd vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow servicemanager vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow sgdisk vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow shared_relro vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow shell vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow slideshow vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow surfaceflinger vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow system_app vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow system_server vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow tombstoned vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow toolbox vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow tzdatacheck vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow ueventd vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow uncrypt vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow untrusted_app vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow untrusted_app_25 vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow untrusted_v2_app vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow update_engine vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow update_verifier vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow vdc vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow virtual_touchpad vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow vold vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow vr_hwc vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow watchdogd vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow webview_zygote vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow wificond vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow zygote vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow dexoptanalyzer vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow hal_allocator_default vendor_toolbox_exec:file { execute };
libsepol.report_failure: neverallow violated by allow storaged vendor_toolbox_exec:file { execute };
libsepol.check_assertions: 92 neverallow failures occurred

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules348(SELinuxNeverallowRulesTest.java:10544)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules440">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow { untrusted_app_all untrusted_app_25 untrusted_app ephemeral_app isolated_app } {      halserverdomain      -coredomain      -hal_configstore_server      -hal_graphics_allocator_server      -binder_in_vendor_violators     }:binder { call transfer };
Warning!  Type or attribute binder_in_vendor_violators used in neverallow undefined in policy being checked.

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules440(SELinuxNeverallowRulesTest.java:13304)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules456">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow ephemeral_app app_data_file:file { execute execute_no_trans };
libsepol.report_failure: neverallow violated by allow ephemeral_app app_data_file:file { execute };
libsepol.check_assertions: 1 neverallow failures occurred

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules456(SELinuxNeverallowRulesTest.java:13784)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules72">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {      domain      -coredomain      -appdomain      -binder_in_vendor_violators     } binder_device:chr_file { { getattr open read ioctl lock } { open append write lock } };
Warning!  Type or attribute binder_in_vendor_violators used in neverallow undefined in policy being checked.
libsepol.report_failure: neverallow violated by allow vpud_native binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_wifi_offload_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_bluetooth_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow wmt_launcher binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_vr_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_sensors_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_tv_input_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_dumpstate_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow mediacodec binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_configstore_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_vr_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hostapd binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow fastrvc_native binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow mtk_agpsd binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_dumpstate_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow qemud binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow vms binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_graphics_allocator_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow mediacodec binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow perfprofd binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_tv_input_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_tv_cec_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow mdpd_native binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_camera_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_ir_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_health_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow vehicle_monitor_service binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow vms binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_wifi_supplicant_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow vendor_modprobe binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_audio_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_contexthub_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow fastrvc_native binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow tee binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_fingerprint_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow rild binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_bootctl_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_gnss_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_usb_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_bluetooth_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow wifi2agps binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_audio_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow vehicle_monitor_service binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow mnld binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_camera_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_wifi_supplicant_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow su binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_keymaster_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_bootctl_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_vibrator_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow wifi2agps binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_wifi_offload_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_usb_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_wifi_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_graphics_composer_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow vendor_modprobe binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_contexthub_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow mtk_agpsd binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_wifi_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_nfc_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow vehicle_network_service binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow vehicle_network_service binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_health_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hostapd binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_light_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_tv_cec_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_nfc_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_graphics_allocator_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow mnld binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_power_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow mdpd_native binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_power_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_sensors_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_fingerprint_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_gatekeeper_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_vehicle_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow su binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow MPED binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow perfprofd binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow wmt_loader binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow wmt_loader binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_vehicle_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_thermal_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_gatekeeper_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow wmt_launcher binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_light_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_drm_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow MPED binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_thermal_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow qemud binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_vibrator_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_memtrack_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_gnss_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow tee binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_configstore_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow vpud_native binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_drm_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow rild binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_memtrack_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_ir_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_keymaster_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.report_failure: neverallow violated by allow hal_graphics_composer_default binder_device:chr_file { ioctl read write getattr lock append open };
libsepol.check_assertions: 102 neverallow failures occurred

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules72(SELinuxNeverallowRulesTest.java:2264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules73">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {      domain      -coredomain      -appdomain       -binder_in_vendor_violators     } service_manager_type:service_manager find;
Warning!  Type or attribute binder_in_vendor_violators used in neverallow undefined in policy being checked.
libsepol.report_failure: neverallow violated by allow mediacodec mediametrics_service:service_manager { find };
libsepol.report_failure: neverallow violated by allow mediacodec mediacodec_service:service_manager { find };
libsepol.report_failure: neverallow violated by allow mediacodec mediametrics_service:service_manager { find };
libsepol.report_failure: neverallow violated by allow mediacodec permission_service:service_manager { find };
libsepol.report_failure: neverallow violated by allow mediacodec keystore_service:service_manager { find };
libsepol.report_failure: neverallow violated by allow mediacodec surfaceflinger_service:service_manager { find };
libsepol.report_failure: neverallow violated by allow mediacodec mediacodec_service:service_manager { find };
libsepol.report_failure: neverallow violated by allow mediacodec surfaceflinger_service:service_manager { find };
libsepol.report_failure: neverallow violated by allow MPED sensorservice_service:service_manager { find };
libsepol.check_assertions: 9 neverallow failures occurred

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules73(SELinuxNeverallowRulesTest.java:2294)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules75">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {      domain      -coredomain      -appdomain      -binder_in_vendor_violators     } servicemanager:binder { call transfer };
Warning!  Type or attribute binder_in_vendor_violators used in neverallow undefined in policy being checked.
libsepol.report_failure: neverallow violated by allow mediacodec servicemanager:binder { call transfer };
libsepol.report_failure: neverallow violated by allow vms servicemanager:binder { call transfer };
libsepol.report_failure: neverallow violated by allow MPED servicemanager:binder { call transfer };
libsepol.report_failure: neverallow violated by allow mediacodec servicemanager:binder { call transfer };
libsepol.check_assertions: 4 neverallow failures occurred

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules75(SELinuxNeverallowRulesTest.java:2354)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules76">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow binder_in_vendor_violators unlabeled:service_manager list ;
Warning!  Type or attribute binder_in_vendor_violators used in neverallow undefined in policy being checked.

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules76(SELinuxNeverallowRulesTest.java:2384)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules81">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {      coredomain      -init      -adbd    } {      domain      -coredomain      -socket_between_core_and_vendor_violators    }:{ socket tcp_socket udp_socket rawip_socket netlink_socket packet_socket key_socket unix_stream_socket unix_dgram_socket appletalk_socket netlink_route_socket netlink_tcpdiag_socket netlink_nflog_socket netlink_xfrm_socket netlink_selinux_socket netlink_audit_socket netlink_dnrt_socket netlink_kobject_uevent_socket tun_socket netlink_iscsi_socket netlink_fib_lookup_socket netlink_connector_socket netlink_netfilter_socket netlink_generic_socket netlink_scsitransport_socket netlink_rdma_socket netlink_crypto_socket sctp_socket icmp_socket ax25_socket ipx_socket netrom_socket atmpvc_socket x25_socket rose_socket decnet_socket atmsvc_socket rds_socket irda_socket pppox_socket llc_socket can_socket tipc_socket bluetooth_socket iucv_socket rxrpc_socket isdn_socket phonet_socket ieee802154_socket caif_socket alg_socket nfc_socket vsock_socket kcm_socket qipcrtr_socket } { connect sendto };
Warning!  Type or attribute socket_between_core_and_vendor_violators used in neverallow undefined in policy being checked.

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules81(SELinuxNeverallowRulesTest.java:2534)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules82">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {      coredomain      -init      -adbd    } {      domain      -coredomain      -socket_between_core_and_vendor_violators    }:unix_stream_socket connectto;
Warning!  Type or attribute socket_between_core_and_vendor_violators used in neverallow undefined in policy being checked.
libsepol.report_failure: neverallow violated by allow radio rild:unix_stream_socket { connectto };
libsepol.report_failure: neverallow violated by allow radio rild:unix_stream_socket { connectto };
libsepol.check_assertions: 2 neverallow failures occurred

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules82(SELinuxNeverallowRulesTest.java:2564)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules83">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {      domain      -coredomain      -appdomain      -socket_between_core_and_vendor_violators    } {      coredomain      -logd       -netd       -mdnsd              -init      -incidentd       -tombstoned     }:{ socket tcp_socket udp_socket rawip_socket netlink_socket packet_socket key_socket unix_stream_socket unix_dgram_socket appletalk_socket netlink_route_socket netlink_tcpdiag_socket netlink_nflog_socket netlink_xfrm_socket netlink_selinux_socket netlink_audit_socket netlink_dnrt_socket netlink_kobject_uevent_socket tun_socket netlink_iscsi_socket netlink_fib_lookup_socket netlink_connector_socket netlink_netfilter_socket netlink_generic_socket netlink_scsitransport_socket netlink_rdma_socket netlink_crypto_socket sctp_socket icmp_socket ax25_socket ipx_socket netrom_socket atmpvc_socket x25_socket rose_socket decnet_socket atmsvc_socket rds_socket irda_socket pppox_socket llc_socket can_socket tipc_socket bluetooth_socket iucv_socket rxrpc_socket isdn_socket phonet_socket ieee802154_socket caif_socket alg_socket nfc_socket vsock_socket kcm_socket qipcrtr_socket } { connect sendto };
Warning!  Type or attribute socket_between_core_and_vendor_violators used in neverallow undefined in policy being checked.
libsepol.report_failure: neverallow violated by allow MPED system_server:unix_dgram_socket { sendto };
libsepol.report_failure: neverallow violated by allow MPED system_server:unix_stream_socket { connect };
libsepol.report_failure: neverallow violated by allow mnld system_server:unix_dgram_socket { sendto };
libsepol.check_assertions: 3 neverallow failures occurred

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules83(SELinuxNeverallowRulesTest.java:2594)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules84">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {      domain      -coredomain      -appdomain      -socket_between_core_and_vendor_violators    } {      coredomain      -logd       -netd       -mdnsd              -init      -incidentd       -tombstoned     }:unix_stream_socket connectto;
Warning!  Type or attribute socket_between_core_and_vendor_violators used in neverallow undefined in policy being checked.
libsepol.report_failure: neverallow violated by allow mnld system_server:unix_stream_socket { connectto };
libsepol.report_failure: neverallow violated by allow mnld system_app:unix_stream_socket { connectto };
libsepol.report_failure: neverallow violated by allow mnld platform_app:unix_stream_socket { connectto };
libsepol.check_assertions: 3 neverallow failures occurred

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules84(SELinuxNeverallowRulesTest.java:2624)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules85">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow socket_between_core_and_vendor_violators unlabeled:service_manager list ;
Warning!  Type or attribute socket_between_core_and_vendor_violators used in neverallow undefined in policy being checked.

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules85(SELinuxNeverallowRulesTest.java:2654)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules86">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {      domain      -coredomain      -netdomain      -socket_between_core_and_vendor_violators    } netd:{ socket tcp_socket udp_socket rawip_socket netlink_socket packet_socket key_socket unix_stream_socket unix_dgram_socket appletalk_socket netlink_route_socket netlink_tcpdiag_socket netlink_nflog_socket netlink_xfrm_socket netlink_selinux_socket netlink_audit_socket netlink_dnrt_socket netlink_kobject_uevent_socket tun_socket netlink_iscsi_socket netlink_fib_lookup_socket netlink_connector_socket netlink_netfilter_socket netlink_generic_socket netlink_scsitransport_socket netlink_rdma_socket netlink_crypto_socket sctp_socket icmp_socket ax25_socket ipx_socket netrom_socket atmpvc_socket x25_socket rose_socket decnet_socket atmsvc_socket rds_socket irda_socket pppox_socket llc_socket can_socket tipc_socket bluetooth_socket iucv_socket rxrpc_socket isdn_socket phonet_socket ieee802154_socket caif_socket alg_socket nfc_socket vsock_socket kcm_socket qipcrtr_socket } { connect sendto };
Warning!  Type or attribute socket_between_core_and_vendor_violators used in neverallow undefined in policy being checked.

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules86(SELinuxNeverallowRulesTest.java:2684)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules87">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {      domain      -coredomain      -netdomain      -socket_between_core_and_vendor_violators    } netd:unix_stream_socket connectto;
Warning!  Type or attribute socket_between_core_and_vendor_violators used in neverallow undefined in policy being checked.

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules87(SELinuxNeverallowRulesTest.java:2714)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules88">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {      domain      -coredomain      -appdomain       -socket_between_core_and_vendor_violators    } {      coredomain_socket      core_data_file_type      unlabeled     }:sock_file ~{ append getattr ioctl read write };
Warning!  Type or attribute socket_between_core_and_vendor_violators used in neverallow undefined in policy being checked.
Warning!  Type or attribute coredomain_socket used in neverallow undefined in policy being checked.
Warning!  Type or attribute core_data_file_type used in neverallow undefined in policy being checked.

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules88(SELinuxNeverallowRulesTest.java:2744)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules89">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {      appdomain      -coredomain    } {      coredomain_socket      unlabeled       core_data_file_type      -app_data_file      -pdx_endpoint_socket_type       -pdx_channel_socket_type     }:sock_file ~{ append getattr ioctl read write };
Warning!  Type or attribute coredomain_socket used in neverallow undefined in policy being checked.
Warning!  Type or attribute core_data_file_type used in neverallow undefined in policy being checked.
Warning!  Type or attribute pdx_endpoint_socket_type used in neverallow undefined in policy being checked.
Warning!  Type or attribute pdx_channel_socket_type used in neverallow undefined in policy being checked.

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules89(SELinuxNeverallowRulesTest.java:2774)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules90">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {      pdx_endpoint_socket_type      pdx_channel_socket_type    } unlabeled:service_manager list;
Warning!  Type or attribute pdx_endpoint_socket_type used in neverallow undefined in policy being checked.
Warning!  Type or attribute pdx_channel_socket_type used in neverallow undefined in policy being checked.

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules90(SELinuxNeverallowRulesTest.java:2804)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules91">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {      coredomain      -init      -ueventd      -socket_between_core_and_vendor_violators    } {      file_type      dev_type      -coredomain_socket      -core_data_file_type      -unlabeled    }:sock_file ~{ append getattr ioctl read write };
Warning!  Type or attribute socket_between_core_and_vendor_violators used in neverallow undefined in policy being checked.
Warning!  Type or attribute coredomain_socket used in neverallow undefined in policy being checked.
Warning!  Type or attribute core_data_file_type used in neverallow undefined in policy being checked.
libsepol.report_failure: neverallow violated by allow installd shell_data_file:sock_file { create setattr lock relabelfrom relabelto unlink rename open };
libsepol.report_failure: neverallow violated by allow drmserver apk_data_file:sock_file { unlink };
libsepol.report_failure: neverallow violated by allow shared_relro pdx_performance_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow surfaceflinger pdx_bufferhub_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow keystore keystore_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow system_server wpa_socket:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow installd app_data_file:sock_file { create setattr lock relabelfrom relabelto unlink rename open };
libsepol.report_failure: neverallow violated by allow bluetooth bluetooth_socket:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow priv_app pdx_display_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow surfaceflinger pdx_performance_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow system_server system_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow untrusted_app pdx_display_vsync_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow shared_relro app_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow shell shell_data_file:sock_file { create unlink };
libsepol.report_failure: neverallow violated by allow installd shell_data_file:sock_file { create setattr lock relabelfrom relabelto unlink rename open };
libsepol.report_failure: neverallow violated by allow untrusted_app_25 pdx_performance_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow priv_app pdx_performance_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow nfc pdx_display_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow system_app pdx_display_vsync_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow untrusted_app_25 pdx_display_manager_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow installd system_data_file:sock_file { relabelfrom unlink };
libsepol.report_failure: neverallow violated by allow ephemeral_app app_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow system_server adbd_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow untrusted_app_25 pdx_display_vsync_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow platform_app pdx_display_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow untrusted_v2_app pdx_performance_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow bufferhubd pdx_performance_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow installd nfc_data_file:sock_file { create setattr lock relabelfrom relabelto unlink rename open };
libsepol.report_failure: neverallow violated by allow installd nfc_data_file:sock_file { create setattr lock relabelfrom relabelto unlink rename open };
libsepol.report_failure: neverallow violated by allow nfc nfc_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow bluetooth pdx_display_manager_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow shared_relro pdx_display_manager_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow system_server system_ndebug_socket:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow bluetooth app_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow shell app_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow drmserver drmserver_socket:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow system_app pdx_display_manager_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow nfc pdx_display_manager_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow bluetooth pdx_display_vsync_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow untrusted_app pdx_display_manager_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow bluetooth pdx_display_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow shared_relro pdx_display_vsync_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow untrusted_app_25 app_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow installd app_data_file:sock_file { create setattr lock relabelfrom relabelto unlink rename open };
libsepol.report_failure: neverallow violated by allow keystore keystore_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow untrusted_v2_app app_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow radio app_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow untrusted_app pdx_performance_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow netutils_wrapper netd_socket:sock_file { open };
libsepol.report_failure: neverallow violated by allow system_server wpa_socket:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow platform_app app_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow shell pdx_display_vsync_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow untrusted_v2_app pdx_display_manager_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow shell pdx_performance_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow bluetooth pdx_performance_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow drmserver drmserver_socket:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow installd radio_data_file:sock_file { create setattr lock relabelfrom relabelto unlink rename open };
libsepol.report_failure: neverallow violated by allow untrusted_app_25 pdx_display_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow system_server mdns_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow platform_app pdx_display_vsync_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow installd bluetooth_data_file:sock_file { create setattr lock relabelfrom relabelto unlink rename open };
libsepol.report_failure: neverallow violated by allow drmserver apk_data_file:sock_file { unlink };
libsepol.report_failure: neverallow violated by allow platform_app pdx_performance_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow untrusted_v2_app pdx_display_vsync_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow untrusted_v2_app pdx_display_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow bluetooth bluetooth_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow bufferhubd pdx_performance_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow installd system_app_data_file:sock_file { create setattr lock relabelfrom relabelto unlink rename open };
libsepol.report_failure: neverallow violated by allow shell pdx_display_manager_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow priv_app pdx_display_vsync_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow system_app pdx_performance_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow installd radio_data_file:sock_file { create setattr lock relabelfrom relabelto unlink rename open };
libsepol.report_failure: neverallow violated by allow system_app pdx_display_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow shell pdx_display_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow shared_relro pdx_display_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow vr_hwc pdx_display_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow nfc pdx_performance_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow installd system_data_file:sock_file { relabelfrom unlink };
libsepol.report_failure: neverallow violated by allow vr_hwc pdx_display_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow priv_app app_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow system_app app_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow priv_app pdx_display_manager_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow untrusted_app pdx_display_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow nfc app_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow untrusted_app app_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow radio pdx_performance_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow radio pdx_display_vsync_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow radio pdx_display_client_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow installd system_app_data_file:sock_file { create setattr lock relabelfrom relabelto unlink rename open };
libsepol.report_failure: neverallow violated by allow radio radio_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow platform_app pdx_display_manager_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow radio pdx_display_manager_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow radio radio_data_file:sock_file { create setattr lock unlink rename open };
libsepol.report_failure: neverallow violated by allow nfc pdx_display_vsync_endpoint_socket:sock_file { lock open };
libsepol.report_failure: neverallow violated by allow installd bluetooth_data_file:sock_file { create setattr lock relabelfrom relabelto unlink rename open };
libsepol.check_assertions: 95 neverallow failures occurred

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules91(SELinuxNeverallowRulesTest.java:2834)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules92">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {          coredomain          -appdomain          -dex2oat          -idmap          -init          -installd          -postinstall_dexopt          -system_server      } vendor_app_file:dir { open read getattr search };
libsepol.report_failure: neverallow violated by allow adbd vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow audioserver vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow blkid vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow blkid_untrusted vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow bootanim vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow bootstat vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow bufferhubd vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow cameraserver vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow charger vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow clatd vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow cppreopts vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow crash_dump vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow dhcp vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow dnsmasq vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow drmserver vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow dumpstate vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow fingerprintd vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow fsck vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow fsck_untrusted vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow gatekeeperd vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow healthd vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow hwservicemanager vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow incident vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow incidentd vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow inputflinger vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow install_recovery vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow kernel vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow keystore vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow lmkd vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow logd vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow logpersist vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow mdnsd vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow mediadrmserver vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow mediaextractor vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow mediametrics vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow mediaserver vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow modprobe vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow mtp vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow netd vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow netutils_wrapper vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow otapreopt_chroot vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow otapreopt_slot vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow performanced vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow postinstall vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow ppp vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow preopt2cachename vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow profman vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow racoon vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow recovery vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow recovery_persist vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow recovery_refresh vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow runas vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow sdcardd vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow servicemanager vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow sgdisk vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow slideshow vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow surfaceflinger vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow tombstoned vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow toolbox vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow tzdatacheck vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow ueventd vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow uncrypt vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow update_engine vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow update_verifier vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow vdc vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow virtual_touchpad vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow vold vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow vr_hwc vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow watchdogd vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow webview_zygote vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow wificond vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow zygote vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow dexoptanalyzer vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow hal_allocator_default vendor_app_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow storaged vendor_app_file:dir { getattr search };
libsepol.check_assertions: 75 neverallow failures occurred

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules92(SELinuxNeverallowRulesTest.java:2864)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules93">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {          coredomain          -appdomain          -dex2oat          -idmap          -init          -installd          -postinstall_dexopt          -system_server      } vendor_app_file:{ file lnk_file } { getattr open read ioctl lock };
libsepol.report_failure: neverallow violated by allow adbd vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow audioserver vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow blkid vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow blkid_untrusted vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow bootanim vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow bootstat vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow bufferhubd vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow cameraserver vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow charger vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow clatd vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow cppreopts vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow crash_dump vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow dhcp vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow dnsmasq vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow drmserver vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow dumpstate vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow fingerprintd vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow fsck vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow fsck_untrusted vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow gatekeeperd vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow healthd vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow hwservicemanager vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow incident vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow incidentd vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow inputflinger vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow install_recovery vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow kernel vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow keystore vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow lmkd vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow logd vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow logpersist vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow mdnsd vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow mediadrmserver vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow mediaextractor vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow mediametrics vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow mediaserver vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow modprobe vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow mtp vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow netd vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow netutils_wrapper vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow otapreopt_chroot vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow otapreopt_slot vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow performanced vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow postinstall vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow ppp vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow preopt2cachename vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow profman vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow racoon vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow recovery vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow recovery_persist vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow recovery_refresh vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow runas vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow sdcardd vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow servicemanager vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow sgdisk vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow slideshow vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow surfaceflinger vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow tombstoned vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow toolbox vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow tzdatacheck vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow ueventd vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow uncrypt vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow update_engine vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow update_verifier vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow vdc vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow virtual_touchpad vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow vold vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow vr_hwc vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow watchdogd vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow webview_zygote vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow wificond vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow zygote vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow dexoptanalyzer vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow hal_allocator_default vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow storaged vendor_app_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow adbd vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow audioserver vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow blkid vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow blkid_untrusted vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow bootanim vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow bootstat vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow bufferhubd vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow cameraserver vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow charger vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow clatd vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow cppreopts vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow crash_dump vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow dhcp vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow dnsmasq vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow drmserver vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow dumpstate vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow fingerprintd vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow fsck vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow fsck_untrusted vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow gatekeeperd vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow healthd vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow hwservicemanager vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow incident vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow incidentd vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow inputflinger vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow install_recovery vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow kernel vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow keystore vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow lmkd vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow logd vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow logpersist vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow mdnsd vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow mediadrmserver vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow mediaextractor vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow mediametrics vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow mediaserver vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow modprobe vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow mtp vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow netd vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow netutils_wrapper vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow otapreopt_chroot vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow otapreopt_slot vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow performanced vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow postinstall vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow ppp vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow preopt2cachename vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow profman vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow racoon vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow recovery vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow recovery_persist vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow recovery_refresh vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow runas vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow sdcardd vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow servicemanager vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow sgdisk vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow slideshow vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow surfaceflinger vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow tombstoned vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow toolbox vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow tzdatacheck vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow ueventd vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow uncrypt vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow update_engine vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow update_verifier vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow vdc vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow virtual_touchpad vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow vold vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow vr_hwc vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow watchdogd vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow webview_zygote vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow wificond vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow zygote vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow dexoptanalyzer vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow hal_allocator_default vendor_app_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow storaged vendor_app_file:file { read getattr open };
libsepol.check_assertions: 150 neverallow failures occurred

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules93(SELinuxNeverallowRulesTest.java:2894)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules94">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {          coredomain          -appdomain          -idmap          -init          -installd          -system_server          -zygote      } vendor_overlay_file:dir { getattr open read search };
libsepol.report_failure: neverallow violated by allow adbd vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow audioserver vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow blkid vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow blkid_untrusted vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow bootanim vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow bootstat vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow bufferhubd vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow cameraserver vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow charger vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow clatd vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow cppreopts vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow crash_dump vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow dex2oat vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow dhcp vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow dnsmasq vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow drmserver vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow dumpstate vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow fingerprintd vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow fsck vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow fsck_untrusted vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow gatekeeperd vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow healthd vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow hwservicemanager vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow incident vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow incidentd vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow inputflinger vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow install_recovery vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow kernel vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow keystore vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow lmkd vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow logd vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow logpersist vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow mdnsd vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow mediadrmserver vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow mediaextractor vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow mediametrics vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow mediaserver vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow modprobe vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow mtp vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow netd vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow netutils_wrapper vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow otapreopt_chroot vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow otapreopt_slot vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow performanced vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow postinstall vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow postinstall_dexopt vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow ppp vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow preopt2cachename vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow profman vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow racoon vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow recovery vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow recovery_persist vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow recovery_refresh vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow runas vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow sdcardd vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow servicemanager vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow sgdisk vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow slideshow vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow surfaceflinger vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow tombstoned vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow toolbox vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow tzdatacheck vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow ueventd vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow uncrypt vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow update_engine vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow update_verifier vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow vdc vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow virtual_touchpad vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow vold vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow vr_hwc vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow watchdogd vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow webview_zygote vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow wificond vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow dexoptanalyzer vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow hal_allocator_default vendor_overlay_file:dir { getattr search };
libsepol.report_failure: neverallow violated by allow storaged vendor_overlay_file:dir { getattr search };
libsepol.check_assertions: 76 neverallow failures occurred

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules94(SELinuxNeverallowRulesTest.java:2924)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules95">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {          coredomain          -appdomain          -idmap          -init          -installd          -system_server          -zygote      } vendor_overlay_file:{ file lnk_file } { getattr open read ioctl lock };
libsepol.report_failure: neverallow violated by allow adbd vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow audioserver vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow blkid vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow blkid_untrusted vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow bootanim vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow bootstat vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow bufferhubd vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow cameraserver vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow charger vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow clatd vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow cppreopts vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow crash_dump vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow dex2oat vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow dhcp vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow dnsmasq vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow drmserver vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow dumpstate vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow fingerprintd vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow fsck vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow fsck_untrusted vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow gatekeeperd vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow healthd vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow hwservicemanager vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow incident vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow incidentd vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow inputflinger vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow install_recovery vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow kernel vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow keystore vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow lmkd vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow logd vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow logpersist vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow mdnsd vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow mediadrmserver vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow mediaextractor vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow mediametrics vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow mediaserver vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow modprobe vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow mtp vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow netd vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow netutils_wrapper vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow otapreopt_chroot vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow otapreopt_slot vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow performanced vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow postinstall vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow postinstall_dexopt vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow ppp vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow preopt2cachename vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow profman vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow racoon vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow recovery vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow recovery_persist vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow recovery_refresh vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow runas vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow sdcardd vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow servicemanager vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow sgdisk vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow slideshow vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow surfaceflinger vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow tombstoned vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow toolbox vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow tzdatacheck vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow ueventd vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow uncrypt vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow update_engine vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow update_verifier vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow vdc vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow virtual_touchpad vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow vold vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow vr_hwc vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow watchdogd vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow webview_zygote vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow wificond vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow dexoptanalyzer vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow hal_allocator_default vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow storaged vendor_overlay_file:lnk_file { read getattr };
libsepol.report_failure: neverallow violated by allow adbd vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow audioserver vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow blkid vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow blkid_untrusted vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow bootanim vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow bootstat vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow bufferhubd vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow cameraserver vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow charger vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow clatd vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow cppreopts vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow crash_dump vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow dex2oat vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow dhcp vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow dnsmasq vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow drmserver vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow dumpstate vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow fingerprintd vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow fsck vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow fsck_untrusted vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow gatekeeperd vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow healthd vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow hwservicemanager vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow incident vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow incidentd vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow inputflinger vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow install_recovery vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow kernel vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow keystore vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow lmkd vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow logd vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow logpersist vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow mdnsd vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow mediadrmserver vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow mediaextractor vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow mediametrics vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow mediaserver vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow modprobe vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow mtp vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow netd vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow netutils_wrapper vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow otapreopt_chroot vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow otapreopt_slot vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow performanced vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow postinstall vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow postinstall_dexopt vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow ppp vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow preopt2cachename vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow profman vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow racoon vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow recovery vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow recovery_persist vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow recovery_refresh vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow runas vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow sdcardd vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow servicemanager vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow sgdisk vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow slideshow vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow surfaceflinger vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow tombstoned vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow toolbox vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow tzdatacheck vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow ueventd vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow uncrypt vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow update_engine vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow update_verifier vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow vdc vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow virtual_touchpad vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow vold vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow vr_hwc vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow watchdogd vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow webview_zygote vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow wificond vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow dexoptanalyzer vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow hal_allocator_default vendor_overlay_file:file { read getattr open };
libsepol.report_failure: neverallow violated by allow storaged vendor_overlay_file:file { read getattr open };
libsepol.check_assertions: 152 neverallow failures occurred

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules95(SELinuxNeverallowRulesTest.java:2954)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules96">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {          coredomain          -init      } vendor_shell_exec:file { execute execute_no_trans };
libsepol.report_failure: neverallow violated by allow adbd vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow audioserver vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow blkid vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow blkid_untrusted vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow bluetooth vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow bootanim vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow bootstat vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow bufferhubd vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow cameraserver vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow charger vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow clatd vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow cppreopts vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow crash_dump vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow dex2oat vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow dhcp vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow dnsmasq vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow drmserver vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow dumpstate vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow ephemeral_app vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow fingerprintd vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow fsck vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow fsck_untrusted vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow gatekeeperd vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow healthd vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow hwservicemanager vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow idmap vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow incident vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow incidentd vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow inputflinger vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow install_recovery vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow installd vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow isolated_app vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow kernel vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow keystore vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow lmkd vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow logd vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow logpersist vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow mdnsd vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow mediadrmserver vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow mediaextractor vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow mediametrics vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow mediaserver vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow modprobe vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow mtp vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow netd vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow netutils_wrapper vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow nfc vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow otapreopt_chroot vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow otapreopt_slot vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow performanced vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow platform_app vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow postinstall vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow postinstall_dexopt vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow ppp vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow preopt2cachename vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow priv_app vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow profman vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow racoon vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow radio vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow recovery vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow recovery_persist vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow recovery_refresh vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow runas vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow sdcardd vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow servicemanager vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow sgdisk vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow shared_relro vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow shell vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow slideshow vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow surfaceflinger vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow system_app vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow system_server vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow tombstoned vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow toolbox vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow tzdatacheck vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow ueventd vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow uncrypt vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow untrusted_app vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow untrusted_app_25 vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow untrusted_v2_app vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow update_engine vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow update_verifier vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow vdc vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow virtual_touchpad vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow vold vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow vr_hwc vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow watchdogd vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow webview_zygote vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow wificond vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow zygote vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow dexoptanalyzer vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow hal_allocator_default vendor_shell_exec:file { execute };
libsepol.report_failure: neverallow violated by allow storaged vendor_shell_exec:file { execute };
libsepol.check_assertions: 93 neverallow failures occurred

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules96(SELinuxNeverallowRulesTest.java:2984)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules97">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow {          domain          -coredomain          -appdomain          -rild          -vendor_executes_system_violators      } {          exec_type          -vendor_file_type          -crash_dump_exec          -netutils_wrapper_exec      }:file { entrypoint execute execute_no_trans };
Warning!  Type or attribute vendor_executes_system_violators used in neverallow undefined in policy being checked.
libsepol.report_failure: neverallow violated by allow vpud_native toolbox_exec:file { execute execute_no_trans };
libsepol.report_failure: neverallow violated by allow hal_vehicle_default hal_vehicle_default_exec:file { execute entrypoint };
libsepol.report_failure: neverallow violated by allow mtk_agpsd mtk_agpsd_exec:file { execute entrypoint };
libsepol.report_failure: neverallow violated by allow vehicle_monitor_service vehicle_monitor_service_exec:file { execute entrypoint };
libsepol.report_failure: neverallow violated by allow vpud_native vpud_native_exec:file { execute entrypoint };
libsepol.report_failure: neverallow violated by allow qemud qemud_exec:file { execute entrypoint };
libsepol.report_failure: neverallow violated by allow vms vms_exec:file { execute entrypoint };
libsepol.report_failure: neverallow violated by allow mdpd_native toolbox_exec:file { execute execute_no_trans };
libsepol.report_failure: neverallow violated by allow vpud_native shell_exec:file { execute execute_no_trans };
libsepol.report_failure: neverallow violated by allow mnld mnld_exec:file { execute entrypoint };
libsepol.report_failure: neverallow violated by allow mdpd_native shell_exec:file { execute execute_no_trans };
libsepol.report_failure: neverallow violated by allow MPED MPED_exec:file { execute entrypoint };
libsepol.report_failure: neverallow violated by allow vehicle_network_service vehicle_network_service_exec:file { execute entrypoint };
libsepol.report_failure: neverallow violated by allow wmt_launcher wmt_launcher_exec:file { execute entrypoint };
libsepol.report_failure: neverallow violated by allow wmt_loader wmt_loader_exec:file { execute entrypoint };
libsepol.report_failure: neverallow violated by allow fastrvc_native fastrvc_native_exec:file { execute entrypoint };
libsepol.report_failure: neverallow violated by allow mdpd_native mdpd_native_exec:file { execute entrypoint };
libsepol.report_failure: neverallow violated by allow fastrvc_native shell_exec:file { execute execute_no_trans };
libsepol.report_failure: neverallow violated by allow wifi2agps wifi2agps_exec:file { execute entrypoint };
libsepol.check_assertions: 19 neverallow failures occurred

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules97(SELinuxNeverallowRulesTest.java:3014)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNeverallowRules98">
        <Failure message="junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:">
          <StackTrace>junit.framework.AssertionFailedError: The following errors were encountered when validating the SELinuxneverallow rule:
neverallow vendor_executes_system_violators unlabeled:service_manager list;
Warning!  Type or attribute vendor_executes_system_violators used in neverallow undefined in policy being checked.

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.cts.security.SELinuxNeverallowRulesTest.testNeverallowRules98(SELinuxNeverallowRulesTest.java:3044)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.security.cts.SELinuxHostTest">
      <Test result="fail" name="testNoExemptionsForBinderInVendorBan">
        <Failure message="junit.framework.AssertionFailedError: sepolicy-analyze attribute binder_in_vendor_violators failed with error code 255: binder_in_vendor_violators is not defined in this policy.">
          <StackTrace>junit.framework.AssertionFailedError: sepolicy-analyze attribute binder_in_vendor_violators failed with error code 255: binder_in_vendor_violators is not defined in this policy.

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.TestCase.fail(TestCase.java:227)
	at android.security.cts.SELinuxHostTest.sepolicyAnalyzeGetTypesAssociatedWithAttribute(SELinuxHostTest.java:224)
	at android.security.cts.SELinuxHostTest.testNoExemptionsForBinderInVendorBan(SELinuxHostTest.java:264)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNoExemptionsForSocketsBetweenCoreAndVendorBan">
        <Failure message="junit.framework.AssertionFailedError: sepolicy-analyze attribute socket_between_core_and_vendor_violators failed with error code 255: socket_between_core_and_vendor_violators is not defined in this policy.">
          <StackTrace>junit.framework.AssertionFailedError: sepolicy-analyze attribute socket_between_core_and_vendor_violators failed with error code 255: socket_between_core_and_vendor_violators is not defined in this policy.

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.TestCase.fail(TestCase.java:227)
	at android.security.cts.SELinuxHostTest.sepolicyAnalyzeGetTypesAssociatedWithAttribute(SELinuxHostTest.java:224)
	at android.security.cts.SELinuxHostTest.testNoExemptionsForSocketsBetweenCoreAndVendorBan(SELinuxHostTest.java:287)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNoExemptionsForVendorExecutingCore">
        <Failure message="junit.framework.AssertionFailedError: sepolicy-analyze attribute vendor_executes_system_violators failed with error code 255: vendor_executes_system_violators is not defined in this policy.">
          <StackTrace>junit.framework.AssertionFailedError: sepolicy-analyze attribute vendor_executes_system_violators failed with error code 255: vendor_executes_system_violators is not defined in this policy.

	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.TestCase.fail(TestCase.java:227)
	at android.security.cts.SELinuxHostTest.sepolicyAnalyzeGetTypesAssociatedWithAttribute(SELinuxHostTest.java:224)
	at android.security.cts.SELinuxHostTest.testNoExemptionsForVendorExecutingCore(SELinuxHostTest.java:307)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
  </Module>
  <Module name="CtsSecurityTestCases" abi="armeabi-v7a" runtime="832295" done="false" pass="165">
    <TestCase name="android.security.cts.EncryptionTest">
      <Test result="fail" name="testEncryption">
        <Failure message="junit.framework.AssertionFailedError: Device encryption is required&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Device encryption is required
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertFalse(Assert.java:34)
at android.security.cts.EncryptionTest.testEncryption(EncryptionTest.java:66)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.security.cts.PackageSignatureTest">
      <Test result="fail" name="testPackageSignatures">
        <Failure message="junit.framework.AssertionFailedError: These packages should not be signed with a well known key: [com.android.storagemanager, com.android.printspooler, com.android.defcontainer, com.android.car.systemupdater, android.ext.services, com.android.support.car.lenspicker, com.android.phone, com.android.pacprocessor, com.android.mms.service, com.android.captiveportallogin, com.android.car.media, com.android.inputdevices, com.android.car.dialer, com.android.providers.calendar, org.chromium.webview_shell, com.android.deskclock, com.android.externalstorage, com.android.server.telecom, com.android.keychain, com.android.car.overview, com.android.wallpaperbackup, com.android.providers.contacts, com.android.managedprovisioning, com.android.providers.media, com.android.mtp, com.android.sharedstoragebackup, com.android.documentsui, com.svox.pico, com.android.inputmethod.latin, com.android.vpndialogs, com.google.android.car.vms.subscriber, android.car.usb.handler, com.google.android.car.vms.publisher, android.ext.shared, android, com.android.gallery, com.android.onetimeinitializer, com.android.location.fused, com.android.car.media.localmediaplayer, com.android.statementservice, com.android.webview, com.android.certinstaller, com.android.providers.settings, com.android.systemui, com.android.provision, com.android.companiondevicemanager, com.android.proxyhandler, com.android.musicfx, com.android.music, com.android.car, com.android.providers.downloads, com.android.dreams.basic, com.android.quicksearchbox, android.car.ui.provider, com.android.car.radio, com.android.car.mapsplaceholder, com.android.car.trust, com.android.packageinstaller, com.android.bluetooth, com.android.providers.downloads.ui, com.android.car.stream, com.android.car.hvac, com.android.shell, com.android.backupconfirm, com.android.car.messenger, com.android.calendar, com.android.settings, com.android.providers.userdictionary, com.android.htmlviewer, com.google.android.car.kitchensink]&#13;">
          <StackTrace>junit.framework.AssertionFailedError: These packages should not be signed with a well known key: [com.android.storagemanager, com.android.printspooler, com.android.defcontainer, com.android.car.systemupdater, android.ext.services, com.android.support.car.lenspicker, com.android.phone, com.android.pacprocessor, com.android.mms.service, com.android.captiveportallogin, com.android.car.media, com.android.inputdevices, com.android.car.dialer, com.android.providers.calendar, org.chromium.webview_shell, com.android.deskclock, com.android.externalstorage, com.android.server.telecom, com.android.keychain, com.android.car.overview, com.android.wallpaperbackup, com.android.providers.contacts, com.android.managedprovisioning, com.android.providers.media, com.android.mtp, com.android.sharedstoragebackup, com.android.documentsui, com.svox.pico, com.android.inputmethod.latin, com.android.vpndialogs, com.google.android.car.vms.subscriber, android.car.usb.handler, com.google.android.car.vms.publisher, android.ext.shared, android, com.android.gallery, com.android.onetimeinitializer, com.android.location.fused, com.android.car.media.localmediaplayer, com.android.statementservice, com.android.webview, com.android.certinstaller, com.android.providers.settings, com.android.systemui, com.android.provision, com.android.companiondevicemanager, com.android.proxyhandler, com.android.musicfx, com.android.music, com.android.car, com.android.providers.downloads, com.android.dreams.basic, com.android.quicksearchbox, android.car.ui.provider, com.android.car.radio, com.android.car.mapsplaceholder, com.android.car.trust, com.android.packageinstaller, com.android.bluetooth, com.android.providers.downloads.ui, com.android.car.stream, com.android.car.hvac, com.android.shell, com.android.backupconfirm, com.android.car.messenger, com.android.calendar, com.android.settings, com.android.providers.userdictionary, com.android.htmlviewer, com.google.android.car.kitchensink]
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.security.cts.PackageSignatureTest.testPackageSignatures(PackageSignatureTest.java:67)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.security.cts.StagefrightTest">
      <Test result="fail" name="testStagefrightANR_bug_62673844">
        <Failure message="java.util.concurrent.TimeoutException: Test timed out after 900000 milliseconds&#13;">
          <StackTrace>java.util.concurrent.TimeoutException: Test timed out after 900000 milliseconds
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:86)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testStagefright_bug_21443020">
        <Failure message="junit.framework.AssertionFailedError: Device *IS* vulnerable to BUG-21443020-WEBM&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Device *IS* vulnerable to BUG-21443020-WEBM
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertFalse(Assert.java:34)
at android.security.cts.StagefrightTest.doStagefrightTestMediaCodec(StagefrightTest.java:721)
at android.security.cts.StagefrightTest.doStagefrightTestMediaCodec(StagefrightTest.java:564)
at android.security.cts.StagefrightTest.doStagefrightTest(StagefrightTest.java:369)
at android.security.cts.StagefrightTest.testStagefright_bug_21443020(StagefrightTest.java:108)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testStagefright_bug_32873375">
        <Failure message="Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testStagefright_bug_32915871">
        <Failure message="Test failed to run to completion. Reason: 'Test run failed to complete. Expected 5 tests, received 0'. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Test run failed to complete. Expected 5 tests, received 0'. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    </Module>
  <Module name="CtsSensorTestCases" abi="armeabi-v7a" runtime="390304" done="true" pass="274">
    <TestCase name="android.hardware.cts.SensorTest">
      <Test result="fail" name="testBatchAndFlush">
        <Failure message="junit.framework.AssertionFailedError: registerListener | sensor='LIGHT', samplingPeriod=0us, maxReportLatency=10000000us | Failed&#13;">
          <StackTrace>junit.framework.AssertionFailedError: registerListener | sensor='LIGHT', samplingPeriod=0us, maxReportLatency=10000000us | Failed

at junit.framework.Assert.fail(Assert.java:50)
at android.hardware.cts.SensorTest.assertOnErrors(SensorTest.java:558)
at android.hardware.cts.SensorTest.testBatchAndFlush(SensorTest.java:329)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at android.hardware.cts.SensorTestCase.runBare(SensorTestCase.java:52)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    </Module>
  <Module name="CtsServicesHostTestCases" abi="armeabi-v7a" runtime="4120092" done="true" pass="205">
    <TestCase name="android.server.cts.ActivityManagerActivityVisibilityTests">
      <Test result="fail" name="testFinishActivityWithMoveTaskToBackAfterPause">
        <Failure message="junit.framework.AssertionFailedError">
          <StackTrace>junit.framework.AssertionFailedError
	at junit.framework.Assert.fail(Assert.java:55)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNotNull(Assert.java:256)
	at junit.framework.Assert.assertNotNull(Assert.java:248)
	at android.server.cts.ActivityAndWindowManagersState.assertHomeActivityVisible(ActivityAndWindowManagersState.java:555)
	at android.server.cts.ActivityManagerActivityVisibilityTests.performFinishActivityWithMoveTaskToBack(ActivityManagerActivityVisibilityTests.java:166)
	at android.server.cts.ActivityManagerActivityVisibilityTests.testFinishActivityWithMoveTaskToBackAfterPause(ActivityManagerActivityVisibilityTests.java:156)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testFinishActivityWithMoveTaskToBackAfterStop">
        <Failure message="junit.framework.AssertionFailedError">
          <StackTrace>junit.framework.AssertionFailedError
	at junit.framework.Assert.fail(Assert.java:55)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNotNull(Assert.java:256)
	at junit.framework.Assert.assertNotNull(Assert.java:248)
	at android.server.cts.ActivityAndWindowManagersState.assertHomeActivityVisible(ActivityAndWindowManagersState.java:555)
	at android.server.cts.ActivityManagerActivityVisibilityTests.performFinishActivityWithMoveTaskToBack(ActivityManagerActivityVisibilityTests.java:166)
	at android.server.cts.ActivityManagerActivityVisibilityTests.testFinishActivityWithMoveTaskToBackAfterStop(ActivityManagerActivityVisibilityTests.java:160)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNoHistoryActivityFinishedResumedActivityNotIdle">
        <Failure message="junit.framework.AssertionFailedError">
          <StackTrace>junit.framework.AssertionFailedError
	at junit.framework.Assert.fail(Assert.java:55)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNotNull(Assert.java:256)
	at junit.framework.Assert.assertNotNull(Assert.java:248)
	at android.server.cts.ActivityAndWindowManagersState.assertHomeActivityVisible(ActivityAndWindowManagersState.java:555)
	at android.server.cts.ActivityManagerActivityVisibilityTests.testNoHistoryActivityFinishedResumedActivityNotIdle(ActivityManagerActivityVisibilityTests.java:274)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testReorderToFrontBackstack">
        <Failure message="junit.framework.AssertionFailedError">
          <StackTrace>junit.framework.AssertionFailedError
	at junit.framework.Assert.fail(Assert.java:55)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNotNull(Assert.java:256)
	at junit.framework.Assert.assertNotNull(Assert.java:248)
	at android.server.cts.ActivityAndWindowManagersState.assertHomeActivityVisible(ActivityAndWindowManagersState.java:555)
	at android.server.cts.ActivityManagerActivityVisibilityTests.testReorderToFrontBackstack(ActivityManagerActivityVisibilityTests.java:194)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testReorderToFrontChangingStack">
        <Failure message="junit.framework.AssertionFailedError">
          <StackTrace>junit.framework.AssertionFailedError
	at junit.framework.Assert.fail(Assert.java:55)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNotNull(Assert.java:256)
	at junit.framework.Assert.assertNotNull(Assert.java:248)
	at android.server.cts.ActivityAndWindowManagersState.assertHomeActivityVisible(ActivityAndWindowManagersState.java:555)
	at android.server.cts.ActivityManagerActivityVisibilityTests.testReorderToFrontChangingStack(ActivityManagerActivityVisibilityTests.java:226)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testTranslucentActivityOnTopOfHome">
        <Failure message="junit.framework.AssertionFailedError: Activity=android.server.cts/.AlwaysFocusablePipActivity must be visible.">
          <StackTrace>junit.framework.AssertionFailedError: Activity=android.server.cts/.AlwaysFocusablePipActivity must be visible.
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at android.server.cts.ActivityAndWindowManagersState.assertVisibility(ActivityAndWindowManagersState.java:544)
	at android.server.cts.ActivityAndWindowManagersState.assertVisibility(ActivityAndWindowManagersState.java:535)
	at android.server.cts.ActivityManagerActivityVisibilityTests.testTranslucentActivityOnTopOfHome(ActivityManagerActivityVisibilityTests.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.server.cts.ActivityManagerAppConfigurationTests">
      <Test result="fail" name="testFullscreenAppOrientationRequests">
        <Failure message="junit.framework.AssertionFailedError: Activity=android.server.cts/.PortraitOrientationActivity must be visible.">
          <StackTrace>junit.framework.AssertionFailedError: Activity=android.server.cts/.PortraitOrientationActivity must be visible.
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at android.server.cts.ActivityAndWindowManagersState.assertVisibility(ActivityAndWindowManagersState.java:544)
	at android.server.cts.ActivityAndWindowManagersState.assertVisibility(ActivityAndWindowManagersState.java:535)
	at android.server.cts.ActivityManagerAppConfigurationTests.testFullscreenAppOrientationRequests(ActivityManagerAppConfigurationTests.java:302)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testNonfullscreenAppOrientationRequests">
        <Failure message="junit.framework.AssertionFailedError: portrait activity should be in portrait expected:&lt;1&gt; but was:&lt;2&gt;">
          <StackTrace>junit.framework.AssertionFailedError: portrait activity should be in portrait expected:&lt;1&gt; but was:&lt;2&gt;
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.failNotEquals(Assert.java:329)
	at junit.framework.Assert.assertEquals(Assert.java:78)
	at junit.framework.Assert.assertEquals(Assert.java:234)
	at junit.framework.TestCase.assertEquals(TestCase.java:401)
	at android.server.cts.ActivityManagerAppConfigurationTests.testNonfullscreenAppOrientationRequests(ActivityManagerAppConfigurationTests.java:322)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testSplitscreenPortraitAppOrientationRequests">
        <Failure message="junit.framework.AssertionFailedError: Activity=android.server.cts/.LandscapeOrientationActivity must be visible.">
          <StackTrace>junit.framework.AssertionFailedError: Activity=android.server.cts/.LandscapeOrientationActivity must be visible.
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at android.server.cts.ActivityAndWindowManagersState.assertVisibility(ActivityAndWindowManagersState.java:544)
	at android.server.cts.ActivityAndWindowManagersState.assertVisibility(ActivityAndWindowManagersState.java:535)
	at android.server.cts.ActivityManagerAppConfigurationTests.requestOrientationInSplitScreen(ActivityManagerAppConfigurationTests.java:442)
	at android.server.cts.ActivityManagerAppConfigurationTests.testSplitscreenPortraitAppOrientationRequests(ActivityManagerAppConfigurationTests.java:417)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.server.cts.ActivityManagerAssistantStackTests">
      <Test result="fail" name="testTranslucentAssistantActivityStackVisibility">
        <Failure message="junit.framework.AssertionFailedError">
          <StackTrace>junit.framework.AssertionFailedError
	at junit.framework.Assert.fail(Assert.java:55)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNotNull(Assert.java:256)
	at junit.framework.Assert.assertNotNull(Assert.java:248)
	at android.server.cts.ActivityAndWindowManagersState.assertHomeActivityVisible(ActivityAndWindowManagersState.java:555)
	at android.server.cts.ActivityManagerAssistantStackTests.testTranslucentAssistantActivityStackVisibility(ActivityManagerAssistantStackTests.java:164)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.server.cts.DisplaySizeTest">
      <Test result="fail" name="testCompatibilityDialogAfterReturn">
        <Failure message="junit.framework.AssertionFailedError: UnsupportedDisplaySizeDialog was not displayed">
          <StackTrace>junit.framework.AssertionFailedError: UnsupportedDisplaySizeDialog was not displayed
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.server.cts.DisplaySizeTest.verifyWindowDisplayed(DisplaySizeTest.java:172)
	at android.server.cts.DisplaySizeTest.testCompatibilityDialogAfterReturn(DisplaySizeTest.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testCompatibilityDialogWhenFocused">
        <Failure message="junit.framework.AssertionFailedError: UnsupportedDisplaySizeDialog was not displayed">
          <StackTrace>junit.framework.AssertionFailedError: UnsupportedDisplaySizeDialog was not displayed
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.server.cts.DisplaySizeTest.verifyWindowDisplayed(DisplaySizeTest.java:172)
	at android.server.cts.DisplaySizeTest.testCompatibilityDialogWhenFocused(DisplaySizeTest.java:83)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.server.cts.KeyguardTests">
      <Test result="fail" name="testKeyguardHidesActivity">
        <Failure message="junit.framework.AssertionFailedError: Activity=android.server.cts/.TestActivity must be visible.">
          <StackTrace>junit.framework.AssertionFailedError: Activity=android.server.cts/.TestActivity must be visible.
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at android.server.cts.ActivityAndWindowManagersState.assertVisibility(ActivityAndWindowManagersState.java:544)
	at android.server.cts.ActivityAndWindowManagersState.assertVisibility(ActivityAndWindowManagersState.java:535)
	at android.server.cts.KeyguardTests.testKeyguardHidesActivity(KeyguardTests.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testTranslucentDoesntRevealBehind">
        <Failure message="junit.framework.AssertionFailedError: Activity=android.server.cts/.TestActivity must be visible.">
          <StackTrace>junit.framework.AssertionFailedError: Activity=android.server.cts/.TestActivity must be visible.
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at android.server.cts.ActivityAndWindowManagersState.assertVisibility(ActivityAndWindowManagersState.java:544)
	at android.server.cts.ActivityAndWindowManagersState.assertVisibility(ActivityAndWindowManagersState.java:535)
	at android.server.cts.KeyguardTests.testTranslucentDoesntRevealBehind(KeyguardTests.java:146)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testUnoccludeRotationChange">
        <Failure message="junit.framework.AssertionFailedError">
          <StackTrace>junit.framework.AssertionFailedError
	at junit.framework.Assert.fail(Assert.java:55)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNotNull(Assert.java:256)
	at junit.framework.Assert.assertNotNull(Assert.java:248)
	at android.server.cts.ActivityAndWindowManagersState.assertHomeActivityVisible(ActivityAndWindowManagersState.java:555)
	at android.server.cts.KeyguardTests.testUnoccludeRotationChange(KeyguardTests.java:302)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.server.cts.KeyguardTransitionTests">
      <Test result="fail" name="testUnlock">
        <Failure message="junit.framework.ComparisonFailure: Picked wrong transition expected:&lt;TRANSIT_[KEYGUARD_GOING_AWAY]&gt; but was:&lt;TRANSIT_[TASK_OPEN]&gt;">
          <StackTrace>junit.framework.ComparisonFailure: Picked wrong transition expected:&lt;TRANSIT_[KEYGUARD_GOING_AWAY]&gt; but was:&lt;TRANSIT_[TASK_OPEN]&gt;
	at junit.framework.Assert.assertEquals(Assert.java:100)
	at junit.framework.TestCase.assertEquals(TestCase.java:261)
	at android.server.cts.KeyguardTransitionTests.testUnlock(KeyguardTransitionTests.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testUnlockWallpaper">
        <Failure message="junit.framework.ComparisonFailure: Picked wrong transition expected:&lt;TRANSIT_[KEYGUARD_GOING_AWAY_ON_WALLPAPER]&gt; but was:&lt;TRANSIT_[WALLPAPER_OPEN]&gt;">
          <StackTrace>junit.framework.ComparisonFailure: Picked wrong transition expected:&lt;TRANSIT_[KEYGUARD_GOING_AWAY_ON_WALLPAPER]&gt; but was:&lt;TRANSIT_[WALLPAPER_OPEN]&gt;
	at junit.framework.Assert.assertEquals(Assert.java:100)
	at junit.framework.TestCase.assertEquals(TestCase.java:261)
	at android.server.cts.KeyguardTransitionTests.testUnlockWallpaper(KeyguardTransitionTests.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    </Module>
  <Module name="CtsSignatureTestCases" abi="armeabi-v7a" runtime="49923" done="true" pass="1">
    <TestCase name="android.signature.cts.IntentTest">
      <Test result="fail" name="shouldNotFindUnexpectedIntents">
        <Failure message="java.lang.AssertionError: [Package: com.svox.pico Invalid Intent: [android.intent.action.START_TTS_ENGINE]]&#13;">
          <StackTrace>java.lang.AssertionError: [Package: com.svox.pico Invalid Intent: [android.intent.action.START_TTS_ENGINE]]
at org.junit.Assert.fail(Assert.java:88)
at org.junit.Assert.assertTrue(Assert.java:41)
at android.signature.cts.IntentTest.shouldNotFindUnexpectedIntents(IntentTest.java:145)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    </Module>
  <Module name="CtsSpeechTestCases" abi="armeabi-v7a" runtime="273969" done="true" pass="6">
    <TestCase name="android.speech.tts.cts.TextToSpeechTest">
      <Test result="fail" name="testSpeak">
        <Failure message="junit.framework.AssertionFailedError: speak() completion timeout&#13;">
          <StackTrace>junit.framework.AssertionFailedError: speak() completion timeout
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.speech.tts.cts.TextToSpeechTest.testSpeak(TextToSpeechTest.java:142)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testSpeakStop">
        <Failure message="junit.framework.AssertionFailedError: speak() stop callback timeout&#13;">
          <StackTrace>junit.framework.AssertionFailedError: speak() stop callback timeout
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.speech.tts.cts.TextToSpeechTest.testSpeakStop(TextToSpeechTest.java:159)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testSynthesizeToFile">
        <Failure message="junit.framework.AssertionFailedError: synthesizeToFile() completion timeout&#13;">
          <StackTrace>junit.framework.AssertionFailedError: synthesizeToFile() completion timeout
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at android.speech.tts.cts.TextToSpeechTest.testSynthesizeToFile(TextToSpeechTest.java:126)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
  </Module>
  <Module name="CtsTelephonyTestCases" abi="armeabi-v7a" runtime="3011904" done="true" pass="99">
    <TestCase name="android.telephony.cts.CarrierConfigManagerTest">
      <Test result="fail" name="testNotifyConfigChangedForSubId">
        <Failure message="junit.framework.AssertionFailedError: Expected SecurityException. App doesn't have carrier privileges.&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Expected SecurityException. App doesn't have carrier privileges.
at junit.framework.Assert.fail(Assert.java:50)
at android.telephony.cts.CarrierConfigManagerTest.testNotifyConfigChangedForSubId(CarrierConfigManagerTest.java:105)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.telephony.cts.CellLocationTest">
      <Test result="fail" name="testCellLocation">
        <Failure message="junit.framework.AssertionFailedError: TelephonyManager.getCellLocation() returned null!&#13;">
          <StackTrace>junit.framework.AssertionFailedError: TelephonyManager.getCellLocation() returned null!
at junit.framework.Assert.fail(Assert.java:50)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertNotNull(Assert.java:218)
at android.telephony.cts.CellLocationTest.testCellLocation(CellLocationTest.java:68)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.telephony.cts.PhoneStateListenerTest">
      <Test result="fail" name="testOnCallForwardingIndicatorChanged">
        <Failure message="java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds&#13;">
          <StackTrace>java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:86)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOnCallStateChanged">
        <Failure message="java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds&#13;">
          <StackTrace>java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:86)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOnCellLocationChanged">
        <Failure message="java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds&#13;">
          <StackTrace>java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:86)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOnDataActivity">
        <Failure message="java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds&#13;">
          <StackTrace>java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:86)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOnDataConnectionStateChanged">
        <Failure message="java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds&#13;">
          <StackTrace>java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:86)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOnMessageWaitingIndicatorChanged">
        <Failure message="java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds&#13;">
          <StackTrace>java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:86)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOnServiceStateChanged">
        <Failure message="java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds&#13;">
          <StackTrace>java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:86)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOnSignalStrengthChanged">
        <Failure message="java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds&#13;">
          <StackTrace>java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:86)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testOnSignalStrengthsChanged">
        <Failure message="java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds&#13;">
          <StackTrace>java.util.concurrent.TimeoutException: Test timed out after 300000 milliseconds
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:86)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.telephony.cts.SimRestrictedApisTest">
      <Test result="fail" name="testInjectSmsPdu">
        <Failure message="junit.framework.AssertionFailedError: Expected SecurityException. App doesn't have carrier privileges.&#13;">
          <StackTrace>junit.framework.AssertionFailedError: Expected SecurityException. App doesn't have carrier privileges.
at junit.framework.Assert.fail(Assert.java:50)
at android.telephony.cts.SimRestrictedApisTest.testInjectSmsPdu(SimRestrictedApisTest.java:48)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.telephony.cts.SubscriptionManagerTest">
      <Test result="fail" name="testActiveSubscriptions">
        <Failure message="junit.framework.AssertionFailedError&#13;">
          <StackTrace>junit.framework.AssertionFailedError
at junit.framework.Assert.fail(Assert.java:48)
at junit.framework.Assert.assertTrue(Assert.java:20)
at junit.framework.Assert.assertTrue(Assert.java:27)
at android.telephony.cts.SubscriptionManagerTest.testActiveSubscriptions(SubscriptionManagerTest.java:72)
at java.lang.reflect.Method.invoke(Native Method)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    <TestCase name="android.telephony.cts.TelephonyManagerTest">
      <Test result="fail" name="testListen">
        <Failure message="java.lang.AssertionError&#13;">
          <StackTrace>java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:86)
at org.junit.Assert.assertTrue(Assert.java:41)
at org.junit.Assert.assertTrue(Assert.java:52)
at android.telephony.cts.TelephonyManagerTest.testListen(TelephonyManagerTest.java:121)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testTelephonyManager">
        <Failure message="java.lang.AssertionError&#13;">
          <StackTrace>java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:86)
at org.junit.Assert.assertTrue(Assert.java:41)
at org.junit.Assert.assertFalse(Assert.java:64)
at org.junit.Assert.assertFalse(Assert.java:74)
at android.telephony.cts.TelephonyManagerTest.testTelephonyManager(TelephonyManagerTest.java:165)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    </Module>
  <Module name="CtsThemeHostTestCases" abi="armeabi-v7a" runtime="445000" done="true" pass="0">
    <TestCase name="android.theme.cts.ThemeHostTest">
      <Test result="fail" name="testThemes">
        <Failure message="junit.framework.AssertionFailedError: 96 failures in theme test">
          <StackTrace>junit.framework.AssertionFailedError: 96 failures in theme test
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.TestCase.assertTrue(TestCase.java:192)
	at android.theme.cts.ThemeHostTest.testThemes(ThemeHostTest.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
  </Module>
  <Module name="CtsUiHostTestCases" abi="armeabi-v7a" runtime="180557" done="true" pass="1">
    <TestCase name="android.ui.cts.TaskSwitchingTest">
      <Test result="fail" name="testTaskSwitching">
        <Failure message="junit.framework.AssertionFailedError: no performance data">
          <StackTrace>junit.framework.AssertionFailedError: no performance data
	at junit.framework.Assert.fail(Assert.java:57)
	at junit.framework.Assert.assertTrue(Assert.java:22)
	at junit.framework.Assert.assertNotNull(Assert.java:256)
	at junit.framework.TestCase.assertNotNull(TestCase.java:426)
	at android.ui.cts.TaskSwitchingTest.testTaskSwitching(TaskSwitchingTest.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at junit.framework.TestCase.runTest(TestCase.java:176)
	at junit.framework.TestCase.runBare(TestCase.java:141)
	at com.android.tradefed.testtype.DeviceTestResult$1.protect(DeviceTestResult.java:90)
	at com.android.tradefed.testtype.DeviceTestResult.runProtected(DeviceTestResult.java:65)
	at com.android.tradefed.testtype.DeviceTestResult.run(DeviceTestResult.java:94)
	at junit.framework.TestCase.run(TestCase.java:129)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:183)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:55)
	at com.android.tradefed.testtype.JUnitRunUtil.runTest(JUnitRunUtil.java:38)
	at com.android.tradefed.testtype.DeviceTestCase.run(DeviceTestCase.java:148)
	at com.android.tradefed.testtype.HostTest.runRemoteTest(HostTest.java:463)
	at com.android.tradefed.testtype.HostTest.runTestClasses(HostTest.java:406)
	at com.android.tradefed.testtype.HostTest.run(HostTest.java:397)
	at com.android.compatibility.common.tradefed.testtype.JarHostTest.run(JarHostTest.java:142)
	at com.android.compatibility.common.tradefed.testtype.ModuleDef.run(ModuleDef.java:258)
	at com.android.compatibility.common.tradefed.testtype.CompatibilityTest.run(CompatibilityTest.java:477)
	at com.android.tradefed.invoker.TestInvocation.runTests(TestInvocation.java:793)
	at com.android.tradefed.invoker.TestInvocation.prepareAndRun(TestInvocation.java:476)
	at com.android.tradefed.invoker.TestInvocation.performInvocation(TestInvocation.java:330)
	at com.android.tradefed.invoker.TestInvocation.invoke(TestInvocation.java:921)
	at com.android.tradefed.command.CommandScheduler$InvocationThread.run(CommandScheduler.java:555)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
  </Module>
  <Module name="CtsUtilTestCases" abi="armeabi-v7a" runtime="10264" done="true" pass="284">
    <TestCase name="android.util.cts.DisplayMetricsTest">
      <Test result="fail" name="testDisplayMetricsOp">
        <Failure message="java.lang.AssertionError&#13;">
          <StackTrace>java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:86)
at org.junit.Assert.assertTrue(Assert.java:41)
at org.junit.Assert.assertTrue(Assert.java:52)
at android.util.cts.DisplayMetricsTest.testDisplayMetricsOp(DisplayMetricsTest.java:67)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    </Module>
  <Module name="CtsVideoTestCases" abi="armeabi-v7a" runtime="1912864" done="true" pass="301">
    <TestCase name="android.video.cts.VideoEncoderDecoderTest">
      <Test result="fail" name="testAvcOther0Perf0720x0480">
        <Failure message="android.media.MediaCodec$CodecException: start failed&#13;">
          <StackTrace>android.media.MediaCodec$CodecException: start failed
at android.media.MediaCodec.native_start(Native Method)
at android.media.MediaCodec.start(MediaCodec.java:2043)
at android.video.cts.VideoEncoderDecoderTest.runEncoder(VideoEncoderDecoderTest.java:800)
at android.video.cts.VideoEncoderDecoderTest.doTest(VideoEncoderDecoderTest.java:653)
at android.video.cts.VideoEncoderDecoderTest.perf(VideoEncoderDecoderTest.java:177)
at android.video.cts.VideoEncoderDecoderTest.testAvcOther0Perf0720x0480(VideoEncoderDecoderTest.java:213)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testAvcOther0Perf1280x0720">
        <Failure message="android.media.MediaCodec$CodecException: start failed&#13;">
          <StackTrace>android.media.MediaCodec$CodecException: start failed
at android.media.MediaCodec.native_start(Native Method)
at android.media.MediaCodec.start(MediaCodec.java:2043)
at android.video.cts.VideoEncoderDecoderTest.runEncoder(VideoEncoderDecoderTest.java:800)
at android.video.cts.VideoEncoderDecoderTest.doTest(VideoEncoderDecoderTest.java:653)
at android.video.cts.VideoEncoderDecoderTest.perf(VideoEncoderDecoderTest.java:177)
at android.video.cts.VideoEncoderDecoderTest.testAvcOther0Perf1280x0720(VideoEncoderDecoderTest.java:224)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testAvcOther0Qual0320x0240">
        <Failure message="android.media.MediaCodec$CodecException: start failed&#13;">
          <StackTrace>android.media.MediaCodec$CodecException: start failed
at android.media.MediaCodec.native_start(Native Method)
at android.media.MediaCodec.start(MediaCodec.java:2043)
at android.video.cts.VideoEncoderDecoderTest.runEncoder(VideoEncoderDecoderTest.java:800)
at android.video.cts.VideoEncoderDecoderTest.doTest(VideoEncoderDecoderTest.java:653)
at android.video.cts.VideoEncoderDecoderTest.qual(VideoEncoderDecoderTest.java:182)
at android.video.cts.VideoEncoderDecoderTest.testAvcOther0Qual0320x0240(VideoEncoderDecoderTest.java:201)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testAvcOther0Qual1280x0720">
        <Failure message="android.media.MediaCodec$CodecException: start failed&#13;">
          <StackTrace>android.media.MediaCodec$CodecException: start failed
at android.media.MediaCodec.native_start(Native Method)
at android.media.MediaCodec.start(MediaCodec.java:2043)
at android.video.cts.VideoEncoderDecoderTest.runEncoder(VideoEncoderDecoderTest.java:800)
at android.video.cts.VideoEncoderDecoderTest.doTest(VideoEncoderDecoderTest.java:653)
at android.video.cts.VideoEncoderDecoderTest.qual(VideoEncoderDecoderTest.java:182)
at android.video.cts.VideoEncoderDecoderTest.testAvcOther0Qual1280x0720(VideoEncoderDecoderTest.java:223)
at java.lang.reflect.Method.invoke(Native Method)
at android.test.InstrumentationTestCase.runMethod(InstrumentationTestCase.java:220)
at android.test.InstrumentationTestCase.runTest(InstrumentationTestCase.java:205)
at android.test.ActivityInstrumentationTestCase2.runTest(ActivityInstrumentationTestCase2.java:192)
at junit.framework.TestCase.runBare(TestCase.java:134)
at junit.framework.TestResult$1.protect(TestResult.java:115)
at android.support.test.internal.runner.junit3.AndroidTestResult.runProtected(AndroidTestResult.java:77)
at junit.framework.TestResult.run(TestResult.java:118)
at android.support.test.internal.runner.junit3.AndroidTestResult.run(AndroidTestResult.java:55)
at junit.framework.TestCase.run(TestCase.java:124)
at android.support.test.internal.runner.junit3.NonLeakyTestSuite$NonLeakyTest.run(NonLeakyTestSuite.java:63)
at android.support.test.internal.runner.junit3.AndroidTestSuite$2.run(AndroidTestSuite.java:111)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:457)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      </TestCase>
  </Module>
  <Module name="CtsViewTestCases" abi="armeabi-v7a" runtime="3244368" done="true" pass="890">
    <TestCase name="android.view.cts.DisplayRefreshRateTest">
      <Test result="fail" name="testRefreshRate">
        <Failure message="java.lang.AssertionError&#13;">
          <StackTrace>java.lang.AssertionError
at org.junit.Assert.fail(Assert.java:86)
at org.junit.Assert.assertTrue(Assert.java:41)
at org.junit.Assert.assertTrue(Assert.java:52)
at android.view.cts.DisplayRefreshRateTest.testRefreshRate(DisplayRefreshRateTest.java:92)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.view.cts.SurfaceViewSyncTest">
      <Test result="fail" name="testEmptySurfaceView">
        <Failure message="java.lang.AssertionError: Error, only 33 frames observed, virtual display only capturing at 3.3 frames per second&#13;">
          <StackTrace>java.lang.AssertionError: Error, only 33 frames observed, virtual display only capturing at 3.3 frames per second
at org.junit.Assert.fail(Assert.java:88)
at org.junit.Assert.assertTrue(Assert.java:41)
at android.view.cts.SurfaceViewSyncTest.verifyTest(SurfaceViewSyncTest.java:246)
at android.view.cts.SurfaceViewSyncTest.testEmptySurfaceView(SurfaceViewSyncTest.java:284)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testSmallRect">
        <Failure message="java.lang.AssertionError: Error, only 42 frames observed, virtual display only capturing at 4.2 frames per second&#13;">
          <StackTrace>java.lang.AssertionError: Error, only 42 frames observed, virtual display only capturing at 4.2 frames per second
at org.junit.Assert.fail(Assert.java:88)
at org.junit.Assert.assertTrue(Assert.java:41)
at android.view.cts.SurfaceViewSyncTest.verifyTest(SurfaceViewSyncTest.java:246)
at android.view.cts.SurfaceViewSyncTest.testSmallRect(SurfaceViewSyncTest.java:255)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testSurfaceViewBigScale">
        <Failure message="java.lang.AssertionError: Error: 3 incorrect frames observed - incorrect positioning&#13;">
          <StackTrace>java.lang.AssertionError: Error: 3 incorrect frames observed - incorrect positioning
at org.junit.Assert.fail(Assert.java:88)
at org.junit.Assert.assertTrue(Assert.java:41)
at android.view.cts.SurfaceViewSyncTest.verifyTest(SurfaceViewSyncTest.java:241)
at android.view.cts.SurfaceViewSyncTest.testSurfaceViewBigScale(SurfaceViewSyncTest.java:303)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testSurfaceViewSmallScale">
        <Failure message="java.lang.AssertionError: Error, only 29 frames observed, virtual display only capturing at 2.9 frames per second&#13;">
          <StackTrace>java.lang.AssertionError: Error, only 29 frames observed, virtual display only capturing at 2.9 frames per second
at org.junit.Assert.fail(Assert.java:88)
at org.junit.Assert.assertTrue(Assert.java:41)
at android.view.cts.SurfaceViewSyncTest.verifyTest(SurfaceViewSyncTest.java:246)
at android.view.cts.SurfaceViewSyncTest.testSurfaceViewSmallScale(SurfaceViewSyncTest.java:294)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testVideoSurfaceViewCornerCoverage">
        <Failure message="java.lang.AssertionError: Error, only 28 frames observed, virtual display only capturing at 2.8 frames per second&#13;">
          <StackTrace>java.lang.AssertionError: Error, only 28 frames observed, virtual display only capturing at 2.8 frames per second
at org.junit.Assert.fail(Assert.java:88)
at org.junit.Assert.assertTrue(Assert.java:41)
at android.view.cts.SurfaceViewSyncTest.verifyTest(SurfaceViewSyncTest.java:246)
at android.view.cts.SurfaceViewSyncTest.testVideoSurfaceViewCornerCoverage(SurfaceViewSyncTest.java:351)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testVideoSurfaceViewEdgeCoverage">
        <Failure message="java.lang.AssertionError: Error, only 26 frames observed, virtual display only capturing at 2.6 frames per second&#13;">
          <StackTrace>java.lang.AssertionError: Error, only 26 frames observed, virtual display only capturing at 2.6 frames per second
at org.junit.Assert.fail(Assert.java:88)
at org.junit.Assert.assertTrue(Assert.java:41)
at android.view.cts.SurfaceViewSyncTest.verifyTest(SurfaceViewSyncTest.java:246)
at android.view.cts.SurfaceViewSyncTest.testVideoSurfaceViewEdgeCoverage(SurfaceViewSyncTest.java:333)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testVideoSurfaceViewRotated">
        <Failure message="java.lang.AssertionError: Error, only 26 frames observed, virtual display only capturing at 2.6 frames per second&#13;">
          <StackTrace>java.lang.AssertionError: Error, only 26 frames observed, virtual display only capturing at 2.6 frames per second
at org.junit.Assert.fail(Assert.java:88)
at org.junit.Assert.assertTrue(Assert.java:41)
at android.view.cts.SurfaceViewSyncTest.verifyTest(SurfaceViewSyncTest.java:246)
at android.view.cts.SurfaceViewSyncTest.testVideoSurfaceViewRotated(SurfaceViewSyncTest.java:321)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
      <Test result="fail" name="testVideoSurfaceViewTranslate">
        <Failure message="java.lang.AssertionError: Error, only 31 frames observed, virtual display only capturing at 3.1 frames per second&#13;">
          <StackTrace>java.lang.AssertionError: Error, only 31 frames observed, virtual display only capturing at 3.1 frames per second
at org.junit.Assert.fail(Assert.java:88)
at org.junit.Assert.assertTrue(Assert.java:41)
at android.view.cts.SurfaceViewSyncTest.verifyTest(SurfaceViewSyncTest.java:246)
at android.view.cts.SurfaceViewSyncTest.testVideoSurfaceViewTranslate(SurfaceViewSyncTest.java:312)
at java.lang.reflect.Method.invoke(Native Method)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:148)
at org.junit.internal.runners.statements.FailOnTimeout$CallableStatement.call(FailOnTimeout.java:145)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.lang.Thread.run(Thread.java:764)
</StackTrace>
        </Failure>
      </Test>
    </TestCase>
    <TestCase name="android.view.cts.WindowTest">
      <Test result="fail" name="testSetLocalFocus">
        <Failure message="Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details">
          <StackTrace>Test failed to run to completion. Reason: 'Instrumentation run failed due to 'Process crashed.''. Check device logcat for details</StackTrace>
        </Failure>
      </Test>
      </TestCase>
    </Module>
  </Result>
